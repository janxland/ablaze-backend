/*
 Navicat Premium Data Transfer

 Source Server         : 玩客云服务器
 Source Server Type    : MySQL
 Source Server Version : 80030
 Source Host           : onecloud:3306
 Source Schema         : Ablaze

 Target Server Type    : MySQL
 Target Server Version : 80030
 File Encoding         : 65001

 Date: 19/01/2024 19:39:16
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for album
-- ----------------------------
DROP TABLE IF EXISTS `album`;
CREATE TABLE `album`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '用户ID',
  `sort_id` int NOT NULL DEFAULT 1 COMMENT '分类ID',
  `label_id` int NOT NULL DEFAULT 1 COMMENT '标签ID',
  `album_cover` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '封面',
  `album_title` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '博文标题',
  `album_item` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '影集',
  `album_desc` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '影集介绍',
  `album_address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '地点',
  `album_device` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '设备',
  `keywords` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '关键词',
  `permission` int NOT NULL DEFAULT 0 COMMENT '可见权限',
  `view_count` int NOT NULL DEFAULT 0 COMMENT '浏览量',
  `like_count` int NOT NULL DEFAULT 0 COMMENT '点赞数',
  `view_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否可见[0:否，1:是]',
  `password` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '密码',
  `recommend_status` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否推荐[0:否，1:是]',
  `comment_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用评论[0:否，1:是]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最终修改时间',
  `update_by` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '最终修改人',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of album
-- ----------------------------

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '用户ID',
  `sort_id` int NOT NULL DEFAULT 1 COMMENT '分类ID',
  `label_id` int NOT NULL DEFAULT 1 COMMENT '标签ID',
  `collection_id` int(4) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '合集ID',
  `article_cover` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '封面',
  `article_title` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '博文标题',
  `article_preview` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '博文预览',
  `article_content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '博文内容',
  `tips` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '密码提示',
  `keywords` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '关键词',
  `permission` int NOT NULL DEFAULT 0 COMMENT '可见权限',
  `view_count` int NOT NULL DEFAULT 0 COMMENT '浏览量',
  `like_count` int NOT NULL DEFAULT 0 COMMENT '点赞数',
  `view_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否可见[0:否，1:是]',
  `password` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '密码',
  `recommend_status` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否推荐[0:否，1:是]',
  `comment_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用评论[0:否，1:是]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最终修改时间',
  `update_by` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '最终修改人',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 91 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (28, 1, 4, 14, NULL, 'https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/image/c582077aefe64078976e5437a4a16d7c_th%5B0%5D.png', '浅学乐理，又是毫无收获的一天emmm。', '<p style=\"text-align: center;\"><span style=\" \"><strong>【&mdash;&mdash;该文字无预览内容&mdash;&mdash;】</strong></span></p>', '\r\n<div style=\"text-align:left\">\r\n<p style=\"text-align: center;\">\r\n    <iframe name=\"MUSIC\" playlist=\"513207088\" width=80% height=\"auto\" frameborder=\"no\" scrolling=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" src=\"/v/JMusic/index.html\"></iframe>\r\n</p>\r\n<p style=\"margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); text-align: justify; font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\"><span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">1、音符<span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 18px; font-weight: 700; text-align: justify; white-space: normal;\">（<a href=\"https://www.bilibili.com/video/av19160407/?p=2\" target=\"_blank\">传送门</a></span></span>：表示音的长短和高低的符号叫音符。</span>\r\n</p>\r\n<p style=\"margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); text-align: justify; font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\">简单的简谱认识：比如在简谱中真正表示音的长短的基本记号应是“<span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">X</span>”及它的<span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">增时线</span>和<span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">减时线，</span>也就是说一个单纯的X是四分音符。在基本符号“X”的下面加一减时线，叫八分音符。加两条减时线，叫十六分音符，一次类推。在基本符号“X”的后面加一条增时线，叫二分音符，加两条叫附点二分音符。下图为简谱与五线谱各音符时值的对比图。</span>\r\n</p>\r\n<div class=\"img-container\" style=\"margin-top: 30px; font-family: arial; font-size: 12px; white-space: normal;\">\r\n    <img class=\"normal\" width=\"80%\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/old/%E6%89%93%E6%8B%8D%E5%AD%902.png\" style=\"border: 0px; display: block; margin-right: auto; margin-left: auto;\">\r\n</div>\r\n<p style=\"margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); text-align: justify; font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\"><span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">2、切分节奏（<a href=\"https://www.bilibili.com/video/av19160407/?p=3\" target=\"_blank\">传送门</a></span>：切分节奏是旋律在进行当中，由于音乐的需要，改变常规的节奏规律，音符的强拍和弱拍发生了变化和强调，而出现的节奏变化</span>\r\n</p>\r\n<p style=\"text-align: center; margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\"><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/old/%E6%8B%8D%E5%AD%90%E5%BC%BA%E5%BC%B1%E5%85%B3%E7%B3%BB.png\" style=\"width: 80%;\"></span>\r\n</p>\r\n<p style=\"text-align: center; margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); font-family: arial; white-space: normal;\">\r\n    <br>\r\n</p>\r\n<p style=\"margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); text-align: justify; font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\"><span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">3、拍子强弱<span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 18px; font-weight: 700; text-align: justify; white-space: normal;\">（<a href=\"https://www.bilibili.com/video/av19160407/?p=5\" target=\"_blank\">传送门</a></span></span>：</span>\r\n</p>\r\n<p style=\"margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); text-align: justify; font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\">什么叫节拍，节拍是指相同的时间片段内，重音与非重音有规律的循环，表示乐曲间之间的强弱关系，就像过去古人喊号子干活，一起一落，高低起伏有规律。基本上在所有乐曲中，小节的第一拍都是重拍，特殊的曲子有标记，强弱标记，f是强，前面加个m表示中强，p是弱。</span>\r\n</p>\r\n<div class=\"img-container\" style=\"margin-top: 30px; font-family: arial; font-size: 12px; white-space: normal;\">\r\n    <p style=\"text-align: center;\">\r\n        <img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/old/%E6%89%93%E6%8B%8D%E5%AD%902.png\" style=\"width: 80%;\">\r\n    </p>\r\n    <p style=\"text-align: center;\">\r\n        <img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/old/%E6%8B%8D%E5%AD%90%E5%BC%BA%E5%BC%B1.png\" style=\"width:80%;\">\r\n    </p>\r\n    <p style=\"text-align: center;\">\r\n        <img src=\"https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=3258683071,117913382&amp;fm=173&amp;app=25&amp;f=JPEG?w=544&amp;h=74\" style=\"text-align: center; white-space: normal; display: inline-block;\">\r\n    </p>\r\n    <p></p>\r\n</div>\r\n<p></p>\r\n<p style=\"margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); text-align: justify; font-family: arial; white-space: normal;\">\r\n    <span class=\"bjh-p\"><span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">4、反复记号<span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 18px; font-weight: 700; text-align: justify; white-space: normal;\">（<a href=\"https://www.bilibili.com/video/av19160407/?p=6\" target=\"_self\">传送门</a></span></span>：音乐反复记号，是为了节省乐谱的空间，方便乐谱的书写而采取的省略方法的记录形式。主要分为D.C. 记号，D.S. 记号,段落反复记号和反复跳越记号。应用广泛，属于基本乐理。</span>\r\n</p>\r\n<p style=\"text-align: center; margin-top: 22px; margin-bottom: 0px; line-height: 24px; color: rgb(51, 51, 51); font-family: arial; white-space: normal;\">\r\n    <img style=\"width:80%;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/old/%E5%8F%8D%E5%A4%8D%E8%AE%B0%E5%8F%B7.png\">\r\n</p>\r\n<p style=\"text-align: center; \">\r\n    <span class=\"bjh-strong\" style=\"font-size: 18px; font-weight: 700;\">下面来欣赏一下音乐</span>	\r\n</p>\r\n<p>\r\n    <br>\r\n</p>\r\n<p>\r\n    <br>\r\n</p>\r\n<h2 style=\"margin-top: 10px; margin-bottom: 10px; font-size: 21px; line-height: 1.5; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 18px; font-weight: 700; text-align: justify; white-space: normal;\">5、理科男眼中的乐理</span><span style=\"color:#7f7f7f\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 18px; font-weight: 700; text-align: justify; white-space: normal;\">（<a href=\"https://www.cnblogs.com/devymex/p/3385179.html\" target=\"_blank\">传送门</a></span></span>\r\n</h2>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\">音乐是由声音构成的艺术，而声音是一个宽泛的概念，泛指人耳可以感知的声波。声波是一种机械波，由物体（声源）振动，带动空气振动，从而形成声波。<span style=\"line-height: 1.5;\">声波</span>在一段时间内波峰的个数称为它的频率，标准计量单位为Hz（赫兹），即一秒内波峰的个数。声波振幅的大小体现了声音的强弱，也就是音量的大小。声音以某种规律进行频率和强弱的变化就形成了音乐，我们要研究的就是这“某种某律”。然而在所有乐理书上都没有给出“音”的定义，可是围绕“音”展开的各种概念却是名目繁多，令人眼花缭乱。为了理性化思考得以继续，我在这里斗胆给出音的定义，若您有高见还望不吝赐教。</span>\r\n</p>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\"><strong><span style=\"line-height: 1.5; color: rgb(255, 0, 0);\">音</span></strong>：可被人类的听觉所感知的一段时间内的声波。通常我们可以用一段声波的波形来表示一个音。</span>\r\n</p>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\"><span style=\"line-height: 1.5; color: rgb(255, 0, 0);\"><strong>音源</strong></span>：能够产生音的设备/装置/器官等，比如<span style=\"line-height: 1.5;\">乐器、声带等。</span></span>\r\n</p>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\">音源的整体或某个部分振动产生声波并持续一段时间（哪怕很短），空气就会将这一段<span style=\"line-height: 1.5;\">声波</span>传导至人耳。比如：大喊一声，敲一下水管，爆炸，婴儿哭闹等等。的确，音的定义非常宽泛，但乐理仅研究与音乐相关的音。那么音乐又是什么呢？音乐是艺术范畴的名词，无法给出严格的定义。如果非要用理工科的思维方式来理解，那只能这样说：</span>\r\n</p>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\"><strong><span style=\"line-height: 1.5; color: rgb(255, 0, 0);\">音乐</span></strong>，就是由一个或多个音在相同或不同的时间内<span style=\"line-height: 1.5;\">被产生</span>，相互叠加所形成的一段声波<strong>。</strong></span>\r\n</p>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\">噪音和音乐的区别是因人而异的，老奶奶认为是噪音的摇滚乐在小年青耳朵里就是兴奋剂，而科学追求的是放之四海皆准的真理，因此这个定义也显得不那么严谨，似乎也没办法做出更好的定义了。现在还出现了一些另类音乐，比如噪声音乐和无声音乐，在我眼里这TM就是瞎扯淡，咱不去管它。</span>\r\n</p>\r\n<p style=\"font-size: 13px; line-height: 1.5; margin: 10px auto; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; white-space: normal;\">\r\n    <span style=\"line-height: 1.5; font-size: 15px;\">为了简化研究对象，后文中提到的音都特指由传统乐器作为音源发出的音。</span>\r\n</p>\r\n</div>', NULL, NULL, 0, 30, 0, 1, NULL, 1, 1, '2019-07-22 12:28:02', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (29, 1, 4, 14, NULL, '/upload/images/20190705/9421562293935395.jpg', '习得【奇技淫巧】憧憬大佬一波', '<p style=\"text-align: center;\"><span style=\" \"><strong>【&mdash;&mdash;该文字无预览内容&mdash;&mdash;】</strong></span></p>', '<div style=\"text-align:left;\"><p>    <strong><span style=\"font-size: 18px; line-height: 30px;\"><span style=\"color:#3f3f3f\">*今天使用奇技淫巧来写篇博客，来自：</span><a target=\"_blank\"href=\"https://www.jianshu.com/p/83a84445d967\" target=\"_blank\" title=\"奇技淫巧\" style=\"\"><span style=\"color:#953734\">链</span></a></span></strong></p><p>    <strong><span style=\"font-size:15px;line-height:30px;color:#3f3f3f\">&nbsp; &nbsp; &nbsp; 昨天听了一UP制作的电音，实在太震惊了（这机子绝对贵！啊！令人秃头的桌面 ↓</span></strong></p><div style=\"width: 80%;position:relative;margin:auto;\">    <div style=\"width: 100%; height: 0;padding-top: 75%;\">        <p>            <br/>        </p>        <p>            <iframe style=\"width:100%;height:100%;position:absolute;left:0;top:0;\" src=\"//player.bilibili.com/player.html?aid=56941086&cid=99453836&page=1\" frameborder=\"no\"></iframe>        </p><iframe style=\"width:100%;height:100%;position:absolute;left:0;top:0;\" src=\"//player.bilibili.com/player.html?aid=56941086&cid=99453836&page=1\" frameborder=\"no\"> </iframe>    </div></div><p>    <strong><span style=\"font-size:15px;line-height:30px;color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;没想到女生也能玩这些令人秃头的东西。一想到我与她年龄绝对差值居然达到1，趴在床上的我就闲不下来了，兴冲冲地打开了电脑...</span></strong></p><p>    <span style=\"color:#3f3f3f\"><span style=\"font-size: 15px;\"><strong><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px; color: rgb(63, 63, 63);\">&nbsp; &nbsp; &nbsp; &nbsp;</span></strong>这里搜集了一些大佬，希望以后笨拙的我也能够与他们敞开心扉。</strong></span></span></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;· </span><a target=\"_blank\"href=\"https://space.bilibili.com/1563010\" target=\"_self\" title=\"go\" style=\"\"><span style=\"color:#953734\">虎视眈眈助手酱</span></a><span style=\"color:#3f3f3f\">(uid1563010)：全能？</span></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;·&nbsp;</span><span id=\"h-name\" style=\"\"><a target=\"_blank\"href=\"https://space.bilibili.com/35031847\" target=\"_blank\" title=\"go\" style=\"\"><span style=\"color:#953734\">艾客Tivize</span></a><span style=\"color:#3f3f3f\">(uid35031847)：AE</span></span><span style=\"color:#3f3f3f\"><span class=\"icon\" id=\"h-ceritification\"></span></span></span></strong></span></strong></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;·&nbsp;</span><span id=\"h-name\" style=\"\"><a target=\"_blank\"href=\"https://space.bilibili.com/33902743\" target=\"_blank\" title=\"go\" style=\"\"><span style=\"color:#953734\">派三叔iPython3</span></a><span style=\"color:#3f3f3f\">(uid33902743)：程序员、吉他、..</span></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;·&nbsp;</span><span id=\"h-name\" style=\"\"><a target=\"_blank\"href=\"https://space.bilibili.com/344849038\" target=\"_blank\" title=\"go\" style=\"\"><span style=\"color:#953734\">YJango</span></a><span style=\"color:#3f3f3f\">(uid344849038)：博士、学习法、..</span></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\"><span style=\"white-space: normal;\"></span></span><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;·&nbsp;</span><span id=\"h-name\" style=\"\"><a target=\"_blank\"href=\"https://space.bilibili.com/10783631\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">魔法小分队队长</span></a><span style=\"color:#3f3f3f\">(uid10783631)：</span><strong style=\"color: rgb(63, 63, 63); white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px; color: rgb(63, 63, 63);\"><strong><span style=\"line-height: 30px;\">全能？</span></strong></span></strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"\"><span style=\"line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;·&nbsp;</span><span id=\"h-name\" style=\"\"><a target=\"_blank\"href=\"https://space.bilibili.com/24189693\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">刘嘉卓2004</span></a><span style=\"color:#3f3f3f\">(uid24189693)：</span><strong style=\"color: rgb(63, 63, 63);\"><span style=\"line-height: 30px;\"><strong><span style=\"line-height: 30px;\">吉他贼叼</span></strong></span></strong></span></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;· </span><a target=\"_blank\"href=\"https://space.bilibili.com/363584502\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">表象的本质</span></a><span style=\"color:#3f3f3f\">(uid363584502)：科普</span></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;· </span><a target=\"_blank\"href=\"https://space.bilibili.com/193147738\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">幻海航行</span></a><span style=\"color:#3f3f3f\">(uid193147738)：科普小说可视化</span></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;· </span><a target=\"_blank\"href=\"https://space.bilibili.com/24170\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">鬼畜有害基佬</span></a><span style=\"color:#3f3f3f\">(uid24170)：游戏、前后端、vue.js</span></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp;</span><strong style=\"white-space: normal;\"><span style=\"color: rgb(63, 63, 63); font-size: 15px; line-height: 30px;\">&nbsp; &nbsp; &nbsp; &nbsp;·</span><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#953734\"> <a target=\"_blank\"href=\"https://space.bilibili.com/1850091\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">Jannchie见齐</span></a></span><span style=\"color:#3f3f3f\">(uid1850091)：JavaScript、前端、数据可视化、绘画</span></span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px; color: rgb(63, 63, 63);\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px; color: rgb(63, 63, 63);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;....</span></strong></span></strong></p><p>    <strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><strong style=\"white-space: normal;\"><span style=\"font-size: 15px; line-height: 30px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 具体 </span><a target=\"_blank\"href=\"https://space.bilibili.com/11363292/fans/follow?tagid=135856\" target=\"_blank\" style=\"\"><span style=\"color:#953734\">这里</span></a><span style=\"color:#3f3f3f\"> 还有哦。</span></span></strong></span></strong></p></div>', NULL, NULL, 0, 16, 0, 1, NULL, 1, 1, '2019-07-22 12:27:52', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (31, 1, 4, 14, NULL, 'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1923635935,1542492018&fm=26&gp=0.jpg', '最近捣鼓的新玩意儿（心疼', '<p style=\"text-align: center;\"><span style=\" \"><strong>【&mdash;&mdash;该文字无预览内容&mdash;&mdash;】</strong></span></p>', '<div style=\"text-align: left;font-size:18px;line-height:24px;letter-spacing:0.2px;\">    <p>        <span style=\"color:#262626\">一、B站互动视频功能 （</span><a href=\"https://search.bilibili.com/all?keyword=%E4%BA%92%E5%8A%A8%E8%A7%86%E9%A2%91\" target=\"_blank\" style=\"\"><span style=\"color:#7030a0\"><strong>链接</strong></span></a>    </p>    <p>		<span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">&nbsp; &nbsp; &nbsp;最近，视频互动功能在B站开启了，我开始了一波强势围观，但。。。。外链分享并没有什么软用，具体请进<span style=\"color:#7030a0\"><a href=\"https://www.bilibili.com/video/av57943285?from=search&seid=8760100083740649785\" target=\"_blank\">链接</a></span></span>		<br/>    </p>    <div style=\"text-align: center;\">        <iframe src=\"//player.bilibili.com/player.html?aid=57943285&cid=101114853&page=1\" frameborder=\"no\"></iframe>    </div>    <p>        <span style=\"color:#262626;\">二、最近换了块 RX580 显卡（可恶，我的眼角为什么会有眼泪</span>    </p><span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\"><p>        &nbsp; &nbsp; &nbsp;最近，我做了笔交易 ：【1000+¥】&nbsp; 换了 【蓝宝石RX580 8G 白金】。我的老显卡终于可以退休啦！我的钱也终于飞了<img src=\"http://img.baidu.com/hi/jx2/j_0008.gif\"/>    </p>    <p>        我玩了一波游戏，高画质是真的爽，玩着玩着，我的机箱就开始散热了！由于今天下雨气温骤降，这热浪我还是能感觉到的啊！    </p>    <p>        虽然说温度没有超过网友所说的70°C，但我还是怕的退出了游戏。。。可能是RX580功耗高劣势的问题吧。    </p></span>    <p>        <br/>    </p>    <p>        <span style=\"color:#262626;\">三、我开始使用</span><span style=\"color:#7030a0\"><strong><a href=\"https://www.ximalaya.com/\" target=\"_blank\">喜马拉雅FM</a></strong></span>    </p>    <p>        <span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">&nbsp; &nbsp; &nbsp;最近，我想要快速获取科普知识，提高效率，但找不到好的方法和平台，偶然间想到了听电台的主意，就立即想到前几年使用的喜马拉雅</span>    </p>    <p>        <span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">获取知识变快了呢！<img src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/></span>    </p>    <p style=\"text-align: center;\">        <iframe src=\"https://www.ximalaya.com/thirdparty/player/album/player.html?id=12580785&type=red\" frameborder=\"0\"></iframe>    </p>    <p style=\"text-align: center;\">        <br/>    </p>    <p>        <br/>    </p>    <p>        <span style=\"color:#262626;\">四、</span>以图搜番（<strong><span style=\"color:#7030a0\"><a href=\"https://trace.moe/?url=http%3A%2F%2Fimg.mp.itc.cn%2Fupload%2F20161225%2F31a2ea6a039e4ec18b9fac4de230a0d9_th.jpg\" target=\"_blank\">链接</a></span></strong>    </p>    <p>        <span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">&nbsp; &nbsp; &nbsp;这玩意也是听说很久了，但最近想具体了解一下原理。这里提一下</span>    </p>    <p>        <br/>    </p>    <p>        <span style=\"color:#262626;\">五、</span>P站？？？！！！（自行了解    </p>    <p>        <span style=\"font-size: 15px; line-height: 20px;\"><span style=\"color:#3f3f3f\">&nbsp; &nbsp; &nbsp;</span><span style=\"text-decoration: line-through;color:#e36c09\">Pornhub</span><span style=\"color:#548dd4\">pixiv</span></span><span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">（<img src=\"http://img.baidu.com/hi/jx2/j_0012.gif\" style=\"width: 38px; height: 35px;\"/>）</span>    </p>    <p>        <span style=\"color:#262626;\">六、</span>V P N 翻墙<span style=\"font-size: 20px; white-space: normal;\">（自行了解</span>    </p>    <p>        <span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">&nbsp; &nbsp; &nbsp;很多VPN都是在变相赚钱，真正免费不会太多。这里推荐：小明、Turbo</span>    </p>    <p>        <span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">大家可以熟悉使用 【谷歌黑语法】 搜索哦，会避开敏感词。</span>    </p>    <p>        <span style=\"font-size: 20px; white-space: normal;\"><br/></span>    </p>    <p>        <span style=\"color: rgb(38, 38, 38);\">七、<最近我看（追）了番剧：冰海战纪、实况主、鬼灭、地邂、平凡最强、COP CRAFT</span>    </p>    <p>        <br/>    </p>    <p>        <span style=\"color: rgb(38, 38, 38);\">八、最近我看（追）了漫画：实况主、进巨、辉夜大小姐、</span>    </p>    <p>        <span style=\"color: rgb(38, 38, 38);\"><br/></span>    </p>	<span style=\"color:#3f3f3f;font-size:15px;line-height:20px;\">&nbsp; &nbsp;&nbsp; &nbsp;工作繁忙，全程1.25倍观看，无法专心追番，不敢入那些肉番，担心停不下来。。</span></div>', NULL, NULL, 0, 16, 0, 1, NULL, 1, 1, '2019-07-22 12:26:52', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (33, 1, 4, 13, NULL, 'https://c-ssl.duitang.com/uploads/blog/202202/28/20220228103448_61da1.jpg', '从“达克效应”看学习。', '<p><span style=\" \">无知要比知识更容易产生自信（Ignorance more frequently begets confidence than does knowledge）&mdash;&mdash;达尔文</span></p>\n<p><span style=\" \">最近的学习很是乏味，闲余之际写一篇文，警醒以后的自己。</span></p>', '<p style=\"padding-left: 25px;\"><span style=\" \">无知要比知识更容易产生自信（Ignorance more frequently begets confidence than does knowledge）&mdash;&mdash;达尔文</span></p>\n<p style=\"padding-left: 25px;\"><span style=\" \">最近的学习很是乏味，闲余之际写一篇文，警醒以后的自己。Music：</span></p>\n<div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\">\n<div class=\"mceTmpl\"><input id=\"hideCheckInput\" class=\"hideCheckInput\" type=\"checkbox\" />\n<div class=\"hideContext\">\n<div><iframe src=\"/v/JMusic/#/?playlist=486899256\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\" data-mce-fragment=\"1\"></iframe></div>\n</div>\n<label class=\"check_label\" for=\"hideCheckInput\"></label></div>\n</div>\n<h3><span style=\"color: #000000;\">最近学习与心得</span></h3>\n<p style=\"padding-left: 25px;\"><span style=\" \">①web编程遇到瓶颈，遇到非常大量的专业词语与高门槛框架，老师的课面向对象基本是已就业人士，一口一个\"工作\"、\"面试\"、\"BAT\"早已击溃我的学习信心。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\" \">②机器学习门槛实在太高，仅仅高一数学基础很难吃透且学习效率低下，只能用Python爬爬虫，这又打击一波我的学习信心。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\" \">③绘画方面，练习少的可怜，身边的同龄人的绘画技术都有明显进步，而我却因为①②摸到笔就想扔掉。好在疫情在家空闲，①②学习停滞、每天不耐烦的摸鱼还是可以的（<span style=\"text-decoration: line-through;\">完全没有要勾线画全的态度</span></span></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511858.png\" referrerpolicy=\"no-referrer\" alt=\"想画手\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511105.png\" referrerpolicy=\"no-referrer\" alt=\"太丑了\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511940.png\" referrerpolicy=\"no-referrer\" alt=\"想画画唇\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511001.png\" referrerpolicy=\"no-referrer\" alt=\"想画本子\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511190.png\" referrerpolicy=\"no-referrer\" alt=\"好难\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511273.png\" referrerpolicy=\"no-referrer\" alt=\"试图上色\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511360.png\" referrerpolicy=\"no-referrer\" alt=\"不知道是啥\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511433.png\" referrerpolicy=\"no-referrer\" alt=\"透视问题可大了\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511525.png\" referrerpolicy=\"no-referrer\" alt=\"不会上色\"></p>\n<p><img src=\"https://cos.roginx.ink/pic-upload/202308201511605.png\" referrerpolicy=\"no-referrer\" alt=\"不会上色，什么质感也画不出来\"></p>\n<p style=\"padding-left: 25px;\"><span style=\" \">...</span></p>\n<p>&nbsp;</p>\n<h3><span style=\"color: #000000;\">开胃菜&mdash;&mdash;达克效应</span></h3>\n<p style=\"padding-left: 25px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;  \">达克效应全称为邓宁-克鲁格效应（Dunning-Kruger effect）。它是一种认知偏差现象，指的是能力欠缺的人在自己欠考虑的决定的基础上得出错误结论，但是无法正确认识到自身的不足，辨别错误行为。这些能力欠缺者们沉浸在自我营造的虚幻的优势之中，常常高估自己的能力水平，却无法客观评价他人的能力。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-family: \'Microsoft YaHei\', \'Helvetica Neue\', SimSun; font-size: 14px; text-indent: 28px;\">举例来说，刚学会开车的人往往对自己的驾驶技术水准判断不准确；临床经验很糟糕的医生，也最不能察觉到自身的知识浅薄。</span></p>\n<p><span style=\" \"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://pic4.zhimg.com/v2-e46637e735c709de3b728c195535592a_r.jpg\" width=\"90%\" /></span></p>\n<p><span style=\" \">由&ldquo;达克效应曲线函数&rdquo;可见：</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;  \">当&ldquo;达克效应&rdquo;使这些能力欠缺者沉浸在自我营造的虚幻优势之中时，会出现以下情况：</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;  \">1. 能力差的人会高估自己的水平及能力。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;  \">2. 能力差的人不能正确的认识到其他真正具有此能力的人的水平。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;  \">3. 能力差的人无法正视自身的不足，更不能了解不足的程度。 </span></p>\n<p style=\"padding-left: 25px;\"><span style=\"box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;  \">4. 如果能力差的人能够经过恰当训练大幅度提高能力水平，他们最终会认知到且能承认他们之前的无能程度。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif;\"><span style=\"font-size: 13px; white-space: pre-wrap;\">可见&ldquo;达克效应&rdquo;难以避免，但我们可以合理利用：</span></span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif;\"><span style=\"font-size: 13px; white-space: pre-wrap;\">1. 前期不要熄灭自己的优越感，适当地让它成为学习的动力。</span></span></p>\n<p style=\"padding-left: 25px;\"><span style=\" \"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif;\"><span style=\"font-size: 13px; white-space: pre-wrap;\">2. </span></span><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;\">利用好奇心与求知欲驱使自己去提高。</span></span></p>\n<p style=\"padding-left: 25px;\"><span style=\" \"><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;\">3. 认识到自己在绝望之谷时，不要再保持自视清高的态度，虚心询问业内人士</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;\">。</span></span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;\">4. 对所在圈子有个概念和范围，掂量。谁在愚昧之山，谁在开悟之道，心中要有个数。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;\">5. 不要经常把努力放口边，当你只说曾经怎样地努力而没有新的成就与成长，那么离无心向学只差一步了。</span></p>\n<p><span style=\"  font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', system-ui, Roboto, \'Helvetica Neue\', Arial, sans-serif; font-size: 13px; white-space: pre-wrap;\"><img style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, \'Open Sans\', \'Helvetica Neue\', sans-serif; display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload/202308201418578.png\" alt=\"&auml;&ordm;&ordm;&ccedil;&plusmn;&raquo;&aelig;&ccedil;&raquo;&acute;&aring;&plusmn;&eacute;&aelig;&sect;.png (923&Atilde;1213)\" width=\"90%\" /></span></p>\n<p>&nbsp;</p>\n<h3><span style=\"color: #000000;\">学会学习</span></h3>\n<p style=\"padding-left: 25px;\"><span style=\" \">推荐观看<a style=\" \" href=\"https://www.bilibili.com/video/BV1d4411r7ZP?from=search&amp;seid=9340135790891923553\" target=\"_blank\" rel=\"noopener\">《学习观》</a>：一个根据深度学习进行探讨的学习观。</span></p>\n<p style=\"padding-left: 25px;\"><strong><span style=\" \">学会自律、自觉</span></strong></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-family: arial; font-size: 10pt; text-align: justify;\">一个人，越自律，越成功。多少人曾说过：&ldquo;每天读一小时书&rdquo;、&ldquo;每天坚持锻炼身体&rdquo;、&ldquo;坚持正确坐姿&rdquo;...但计划永远是计划，从来都不会付诸行动，明天永远是明天，明日复明日，明日何其多？</span></p>\n<p style=\"text-align: justify; padding-left: 25px;\"><span style=\"  font-family: arial; font-size: 10pt;\">可见无论做什么学什么，都要保持自律：当看到群友在闲聊时，自己又插不上话又想学习，就不要犹豫，马上关掉窗口马上着手你的计划。</span></p>\n<p style=\"padding-left: 25px;\"><strong><span style=\" \">学会记录、总结、提高效率</span></strong></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">方式有很多，举例比建议会更好：</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\"><a style=\" \" href=\"https://space.bilibili.com/11363292/favlist?fid=61962492&amp;ftype=create\" target=\"_blank\" rel=\"noopener\">①在信息平台的收藏与关注...</a></span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">②工具的运用：站长工具、百度AI人工智能、fasttools...</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">③XMind思维导图、Processon在线、RSS信息聚合...</span></p>\n<p style=\"padding-left: 25px;\"><strong><span style=\" \">学会吸收、欣赏</span></strong></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">学会欣赏优雅、优质的内容，实际上也是心智，三观上的成长。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">①不吝啬点赞、夸耀，给信息平台一个属于自己的数据反馈，让它们更好的给你推送有助于你的内容。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">②不要别人发心得或作品，你就认为别人在炫耀，否则你会失去进一步了解的机会。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">③自己能力未够之前（比如作为学生的我），在时事上不要发过于绝对的言论。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">...</span></p>\n<p style=\"padding-left: 25px;\"><strong><span style=\" \">学会判断、求实</span></strong></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">卢本伟事件、手机圈的撕逼、饭圈的造谣与辟谣...</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">①不跟风，不要人云亦云。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">②对线时，对方顾左右而言他，请立即停止对线，你已经不可能说服对方了，不要浪费你的时间。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">③不要把事情非黑即白得划分，从法律、道德、利益出发，判断对方观点是否合理。</span></p>\n<p style=\"padding-left: 25px;\"><span style=\"  font-size: 10pt;\">④求实。</span></p>\n<p>&nbsp;</p>\n<h3><span style=\"color: #000000;\">推荐文章</span></h3>\n<p><span style=\" \"><a style=\" \" href=\"http://118.89.30.137/#/xnews/26\" target=\"_blank\" rel=\"noopener\"> 有哪些简洁的人生建议</a></span></p>\n<p><span style=\" \"><a style=\" \" href=\"http://118.89.30.137/#/xnews/28\" target=\"_blank\" rel=\"noopener\"> 中国最牛的50个潜规则，个个都值得收藏</a></span></p>\n<p><span style=\" \"><a style=\" \" href=\"http://118.89.30.137/#/xnews/25\" target=\"_blank\" rel=\"noopener\"> 堪比人生外挂！教你厚黑心理技巧</a></span></p>\n<p><span style=\" \"><a style=\" \" href=\"http://118.89.30.137/#/xnews/22\" target=\"_blank\" rel=\"noopener\"> 读《思考，快与慢》，提升思考力</a></span></p>\n<p>&nbsp;</p>\n<h3><span style=\"color: #000000;\">结尾</span></h3>\n<p><span style=\" \">最后以乔布斯在斯坦福大学毕业典礼上致辞中的最后一句话结束文章：</span></p>\n<p><span style=\"color: #236fa1;\"><strong>stay hungry,stay foolish.</strong></span></p>\n<p><span style=\" \"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://quotefancy.com/media/wallpaper/3840x2160/1700768-Steve-Jobs-Quote-Stay-hungry-Stay-foolish.jpg\" alt=\"&aelig;&plusmn;&ccedil;&yen;&aring;&brvbar;&aelig;&cedil;&acute;&iuml;&frac14;&egrave;&aring;&iquest;&egrave;&yen;&aelig;.png (516&Atilde;848)\" width=\"90%\" /></span></p>', NULL, NULL, 0, 116, 0, 1, NULL, 1, 1, '2020-04-06 21:14:26', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (34, 1, 4, 13, NULL, 'https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/2020/5/1/1588330991516.jpg', 'Tomcat Session共享 | 纯CSS隐藏内容 | TinyMCE模板解除内联、块元素关系', '<p><strong>Tomcat 不同war间的SECTION共享。</strong><span style=\" \">前几天终于下定决心学习框架，主要用spring boot+mybatis处理点修改和删除的功能，这也为Tomcat SECTION之间的沟通问题埋下伏笔。</span><span style=\" \">遇到的问题是这样的：分出来的B应用处理的功能都需要登录用户的ID，可SECTION全储存在了原始集成的A应用。可以使用redis、mysql等数据库做校验。但我还是想用SECTION的方式验...</span></p>', '**咱按照惯例，来点音乐。**\n\n<tinytemplate><div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\"><div class=\"mceTmpl\"><input id=\"hideCheckInput\" class=\"hideCheckInput\" type=\"checkbox\"><div class=\"hideContext\"><div><iframe src=\"/v/JMusic/#/?playlist=2547697280\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\"></iframe></div></div><label class=\"check_label\" for=\"hideCheckInput\"></label></div></div></tinytemplate>\n\n> 传送：\n> \n> [Tomcat 不同war间的SESSION共享。](#SECTION01)\n> \n> [纯CSS隐藏内容并添加至TinyMCE的模板](#SECTION02)\n> \n> [TinyMCE模板解除内联、块元素关系](#SECTION03)\n\n**<a id=\"SECTION01\"></a>一、Tomcat 不同war间的SESSION共享。**\n\n前几天终于下定决心学习框架，主要用spring boot+mybatis处理点修改和删除的功能，这也为Tomcat SESSION之间的沟通问题埋下伏笔。\n\n遇到的问题是这样的：分出来的B应用处理的功能都需要登录用户的ID，可SESSION全储存在了原始集成的A应用。可以使用redis、mysql等数据库做校验。但我还是想用SESSION的方式校验。\n\n> 修改server.xml，将A、B项目放在同一Host，添加属性SESSIONCookiePath=\"/\"，且保证SESSIONCookieName一致。\n\n    <Host name=\"localhost\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\">\n    <Context path=\"/A\" docBase=\"C:\\Program Files\\Apache Software Foundation\\Tomcat 8.5\\webapps\\ROOT\" \n    	debug=\"9\" reloadable=\"true\" crossContext=\"true\" SECTIONCookieName=\"janxSECTION\" SECTIONCookiePath=\"/\" />\n    <Context path=\"/B\" docBase=\"C:\\Program Files\\Apache Software Foundation\\Tomcat 8.5\\webapps\\demo-0.0.1-SNAPSHOT\" \n    	debug=\"9\" reloadable=\"true\" crossContext=\"true\" SECTIONCookieName=\"janxSECTION\" SECTIONCookiePath=\"/\" />\n    </Host>\n\n> 修改context.xml，加入Manager.Store标签，并自定义SESSION储存目录：directory，如下：\n\n    <Context SECTIONCookiePath=\"/\">\n        <WatchedResource>WEB-INF/web.xml</WatchedResource>\n        <WatchedResource>${catalina.base}/conf/web.xml</WatchedResource>\n        <Valve className=\"org.apache.catalina.valves.PersistentValve\"/>\n        <Manager className=\"org.apache.catalina.SECTION.PersistentManager\">\n            <Store className=\"org.apache.catalina.SECTION.FileStore\" directory=\"${catalina.base}/temp/SECTIONs\"/>\n        </Manager>\n    </Context>\n\n这样就完成啦！\n\n**<a id=\"SECTION02\"></a>二、纯CSS隐藏内容并添加至TinyMCE的模板**\n\n> 扩展：可在Manager标签上添加如下属性：\n> \n> saveOnRestart－服务器关闭时，是否将所有的SECTION保存到文件中；\n> \n> maxActiveSECTIONs－可处于活动状态的SECTION数；\n> \n> minIdleSwap/maxIdleSwap－SECTION处于不活动状态最短/长时间(s)，sesson对象转移到File Store中；\n> \n> maxIdleBackup－超过这一时间，将SECTION备份。(－1表示没有限制)\n\n隐藏内容功能效果如上。话不多说，直接上代码。\n\n这个功能主要由<label>标签内联checkbox实现（已省略无关内容）\n\n> html代码：\n\n    <div class=\"mceTmpl\">        \n    	<label class=\"check_label\">\n    		<input class=\"hideCheckInput\" type=\"checkbox\"  />\n    		<div class=\"hideBox\">\n    			<div class=\"hideContext\">\n    				这里是要缩放的内容\n    			</div>\n    		</div>\n    	</label>\n    </div>\n\ncss代码：\n\n    .check_label{\n        box-sizing: border-box;\n        position: relative;\n        pointer-events: none;\n        width:100%;\n    }\n    .hideBox{\n        position: relative;\n        display: block;\n        height:64px;\n        width:100%;\n        pointer-events: none;\n    }\n    .hideContext{\n        position: relative;\n        box-sizing: border-box;\n        width:100%;\n        height:100%;\n        overflow: hidden;\n        pointer-events: all;\n    }\n    .hideBox:hover::after{\n        font-weight: 600;\n        color:#444;\n    }\n    .hideBox::after{\n        content:\'显示/隐藏内容\';\n        width:100%;\n        position: absolute;\n        bottom: -1.2em;left:0;\n        pointer-events: all;\n    }\n    .hideCheckInput{\n        display: none;\n    }\n    .hideCheckInput:checked + .hideBox{\n        transition: .3s;\n        height:unset;\n    }\n\n> 实现关键：\n> \n> pointer-events:划分用户行为域。\n> \n> <label>与<input type=\"checkbox\">的搭配\n\n**<a id=\"SECTION03\"></a>三、TinyMCE模板解除内联、块元素关系**\n\n最近解除到了TinyMCE这款富文本编辑器，功能强大，DIV性强。但捣鼓模板时发现js插件内部调用插入内容函数时，必定会对内联函数与块元素间进行处理：\n\n比如二中的<label>与<div>成父子关系，它便会把<div>抽出来使成为兄弟关系，这极大影响了代码的功能。\n\n但好在有解决方案，在[中文文档](http://tinymce.ax-z.cn/configure/content-filtering.php#protect \"TinyMCE中文文档\")中有介绍valid\\_children（有效子元素）这个属性，以下是它的介绍：\n\n> 控制指定的父元素中可用存在哪些子元素。  默认TinyMCE会删除或拆分任何非HTML5内容或HTML过渡内容。\n> \n> 例如，P不能是另一个P的子元素。此选项的默认值是由当前schema（模式）控制的。 \n> \n> 此选项的语法是：父元素\\[子元素|子元素|子元素\\],父元素\\[子元素|子元素\\]  父元素前可用“+”或“-”代表从默认中追加或从默认中删除。\n\n难以理解？直接上代码联系隐藏内容功能这个例子就好理解多了（用注释点出一些技巧）\n\n    tinymce.init({selector: \'#myEditor\',\n    templates: [\n        {title: \'JMusic\', description: \'插入音乐，请选中网易云歌单ID\', content: \'<div style=\"width:100%;text-align:center;\" class=\"mceTmpl\"><iframe src=\"/v/JMusic/#/?playlist={$playlist}\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\"></iframe></div>\'},\n        {title: \'Hide\', description: \'方便的隐藏选中内容\', content: \'<div class=\"mceTmpl\"><label class=\"check_label\"><input class=\"hideCheckInput\" type=\"checkbox\" name=\"选中\" id=\"\" /><div class=\"hideBox\"><div class=\"hideContext\">{$hideContext}</div></div></label></div>\'}\n    ],\n    content_css: \"/static/css/index.css\",//在例子中的css使用跨域加载\n    template_replace_values: {\n        playlist: function(){return  tinyMCE.activeEditor.selection.getContent({format:\'text\'})},//返回选中\n        hideContext: function(){return  tinyMCE.activeEditor.selection.getContent()},//返回选中HTML代码\n    },\n    convert_urls: false,\n    valid_children : \'+label[div]\',//--------------------------重点在这-------------------------\n    },);', NULL, NULL, 0, 82, 0, 1, NULL, 1, 1, '2020-05-01 19:03:11', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (35, 1, 4, 13, NULL, 'http://pics0.baidu.com/feed/ac4bd11373f08202d6140f46195d9debaa641b75.jpeg?token=5ccd82c1c63cd242b421cfeda1922582', '一点也不自律', '<p style=\"padding-left: 40px;\">新项目：</p>\n<blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><strong><span style=\"color: #236fa1;\"><span style=\"font-family: Calibri; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">项目</span></span><a style=\"color: #236fa1;\" title=\"项目地址\" href=\"http://118.89.30.137/v/Whisper/#/chatView/4?uniname=%E6%B5%8B%E8%AF%95%E5%91%98\" target=\"_blank\" rel=\"noopener\"><u><span class=\"15\" style=\"font-family: Calibri; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">地址</span></span></u></a></span></strong></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><strong><span style=\"color: #236fa1;\">房间口令：<span style=\"color: #ba372a;\">114514</span></span></strong></span></p>\n</blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"color: #000000; font-size: 12pt;\"><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/A1%20%281%29.png\" alt=\"Chat View\" width=\"415\" height=\"602\" /></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"color: #95a5a6; font-size: 12pt;\"><span style=\"font-size: 13.3333px;\">感谢贡献测试</span></span></p>', '<div class=\"tblog_context\">\n<blockquote>\n<div class=\"PRECTX\">\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\"><span style=\"font-size: 14pt;\"><strong><span style=\"letter-spacing: 0pt; color: #ba372a;\">#SECTION</span></strong></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"font-size: 12pt;\"><span style=\"letter-spacing: 0pt; color: #ba372a;\">#<a href=\"#SECTION01\">日常</a></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"font-size: 12pt;\"><span style=\"letter-spacing: 0pt; color: #ba372a;\">#<a href=\"#SECTION02\">总结</a></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"font-size: 12pt;\"><span style=\"letter-spacing: 0pt; color: #ba372a;\">#最近：<a title=\"Tomcat SECTION共享 | 纯CSS隐藏内容 | TinyMCE模板解除内联、块元素关系\" href=\"http://118.89.30.137/v/blog/#/tblog/34\" target=\"_blank\" rel=\"noopener\">技术博</a>，<a title=\"【学个锤】从&ldquo;达克效应&rdquo;看学习。\" href=\"http://118.89.30.137/v/blog/#/tblog/33\" target=\"_blank\" rel=\"noopener\">思考博</a>。</span></span></p>\n</div>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\">\"</p>\n</blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\"><strong><span style=\"letter-spacing: 0pt; font-size: 12pt; color: #000000;\">我学习时的噪音：</span></strong></p>\n<div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\">\n<div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\">\n<div class=\"mceTmpl\"><input id=\"hideCheckInput\" class=\"hideCheckInput\" type=\"checkbox\" />\n<div class=\"hideContext\">\n<div><iframe src=\"/v/JMusic/#/?playlist=3226523716\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\" data-mce-fragment=\"1\"></iframe></div>\n</div>\n<label class=\"check_label\" for=\"hideCheckInput\"></label></div>\n</div>\n</div>\n<div>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\"><span style=\"font-size: 14pt;\"><strong><span style=\"color: #000000;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\"><a id=\"SECTION01\"></a>#日常：</span></span></span></strong></span></p>\n<blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"color: #7e8c8d; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">追番剧：百妖谱（不太中意，无聊的时候才想去看）、大理寺日志（还可以，能主动去看）、凹凸世界（前面剧情忘了</span>...）、天才们的恋爱头脑战（还行，基本能看两遍）...</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"color: #7e8c8d; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">补电影：流浪地球（不错）</span></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"color: #7e8c8d; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">玩游戏：看门狗（剧情很棒，操作也爽）、看门狗</span>2（有点花里胡哨，坚持不下来...）、</span><span style=\"font-family: Calibri; letter-spacing: 0pt;\">GTA5<span style=\"font-family: 宋体;\">（</span><span style=\"font-family: Calibri;\">..ing</span><span style=\"font-family: 宋体;\">）</span></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; padding-left: 40px;\"><span style=\"color: #7e8c8d; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">上网课：完全是上一章忘一章（主要完全没时间改错题并收集好题）。计划用模型去尝试学习。（边学习边听歌就很离谱）</span></span></span></p>\n</blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt; font-size: 12pt; color: #000000;\"><span style=\"font-family: 宋体;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/%E5%90%AC%E6%AD%8C.png\" alt=\"2个月狂刷6000+听歌就离谱\" width=\"916\" height=\"441\" /></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; text-align: center;\"><span style=\"font-family: 宋体; letter-spacing: 0pt; font-size: 12pt; color: #000000;\"><span style=\"font-family: 宋体;\"><span style=\"box-sizing: border-box; margin: 0px; color: #95a5a6; font-size: 10pt;\"><span style=\"box-sizing: border-box; margin: 0px;\"><span style=\"box-sizing: border-box; margin: 0px;\">快乐分享错了人，就成了显摆。</span></span></span><span style=\"box-sizing: border-box; margin: 0px;\"><span style=\"box-sizing: border-box; margin: 0px;\"><span style=\"box-sizing: border-box; margin: 0px;\"><span style=\"color: #95a5a6; font-size: 10pt;\">难过倾诉错了人，就成了矫情。</span></span></span></span></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt; text-align: center;\">&nbsp;</p>\n</div>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\"><span style=\"color: #000000; font-size: 12pt;\"><span style=\"font-size: 14pt;\"><strong><span style=\"font-family: 宋体; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\"><a id=\"SECTION02\"></a>#总结：</span></span></strong></span></span></p>\n<div><span style=\"font-size: 10pt;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/%E5%A2%A8%E5%A2%A8.png\" alt=\"墨墨学英语\" width=\"578\" height=\"2106\" /></span></div>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\">①自律谈不上，但能做到无愧。</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\">②Spring boot、</span><span style=\"font-family: Calibri; letter-spacing: 0pt;\">mtbatis:<span style=\"font-family: 宋体;\">我的见识限制了它们的正真的实力了叭。</span></span></span></p>\n<blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><strong><span style=\"color: #236fa1;\"><span style=\"font-family: Calibri; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">项目</span></span><a style=\"color: #236fa1;\" title=\"项目地址\" href=\"http://118.89.30.137/v/Whisper/#/chatView/4?uniname=%E6%B5%8B%E8%AF%95%E5%91%98\" target=\"_blank\" rel=\"noopener\"><u><span class=\"15\" style=\"font-family: Calibri; letter-spacing: 0pt;\"><span style=\"font-family: 宋体;\">地址</span></span></u></a></span></strong></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><strong><span style=\"color: #236fa1;\">房间口令：<span style=\"color: #ba372a;\">114514</span></span></strong></span></p>\n</blockquote>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"color: #000000; font-size: 12pt;\"><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/A1%20%281%29.png\" alt=\"Chat View\" width=\"415\" height=\"602\" /></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"color: #95a5a6; font-size: 12pt;\"><span style=\"font-size: 13.3333px;\">感谢贡献测试</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"color: #000000; font-size: 12pt;\"><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/A1%20%282%29.png\" alt=\"Locked Room\" width=\"404\" height=\"462\" /></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"color: #95a5a6; font-size: 12pt;\"><span style=\"font-size: 13.3333px;\">骂人的短信打完又删掉，伤人的话语还未说出口又咽回去，那么你就真的长大了。</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"color: #000000; font-size: 12pt;\"><span style=\"font-family: 宋体; letter-spacing: 0pt;\">③我个人觉得做最好的地方：在社交爆炸、热点联系的网络世界能做到只吸收不发表自己的观点</span><span style=\"font-family: Calibri; letter-spacing: 0pt;\"><span style=\"font-family: sans-serif;\">。</span></span></span></p>\n<div>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt;\"><span style=\"font-family: Calibri; letter-spacing: 0pt; font-size: 12pt; color: #000000;\"><span style=\"font-family: sans-serif;\">④很垃圾（哪方面都很垃圾！！！）：</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"font-family: Calibri; letter-spacing: 0pt; font-size: 12pt; color: #000000;\"><span style=\"font-family: sans-serif;\"><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/444.jpg\" alt=\"\" width=\"608\" height=\"3006\" /></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"font-family: Calibri; letter-spacing: 0pt; font-size: 10pt; color: #95a5a6;\"><span style=\"font-family: sans-serif;\">像鸡爪</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\">&nbsp;</p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"font-family: Calibri; letter-spacing: 0pt; font-size: 12pt; color: #000000;\"><span style=\"font-family: sans-serif;\"><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/02/555.jpg\" alt=\"\" width=\"750\" height=\"1400\" /></span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 21pt; text-align: center;\"><span style=\"font-family: Calibri; letter-spacing: 0pt; font-size: 12pt; color: #000000;\"><span style=\"color: #95a5a6; font-family: sans-serif; font-size: 13.3333px;\">人体也不会啊</span></span></p>\n</div>\n<p class=\"MsoNormal\" style=\"margin: 5pt 0pt; text-indent: 0pt;\"><span style=\"font-family: Calibri; letter-spacing: 0pt; font-size: 12pt; color: #000000;\">&nbsp;</span></p>\n</div>', NULL, NULL, 0, 51, 0, 1, NULL, 1, 1, '2020-05-07 00:06:08', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (36, 1, 4, 12, NULL, 'https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/2021/2/10/1612964061695.jpg', 'Admin管理后台复刻Console控制台对象查看', '<p>最近在给服务端码权限后台，兼顾后端和前端的结果便是要面对巨大的代码量，身为懒癌的我决定搞点好玩的嘿嘿。</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/03/image-20210210203422868.png\" alt=\"image-20210210203422868\" width=\"272\" height=\"103\" /></p>\n<p>如图，浏览器的Console控制台查看对象这个功能很是方便，能大大提高后台内容的操作。</p>', '最近在给服务端码权限后台，兼顾后端和前端的结果便是要面对巨大的代码量，身为懒癌的我决定搞点好玩的嘿嘿。\n\n![image-20210210203422868](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/03/image-20210210203422868.png)\n\n如图，浏览器的Console控制台查看对象这个功能很是方便，能大大提高后台内容的操作。\n\n效果图\n\n![image-20210210204049975](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/03/image-20210210204049975.png)\n\n* * *\n\n**开始**\n\n> 利用eval()我们可以把用户输入的变量读取\n\n![image-20210210205554056](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/03/image-20210210205554056.png)\n\n    let evalStr = function(command){\n        let overObject = function(key,value){\n            let ele = document.createElement(\"div\");\n            ele.innerHTML = `<str>${key}  ${JSON.stringify(value)}</str>`;\n            ele.onclick = function(e){\n                e.stopPropagation();\n                Object.keys(value).forEach(key1 => {\n                    let child = this.cloneNode(true);\n                    child.innerHTML = `<font><key>${key1}</key>:&nbsp<value>${value[key1]}</value></font>`;\n                    this.appendChild(child);\n                });\n            };\n            return ele;\n        }\n        let evalString;\n        try{\n            evalString=eval(command);\n        } catch(e) {\n            return \"Bad command\";\n        }\n        return overObject(command,evalString);\n    }\n\n![image-20210210211231381](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/03/image-20210210211231381.png)\n\n接下来使用判断每一个值是否是对象 再递归调用函数 便能实现如下效果\n\n![image-20210210211820794](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/03/image-20210210211820794.png)', NULL, NULL, 0, 57, 0, 1, NULL, 1, 1, '2021-02-10 21:46:19', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (37, 1, 4, 12, NULL, 'https://i.loli.net/2021/02/15/uekWGJr52glSzPv.jpg', 'SpringBoot+Websocket搭建仿QQ即时聊天', '<p>这几天在家无事可干，偶然刷到一大神用websocket做了即时通讯，我寻思着我之前也写了个通讯玩意儿，但是普通的增删改查对于通讯来说实在是太耗费计算力了，就开始改造我的项目了。</p>', '![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other1.gif)\n\n三个客户端连接\n\n![https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other2.gif](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other2.gif)\n\n互发消息\n\n![https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other3.gif](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other3.gif)\n\n更改匿名\n\n![https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other4.gif](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other4.gif)\n\n换聊天群（房间）\n\n![https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other5.gif](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other5.gif)\n\n尝试插入图片和自己写的组件\n\n### 一.后端代码\n\n> 参考链接[https://blog.csdn.net/moshowgame/article/details/80275084](https://blog.csdn.net/moshowgame/article/details/80275084)\n\n### 踩坑：\n\n**1.404错误**\n\n①先排查是否忽略的部署环境的项目名。部署环境需要加入项目名:/项目名/接口\n\n②本地测试的时候，项目是Spring管理，因此需要ServerEndpointExporter这个bean，但通过War部署会将项目交给外部Tomcat管理。\n\n所以开发环境中需要@bean注释才可以用springboot自带tomcat运行，打包前应该把@bean注释去掉。\n\n> 若不去掉上线的话，它会堵塞导致项目文件夹删不了，且Servlet失效！\n\n    import org.springframework.context.annotation.Bean;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.web.socket.server.standard.ServerEndpointExporter;\n    @Configuration\n    public class WebSocketConfig {\n    \n    //	  @Bean //部署War前请注释掉！！！！\n    	  public ServerEndpointExporter serverEndpointExporter() {\n    	    return new ServerEndpointExporter();\n    	  }\n    \n    }\n\n**2.Nginx 和 vue的代理协议**\n\n部署后不对Nginx或vue做配置是无法连通的，应做配置！\n\nvue跨域\n\n    proxyTable:{\n        \'/whisper\':{\n            target: \'http://127.0.0.1:8080/\',\n                changeOrigin: true,\n                    pathRewrite: {\n                        \'^/whisper/whisper\': \'\'\n                    },\n                        ws: true //注意开启ws或wss \n        }\n    },\n\nNginx代理\n\n    location /whisper {\n        proxy_pass http://127.0.0.1:8080;\n        proxy_http_version 1.1; \n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade;\n    }\n\n### 二、前端代码\n\n**Socket对象**\n\n     methods:{\n        openSocket(){\n          let socket = this.socket;\n          if(typeof(WebSocket) == \"undefined\") {\n              console.log(\"您的浏览器不支持WebSocket\");\n          }else{\n          	let socketUrl=`ws://url`;\n              socketUrl=socketUrl.replace(\"https\",\"ws\").replace(\"http\",\"ws\");\n              if(socket!=null){\n                  socket=null;\n              }\n              socket = new WebSocket(socketUrl);\n              socket.onopen = function(msg) {\n                  //连接服务器成功\n              };\n              socket.onmessage = function(msg) {\n              	//收到服务器消息\n              }\n              socket.onclose = function() {\n              };\n              socket.onerror = function() {\n              }\n          }\n          this.socket = socket;\n        }\n    }\n\n**vue-scroller的使用**\n\n为了模仿QQ下拉刷新更多的效果，需要用到vue-scroller\n\n    <scroller\n        ref=\"vueScroller\" \n        :on-refresh=\"refresh\"><!-- refresh请求数据 -->\n        <!-- 块 -->\n    </scroller>\n    <script type=\"text/ecmascript-6\">\n    import VueScroller from \"vue-scroller\"\n    Vue.use(VueScroller)\n    </script>', NULL, NULL, 0, 55, 0, 1, NULL, 1, 1, '2021-02-15 20:15:37', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (38, 1, 4, 12, NULL, 'https://th.bing.com/th/id/R.e9580db086222fe086506baac4cc04bb?rik=SirpvnYhXd6T3A&riu=http%3a%2f%2fi0.hdslb.com%2fbfs%2farchive%2f7ce9f9d1678f0b07c0e607f850877a3e64bac8e9.jpg&ehk=SyM4xk4msxbuYrDRqsKl5oZNFs5Gkxh%2b6%2fJG%2b0dO2FI%3d&risl=&pid=ImgRaw&r=0', '家里废弃手机不要扔，刷入Linux搭博客', '<p><span style=\"font-family: \'Open Sans\', \'Clear Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif; font-size: 16px; orphans: 4; white-space: pre-wrap;\">春节前偶然从小学生手中淘到一台\"不能流畅玩王者\"的废旧安卓机，配置刷刷浏览器还行，所以处于闲置状态，这几天偶然学到Linux，就打算刷个Centos系统搭建一个LNMP(Linux+Nginx+MySQL+PHP)架构的博客。</span></p>', '春节前偶然从小学生手中淘到一台\"不能流畅玩王者\"的废旧安卓机，配置刷刷浏览器还行，所以处于闲置状态，这几天偶然学到Linux，就打算刷个Centos系统搭建一个LNMP(Linux+Nginx+MySQL+PHP)架构的博客。\n\n### 准备\n\n一台安卓机\n\n\\[BusyBox\\]  https://busybox.net/ \n\n\\[Linux Deploy\\]  https://github.com/meefik/linuxdeploy/releases \n\n\\[ConnectBot、xshell\\]\n\n我认为较好的安装教程：[https://www.jianshu.com/p/077ceebb4f81](https://www.jianshu.com/p/077ceebb4f81)\n\n> 由于Linux Deploy安装的Linux是处于chroot架构下的，所以对于Linux菜鸟的我要踩的坑十分多。本来时打算构建Tomcat+Mysql+Nginx+redis运行在docker容器里的架构的，可一坑接一坑，不是储存不足就是架构不支持的，最后决定用宝塔搭建一个WordPress博客网站。\n\n### 安装基础包\n\nsudo apt-get install yum  \napt-get install wget\n\n安装宝塔：[https://www.bt.cn/bbs/thread-19376-1-1.html](https://www.bt.cn/bbs/thread-19376-1-1.html)\n\n等待安装结束...\n\n启动宝塔\n\n/etc/init.d/bt start   \n#查看宝塔默认信息  \n/etc/init.d/bt default \n\n按需安装搭建LNMP，完了之后在一键部署那安装WordPress（宝塔很完善，跟着走都没问题）\n\n### 踩过的坑：\n\n执行MySQL指令时\n\nCan\'t connect to local MySQL server through socket \'/tmp/mysql.sock\n\n解决方法\n\nsudo usermod -a -G aid\\_inet,aid\\_net\\_raw www  \nsudo usermod -a -G aid\\_inet,aid\\_net\\_raw mysql  \nsetsid mysqld\\_safe > /dev/null 2>&1 &\n\n放在局域网内是满足不了我们的，让外网的小伙伴来体验吧\n\n接下来就是内网穿透了，方案有很多比如路由器DDNS穿透、端口映射、花生壳内网穿透、natapp隧道穿透...\n\n由于我家路由器不支持DDNS，所以选择了[natapp](https://natapp.cn)（推荐码：67C6A9ED）\n\n官方教程：[https://natapp.cn/article/natapp\\_newbie](https://natapp.cn/article/natapp_newbie)\n\n### 建议：\n\n手机连接路由器联网，手机保持充电状态。\n\n若是有闲置的域名，可以话个10块钱打一个香港隧道，可免备案绑定。\n\n![配置隧道](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/othernatapp%E9%85%8D%E7%BD%AE.png)配置natapp隧道\n\n![配置域名](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/othergodaddy%E8%AE%B0%E5%BD%95.png)\n\n配置域名CNAME二级域名指向提供的域名\n\n![访问成功！](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E6%88%90%E5%8A%9F.png)\n\n访问成功！', NULL, NULL, 0, 57, 0, 1, NULL, 1, 1, '2021-02-19 14:34:46', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (39, 1, 4, 12, NULL, '//mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/2021/4/5/16176105845810.jpg', '将矿渣玩客云打造成NAS|小型服务器', '<ul style=\"margin-bottom: 0.8em;\">\n<li>\n<p style=\"line-height: 1.5;\">准备</p>\n<ul>\n<li style=\"line-height: 1.5;\">一台玩客云（拼多多50</li>\n<li style=\"line-height: 1.5;\">8G以上U盘（系统用</li>\n<li style=\"line-height: 1.5;\">TTL转USB接口（焊接使电脑连接串口</li>\n<li style=\"line-height: 1.5;\">双公头USB（烧录</li>\n<li style=\"line-height: 1.5;\">砖抡不动的坚韧之心❤</li>\n</ul>\n</li>\n</ul>', '*   准备\n    \n    *   一台玩客云（拼多多50\n    *   8G以上U盘（系统用\n    *   TTL转USB接口（焊接使电脑连接串口\n    *   双公头USB（烧录\n    *   砖抡不动的坚韧之心❤\n*   [玩客云刷系统](#SECTION01)\n*   [配置玩客云【NAS】](#SECTION02)\n*   [配置玩客云【服务器】](#SECTION03)\n   \n<a id=\"SECTION01\"></a>玩客云刷系统\n----------------------------\n\n**刷机步骤:**\n1.  拆机,短接,刷入通用安卓固件\n2.  优盘写入emmc固件\n3.  复制`uboot`及`meson8b_m201_1G.dtb`至优盘覆盖原文件\n4.  连接TTL线设置U盘启动\n5.  优盘插上开始刷机\n6.  刷完收工\n**相关软件及工具下载**\n**[申请腾讯云免费ssl证书并部署](https://blog.csdn.net/qq_26383975/article/details/111913875)**\n\n链接：[https://pan.baidu.com/s/1DS4oX-4QI31i6GkRDAxM4A](https://pan.baidu.com/s/1DS4oX-4QI31i6GkRDAxM4A) 提取码：w21f\n\n### 1\\. 拆机,短接,刷入通用安卓固件\n\n拆机,将玩客云主板取出,用USB公对公线,一头连接在玩客云2号USB口,一头连接在电脑上,玩客云暂时不要通电.电脑上安装好`USB_Burning_Tool`,运行软件,导入烧录包`update.img` 勾选上”擦除flash””擦除bootloader”,点击”开始”.用准备好的摄子或其他短路工具,玩客云背面短接图中2点后,不要松手,再给玩客云通电,软件上有动静后,松开摄子.至烧录成功. 点击”停止”,退出软件,拔下USB公头线,断电玩客云,放到一边备用.\n\n![img](https://pic4.zhimg.com/80/v2-7f07ce182ad31bd463a113461658efc7_720w.jpg)\n\n> 报错解决办法,快速把USB线拔下来,再插上去\n\n### 2\\. TTL连接\n\n刷机成功后就拔掉刷机的双公头线，电源也断开。然后就是连接 TTL 了，新版主板的 TTL 接口就在 emmc 存储边上，刷机短接点边上，也标了对应针脚功能，十分的简单明了：\n\n![img](https://pic1.zhimg.com/80/v2-04ef93f413aacc2152a94029dc98b9f8_720w.jpg)\n\n旧版主板的话，TTL 位置在 USB 接口边上，也没标针脚参数，可以按下图所示连接：\n\n![img](https://pic1.zhimg.com/80/v2-8851d0974e5e69379a7ed628188a4254_720w.jpg)\n\n具体怎么把 TTL 引出来那就是自己动手，八仙过海了，可以用导线引出来，也可以焊针脚上去之类。\n\n旧版的 TTL 很容易焊接，但新版的会发现默认主板没有把 TTL 针脚的孔打穿，被锡堵住了，这个就比较蛋疼了，而且边上还有不少小电容。所以对于自己手艺没自信的，其实可以在主板背面焊接，同样有效，我就如下图走个野路子，在背面焊了针脚：\n\n![img](https://pic3.zhimg.com/80/v2-eabfd00456a88944a90ec3568d22f3ee_720w.jpg)\n\n把 TTL 模块连上电脑，如图我用的是 CH340G 模块，还需要 VCC 切换到 3.3V 跳线。如果是第一次使用的话先装好驱动，然后去设备管理器里查看 COM 口序号，我这是 COM4，并且把设备属性里的位/秒改成 115200，流控制设定为无：\n\n![img](https://pic3.zhimg.com/80/v2-2f0aa5c31824d97dabb6f856146c5572_720w.jpg)\n\n**TTL 模块和玩客云的接法如下：**\n\n    模块-------------------玩客云\n    RX-------------------------TX\n    TX-------------------------RX\n    GND------------------------GND\n    VCC 不用接，空着\n    \n\n连好 TTL 后玩客云先不要通电，打开 putty 软件，选择串口设置，把串口名称改成自己 TTL 模块对应的（比如我这是 COM4），然后波特率 115200，流量控制选择无：\n\n![img](https://pic3.zhimg.com/80/v2-d8465a2a2efcaa401428a1928a357266_720w.jpg)\n\n会话选项里连接类型选择串口，点击打开：\n\n![img](https://pic2.zhimg.com/80/v2-3ea3d8beafcc094b3d035e90d169406d_720w.jpg)\n\n打开后默认情况下 putty 窗口是黑屏，因为没数据，这时候把玩客云主板通上电，会在 putty 窗口里看到很多数据，稍等一会，如果看到如图类似的一堆黄色文字提示的话，就代表之前刷进去的安卓系统正常：\n\n![img](https://pic4.zhimg.com/80/v2-726c0d9c7dc9039ad4c9da8b36784eeb_720w.jpg)\n\n然后电源再次拔掉，第一次主要是看一下刷的安卓正不正常。\n\nputty 窗口在整个刷机流程里都不用关，一直开着就好了。\n\n用 Etcher 或者 USBWriter 这类烧录软件，把 armbian 镜像烧录到 U 盘里，插到玩客云的一号口上，也就是靠近网口的那个 USB。\n\n接上电源，通电后立即在 putty 窗口里狂按回车，看到画面连续出现 m8b\\_m201 开头的设备名称时，就是中断成功了。中断其实也就是打断默认系统的启动过程。\n\n这里要注意的是由于硬件版本不同，中断显示的硬件名字也会有的不一样，我这个是 m8b\\_m201C\\_512M，有的会是 m8b\\_m201\\_1G 之类，都是正确的。\n\n先来刷入 uboot，玩客云的网卡很蛋疼，不刷特定 uboot 的话无法驱动起来，刷 uboot 总共三句命令，依次执行即可：\n\n    usb start;fatload usb 0 12000000 u-boot.bin \n    store rom_write 12000000 0 60000 \n    saveenv\n    \n\n三条命令执行完后把玩客云断电重启一次，重新进入中断模式。注意由于刷了新的 uboot，所以有的设备名称会改变，比如我的就会从 m8b\\_m201C\\_512M 变成 m8b\\_m201\\_1G，这个没有任何影响。\n\n依次再执行下面的八条指令，一条一条依次复制粘贴执行：\n\n    setenv bootfromrecovery 0\n    \n    setenv bootfromnand 0\n    \n    setenv start_mmc_autoscript \'if fatload mmc 0 11000000 s805_autoscript; then autoscr 11000000; fi;\'\n    \n    setenv start_usb_autoscript \"if fatload usb 0 11000000 s805_autoscript; then autoscr 11000000; fi; if fatload usb 1 11000000 s805_autoscript; then autoscr 11000000; fi;\"\n    \n    setenv start_autoscript \'if usb start; then run start_usb_autoscript; fi; if mmcinfo; then run start_mmc_autoscript; fi;\'\n    \n    setenv bootcmd \'run start_autoscript; run storeboot\'\n    \n    setenv firstboot 1\n    \n    saveenv\n    \n\n八条命令全部执行完成后又一次拔掉玩客云电源。这一串命令是为了添加 USB 优先启动。\n\n再一次插上电源，网线也可以插上，这时候看 putty 窗口输出内容，一切顺利的话就会自动搜索 USB 设备并进行引导，稍等一会就会进入登陆界面了，armbian 默认用户名为 root，密码 1234。\n\n登陆后会提示说密码太弱了，要强制改密码，先输入一次原始密码 1234，然后输入两次自己要改的密码即可。然后还会提示要新建个用户，直接 Ctrl+C 取消，然后重新登录进去就能进行系统操作了，如下图，IP 处也能看到分配的局域网 IP：\n\n![img](https://pic4.zhimg.com/80/v2-a8a927cc65b16244a6108462330cc9b3_720w.jpg)\n\n要将系统写入 eMMC 的话，运行以下命令，先把脚本给予权限：\n\n    chmod 755 /root/fstab\n    \n    chmod 755 /root/install.sh\n    \n\n然后联网安装一个依赖的软件包：\n\n    apt-get -y install abootimg\n    \n\n如果暂时没条件联网的，我也在固件里打包了一个本地安装包，直接执行即可本地安装：\n\n    dpkg -i abootimg.deb\n    \n\n最后执行写入脚本：\n\n    /root/install.sh\n    \n\n自动就会开始将系统写入 eMMC 存储中，耐心等待，看到如下图界面则表示写入完成了:\n\n![img](https://pic2.zhimg.com/80/v2-1eb57ef18acb29927f35f967d7af2231_720w.jpg)\n\n写入 eMMC 成功后可以输入 poweroff 关机，拔掉 U 盘，TTL 继续留着，断电重启即可自动进入板载存储里的系统了。用户名 root，密码为之前自己设定的，因为写入 eMMC 其实就是把 U 盘里运行的 armbian 拷贝一份过来。\n\n如下图界面即为运行正常：\n\n![img](https://pic1.zhimg.com/80/v2-f4b2f3f66a5c41d57c691b5a058fe0fc_720w.jpg)\n\n确认系统运行正常后，这时候 TTL 可以撤了，全部收工，玩客云主板也可以塞回壳子里去了。\n\n后面就可以直接使用普通 SSH 客户端连接玩客云操作了，armbian 本质就是 ARM 版的 Debian，各种操作命令都和 Debian 一样的，文章里提供的这个固件是基于 Debian10 的，。\n\n玩客云是刷不死的，放心折腾好了，反正搞炸了就是短接重刷安卓即可。步骤看着洋洋洒洒一大串十分麻烦，其实操作过一遍后就熟练了，后面重刷起来分分钟。\n\n最后要吐槽的是网上关于玩客云的刷机教程实在是混乱不堪，各种错误百出，固件版本也是乱七八糟，光是整理这篇文章都费了半天劲。\n\n虽然刷完了，但我还是要说这破玩意儿折腾起来不值，配置太低坑又多，不要指望说能搞什么正经项目，本文刷的固件其实也都不完善，存在网卡速率问题，最大只能跑到三百多兆，而正常的固件是可以跑满千兆的，只不过不当 NAS 的话，网速差异日常使用影响也不大。\n\n<a id=\"SECTION02\"></a>玩客云NAS配置\n------------------------------\n\n### 开机自动启动脚本\n\n玩客云刷入onecloud成功后变能通过[http://onecloud](http://onecloud)访问，亦可通过访问路由器分配IP访问（如我的玩客云被分配为192.168.1.8\n\n##### 开启自启服务（参考[https://www.moerats.com/archives/623/](https://www.moerats.com/archives/623/)\n\n###### 添加rc-local.service\n\n    cat > /etc/systemd/system/rc-local.service <<EOF\n    [Unit]\n    Description=/etc/rc.local\n    ConditionPathExists=/etc/rc.local\n     \n    [Service]\n    Type=forking\n    ExecStart=/etc/rc.local start\n    TimeoutSec=0\n    StandardOutput=tty\n    RemainAfterExit=yes\n    SysVStartPriority=99\n     \n    [Install]\n    WantedBy=multi-user.target\n    EOF\n    \n\n###### 创建rc-local文件\n\n    cat > /etc/rc.local <<EOF\n    #!/bin/sh\n    # rc.local\n    # This script is executed at the end of each multiuser runlevel.\n    # Make sure that the script will \"exit 0\" on success or any other\n    # value on error.\n    # In order to enable or disable this script just change the execution\n    # bits.\n    #\n    # By default this script does nothing.\n    exit 0\n    EOF\n    \n\n###### 添加权限并设置开机自启\n\n    chmod +x /etc/rc.local \n    systemctl enable rc-local \n    systemctl start rc-local.service\n    systemctl status rc-local.service #检测是否有效\n    \n\n返回`Active:active`信息，则成功。\n\n##### 编写自启脚本\n\n    vi /etc/rc.local\n    \n    #exit 0前加入\n    nohup bash mount /dev/sda1 /mnt/usb #挂载目录\n    \n\n我的习惯：\n\n    cat > /usr/linux_start.sh <<EOF\n    #!/bin/sh\n    mount /dev/sda1 /mnt/usb #挂载目录\n    #其他脚本内容\n    EOF\n    \n\n    vi /etc/rc.local\n    \n    #exit 0前加入\n    nohup bash linux_start.sh\n    \n\n### Samba访问设置\n\nsmb配置属性全解：[https://www.cnblogs.com/jiangzhaowei/p/5470959.html](https://www.cnblogs.com/jiangzhaowei/p/5470959.html)\n\n    smbpasswd -a user01\n    \n    vi /etc/samba/smb.conf\n    \n    [onecloud-share] browseable = yes path = /mnt/usb #你的挂载目录 guest ok = yes #允许匿名访客 write list = root,user01,user02 #赋予可写权限 admin users = root #管理这个分享的用户 create mask = 0700\n    \n    sudo /usr/sbin/service smbd restart\n\n###### 电脑连接方式\n\n![2](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/04/1.png)\n\n![3](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/04/2.png)\n\n![1](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/04/3.PNG)\n\n###### 手机连接方式\n\niOS：推荐应用Documents\n\nAndroid：推荐应用ES文件浏览器\n\n使用它们的局域网应用即可。\n\n<a id=\"SECTION03\"></a>玩客云服务器配置\n------------------------------\n\n玩客云已经内置docker，但由于储存8G，建议在U盘运行\n\n### docker配置\n\n##### 设置ustc镜像源\n\n编辑文件/etc/docker/daemon.json 没有即创建添加内容\n\n{“registry-mirrors”: \\[“[https://docker.mirrors.ustc.edu.cn](https://docker.mirrors.ustc.edu.cn)”,“[https://hub-mirror.c.163.com](https://hub-mirror.c.163.com)”\\]}\n\n    #启动服务\n    systemctl start docker\n    #停止服务\n    systemctl stop docker\n    #重启服务\n    systemctl restart docker\n    #查看服务状态\n    systemctl status docker\n    \n\n##### 设置开机自启\n\n    #设置容器自启动\n    docker update --restart=always 容器名称\n    #设置docker 开机自启动\n    systemctl enable docker\n    #将指定用户添加到用户组\n    usermod -aG docker root\n    \n\n##### 拉取安装镜像\n\n    #一条条安装即可\n    docker pull redis\n    docker pull nginx\n    #必须找支持arm32v7版本的！！！\n    docker pull tomcat:8.5.65-jdk16-openjdk\n    #很可惜docker没有arm32v7的MySQL\n    #可以直接装MySQL在docker外也行\n    #但由于某些原因，我的MySQL重启会开不了，我连接的是外部数据库。\n    \n\n    #########我将这些容器挂载目录都放在了/usr/local/myapp\n    #redis容器\n    docker run -di --name=myredis --restart=always    -p 6379:6379 redis\n    #nginx容器\n    docker run -di --name=mynginx --network host --restart=always    -p 80:80 -v /usr/local/myapp/nginx/nginx.conf:/etc/nginx/nginx.conf -v /usr/local/myapp/nginx/log:/var/log/nginx -d nginx\n    #启动tomcat容器\n    docker run -di --name=mytomcat --network host --restart=always    -p 8080:8080 -v /usr/local/myapp/mytomcat/webapps:/usr/local/tomcat/webapps -v /usr/local/myapp/mytomcat/logs:/usr/local/tomcat/logs -v /usr/local/myapp/mytomcat/conf/server.xml:/usr/local/tomcat/conf/server.xml arm32v7/tomcat\n    \n\n##### MySQL8.0安装与配置\n\n    #安装\n    sudo apt-get update\n    apt install mysql-server\n    \n    #初始化并修改配置\n    mysql_secure_installation\n    现在配置mysql允许远程访问，首先编辑 /etc/mysql/mysql.conf.d/mysqld.cnf\n    配置文件： vim /etc/mysql/mysql.conf.d/mysqld.cnf 注释掉\n    bind-address = 127.0.0.1\n    \n    #登录mysql\n    mysql -uroot -p\n    use mysql\n    \n    #创建用户并允许远程访问\n    create user \'用户名\'@\'%\' identified by \'密码\';\n    grant all privileges on *.* to \'用户名\'@\'%\' with grant option;\n    flush privileges;    # 刷新权限\n    systemctl restart mysql #重启服务\n\n注意事项：\n\n1.  容器间网络模式要配置好\n2.  开启restart自动启动容器\n3.  配置挂载映射时要检查清楚\n\n##### 内网穿透\n\n由于我家路由没有DDNS功能，我在natapp购买了香港线的隧道\n\n请自行去[https://natapp.cn/](https://natapp.cn/)注册免费隧道。\n\nnatapp文件（ARM32）：[https://cdn.natapp.cn/assets/downloads/clients/2\\_3\\_9/natapp\\_linux\\_arm/natapp?version=20190730](https://cdn.natapp.cn/assets/downloads/clients/2_3_9/natapp_linux_arm/natapp?version=20190730)\n\n1.  上传natapp文件到服务器。如：/usr/local/myapp\n2.  复制隧道authtoken备用\n3.  cd到natapp所在目录。如：cd /usr/local/myapp\n4.  执行./natapp -authtoken=\\*\\*\\*\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/%E6%8D%95%E8%8E%B7.PNG)\n\n效果图\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/10389954-b45896160273faf0.png)\n\n##### 设置开机自启\n\n配置玩客云rc.local请看NAS玩客云设置方法\n\n    #设置容器自启动\n    docker update --restart=always 容器名称\n    #设置docker 开机自启动\n    systemctl enable docker\n    #将指定用户添加到用户组\n    usermod -aG docker root\n    \n\n    #######开机脚本\n    #按NAS配置好开启自启的rc.local\n    #!/bin/bash\n    service docker restart\n    cd /usr/local/myapp\n    ./natapp -authtoken=************\n```\n文件管理器：账号密码都是 admin\nportainer : 账号 admin 密码 powersee\ntransmission : 账号密码都是 admin\nqbittorrent : 账号 admin 密码 adminadmin\nssh ：账号 root 密码 powersee233\n```', NULL, NULL, 0, 151, 0, 1, NULL, 1, 1, '2021-04-05 16:16:33', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (40, 1, 4, 12, NULL, 'https://ns-strategy.cdn.bcebos.com/ns-strategy/upload/fc_big_pic/part-00614-3763.jpg', 'C51单片机与ESP8266-01WIFI模块STA模式控制LED', '<h2>麻雀虽小，五脏俱全。</h2>\n<p>自学单片机也有一个月了，无论自上而下还是自下而上地学习都有一点点进步，就像麻雀一样缓慢啄食。尽管学校是全封闭管理，也安耐不住我的学习好奇心，不断地探索校园中&ldquo;隐秘的角落&rdquo;。</p>\n<p>相关资料</p>\n<p><span style=\"background-color: #3598db; color: #ffffff;\">https://wwr.lanzous.com/iYMNPo4of0h</span></p>\n<p><span style=\"background-color: #3598db; color: #ffffff;\">密码:bkah</span></p>', '<h1>C51单片机与ESP8266-01WIFI模块STA模式控制LED</h1>\n<h2>麻雀虽小，五脏俱全。</h2>\n<p>自学单片机也有一个月了，无论自上而下还是自下而上地学习都有一点点进步，就像麻雀一样缓慢啄食。尽管学校是全封闭管理，也安耐不住我的学习好奇心，不断地探索校园中&ldquo;隐秘的角落&rdquo;。</p>\n<p>相关资料</p>\n<p>https://wwr.lanzous.com/iYMNPo4of0h</p>\n<p>密码:bkah</p>\n<h3>材料</h3>\n<p>STC89C52RC、ESP8266-01、最小系统板、11.092MHZ晶振、USB转TTL烧录器（CH340）、导线若干（母对母、公对母...）</p>\n<p><img src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/00.JPG\" /></p>\n<h4>目录</h4>\n<div style=\"padding-left: 40px;\">\n<h5><a href=\"#SECTION01\">准备</a></h5>\n<ol>\n<li>安装Keilc51</li>\n<li>安装STC-ISP烧录软件</li>\n<li>安装串口工具putty</li>\n</ol>\n<h5><a href=\"#SECTION02\">点灯</a></h5>\n<ol>\n<li>编写点灯程序</li>\n<li>烧录</li>\n</ol>\n<h5><a href=\"#SECTION03\">正片</a></h5>\n<ol>\n<li>串口通信ESP8266-01</li>\n<li>基本AT指令</li>\n<li>STA模式初始化设置</li>\n<li>编写程序</li>\n<li>完成</li>\n</ol>\n</div>\n<h2><a id=\"SECTION01\"></a>安装Keilc51、安装STC-ISP烧录软件、putty</h2>\n<p>百度即可。</p>\n<p>或下载本博客提供的资料</p>\n<h2><a id=\"SECTION02\"></a>点灯</h2>\n<h4>编写</h4>\n<pre><code class=\"language-c\" lang=\"c\">#include&lt;reg52.h&gt;\nsbit led1 = P0^1;//定义引脚位置\nsbit led0 = P0^0;\nvoid delay(int ms){//延时函数，按晶振频率计算\n	unsigned int i,j;\n	for(i=0;i&lt;ms;i++)\n		for(j=0;j&lt;110;j++);\n}\nvoid LED(int ms){ \n	delay(ms);\n	led1 = 1;\n	led0 = 0;	\n	delay(ms);\n	led1 = 0;	\n}\nvoid main()\n{\nwhile(1){\n	LED(1000);\n\n}\n}</code></pre>\n<h4>编译</h4>\n<p>设置编译成HEX文件</p>\n<p>Project-&gt;Option for Target \'Target*\'-&gt;Output-&gt;勾选 Create HEX File</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/00.PNG\" alt=\"00\" /></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/%E7%BC%96%E8%AF%91.PNG\" /></p>\n<h4>烧录</h4>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/96dda144ad345982c44821290bf431adcaef844f.jpg\" /></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/QQ%E5%9B%BE%E7%89%8720210416083641.jpg\" /></p>\n<p>烧写器直接查电脑USB接口即可，等待驱动安装或手动安装（教程在提供的资料 STC-ISP烧写器处）</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/%E7%83%A7%E5%BD%95.PNG\" /></p>\n<pre><code class=\"language-javascript\" lang=\"javascript\">注意事项：\n1.单片机要正确放置，不可倒放（易烧坏\n2.RXD--TXD，TXD--RXD反接！\n3.正确设置最低最高波特率\n4.STC芯片烧录要重新上电，但也可购买无需重新上电的烧录器（教程中用到的便是\n5.检查晶振！</code></pre>\n<p>烧录后它会自动运行，可以拔掉RXD、TXD通电运行。</p>\n<h2><a id=\"SECTION03\"></a>ESP8266-01STA模式控制LED开关</h2>\n<h4>串口通信</h4>\n<p>引脚图</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/c00.jpg\" /></p>\n<p>烧写器连接（串口通信、单片机接法一致）</p>\n<pre><code class=\"language-javascript\" lang=\"javascript\">TXD-RXD\nRXD-TXD\nGND-接地线\nVCC-3.3V正极\nCH_PD-3.3v短接</code></pre>\n<p>打开Putty</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/c00.PNG\" /></p>\n<p>注意：</p>\n<ol>\n<li>要填写正确COM口（可在设备管理器查看</li>\n<li>填写正确波特率（初始值为115200</li>\n</ol>\n<h4>基本AT指令</h4>\n<p>更多放在资料里</p>\n<pre><code class=\"language-javascript\" lang=\"javascript\">AT #测试AT指令，返回OK状态良好\nAT+CWMODE_CUR=1 #设置STA模式 1.STA 2.AP 3.STA兼AP\nAT+CWLAP #查询附近WIFI\nAT+CWJAP_CUR=\"wifiname\",\"wifipwd\" #连接WIFI\nAT+CWAUTOCONN=1 #开启自动连接\nAT+CIFSR #查看\nAT+CIPMUX=1 #允许多连接\nAT+CIPSERVER=1,8888 #开放服务器端口\n\nAT+CWSAP=\"JANXLAND\",\"12345678\",5,3 #AP下设置WIFI昵称和密码</code></pre>\n<h4>STA初始化</h4>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/c01.PNG\" /></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/c02.PNG\" /></p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/c03.png\" /></p>\n<p>最后一步：设置模块的波特率与单片机一样（这里选择设置9600</p>\n<pre><code class=\"language-javascript\" lang=\"javascript\">AT+UART=9600,8,1,0,0\n#下次串口连接应选择9600波特率</code></pre>\n<p>注意事项：</p>\n<ol>\n<li>每次写完命令应键入<strong><u>回车</u></strong>再<strong><u>Ctrl+j</u></strong>（实际上就是\\r\\n 这是AT固件约定的处理形式</li>\n<li>与串口或单片机连接一直，波特率也要相同</li>\n<li>红灯蓝灯常亮&mdash;&mdash;等待CH_PD上电</li>\n<li>红灯亮蓝灯闪亮&mdash;&mdash;正在进行通信（正常</li>\n<li>红灯亮蓝灯不亮&mdash;&mdash;未在通信执行（正常</li>\n</ol>\n<h4>编写程序</h4>\n<p>这次我们继续使用LED灯代码进行改造（LED()函数当做状态灯</p>\n<pre><code class=\"language-c\" lang=\"c\">void UartConfiguration()//配置模块，初始化命令\n{\n	TMOD=0x20;    //定时器1工作在模式2，自动重装模式\n	SCON=0x50;     //串口工作在模式1\n	TH1=0xfd;  //计算定时器重装值	//11.0592 9600\n	TL1=0xfd;\n	PCON=0x00;    //串口波特率加倍\n	ES=0;         //串行中断关闭\n	TR1=1;        //启动定时器1\n	REN=1;        //允许接收 \n	EA=1;         //允许中断\n	LED(100);\n	sendString(\"AT+CWMODE_CUR=1\\r\\n\");\n	LED(100);//每个步骤延迟不能太长也不能太短\n	sendString(\"AT+CWJAP_CUR=\\\"CMCC-Xfak\\\",\\\"password\\\"\\r\\n\");\n	LED(6000);//连接需要很长时间\n	sendString(\"AT+CIPMUX=1\\r\\n\");\n	LED(100);\n	sendString(\"AT+CIPSERVER=1,8080\\r\\n\");\n	LED(100);\n}\n\nvoid uart(void) interrupt 4		 //串口发送中断\n{\n	if(RI)    //收到数据\n	{\n		RI=0;   //清中断请求\n		dat[cnt++]=SBUF;\n	}\n	else      //发送完一字节数据\n	{\n		TI=0;\n	}\n}\n\nvoid main()		//定义一个无返回值的主函数，程序将在里面运行\n{\n		UartConfiguration();\n		led1=1;\n		led0=0;//配置完成led常亮\n		while(1)\n		{\n		//接受消息\n		//这属于一个个字节读取，是不规范的，只做简单测试\n		flag=dat[cnt-1]-0x30;   \n		//2   ESP8266        +IPD,0,X:   2\n		if((flag&gt;=0)&amp;&amp;(flag&lt;=9))\n		{\n			cnt=0;\n			ES=0;\n			switch(flag)\n			{\n				case 0:	led1=0;//关闭LED\n				break;\n				case 1:	led1=1; //打开LED\n				break;\n				default:\n				break;\n			}\n			ES=1;\n		 }\n		}\n}</code></pre>\n<p>&nbsp;</p>\n<h4>运行！</h4>\n<p style=\"text-align: center;\"><video src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/05/IMG_0055.MP4\" controls=\"controls\" width=\"300\" height=\"150\"></video></p>\n<p>&nbsp;</p>', NULL, NULL, 0, 70, 0, 1, NULL, 1, 1, '2021-04-16 10:00:45', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (41, 1, 4, 12, NULL, 'https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/4%E6%9C%88%E5%AD%A6%E4%B9%A0/clipboard_20210505_115201.png', '一份4月的学习函。', '<p>B站真真真真的是学习软件&times;114514</p>\n<p>有什么想法搜搜B站，总能搜到些有趣的项目，多看看简介评论区能找到开源资源。还能学到不少东西。</p>\n<p>但只有手机的学习属实不推荐，回到家啥都忘了。学的也不深。</p>', '### 个人学习\n\nB站真真真真的是学习软件×114514\n\n有什么想法搜搜B站，总能搜到些有趣的项目，多看看简介评论区能找到开源资源。还能学到不少东西。\n\n但只有手机的学习属实不推荐，回到家啥都忘了。学的也不深。\n\n![GY_PJFK2%5PFS99VY(J$BIW.png](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/4%E6%9C%88%E5%AD%A6%E4%B9%A0/53a84bd8938b0c391ef61577c0745bf5.png)\n\n![IMG_0075.PNG](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/4%E6%9C%88%E5%AD%A6%E4%B9%A0/8f28c9edbd6b41443ef29bd6bcda1fd7.png)\n\n学校每天6小时手机的后果\n\n### 一些有趣的例子\n\n> stm32 MP3播放器开源 [https://www.bilibili.com/video/BV1Cv41177yE](https://www.bilibili.com/video/BV1Cv41177yE)\n\n> ESP8266+OLED多级菜单显示 [https://www.bilibili.com/video/BV1Zi4y1x7ZB](https://www.bilibili.com/video/BV1Zi4y1x7ZB)\n\n> 用ESP8266模块\\[ESP-01S\\] 自制MP3播放器，音质完美无噪声，流式解码播放，突破存储空间限制 [https://www.bilibili.com/video/BV1AK4y1E7bH](https://www.bilibili.com/video/BV1AK4y1E7bH)\n\n> 全网最小linux板 [https://www.bilibili.com/video/BV1qp4y1x7Vx](https://www.bilibili.com/video/BV1qp4y1x7Vx)\n\n> 寒假制作了一个Linux小玩具 [https://www.bilibili.com/video/BV1sz4y127Xf](https://www.bilibili.com/video/BV1sz4y127Xf)\n\n> \\[自制\\]耗时一个月的半透明桌面小电视，可显示天气预报，时间日期，粉丝数，股票 [https://www.bilibili.com/video/BV1R54y1L79X](https://www.bilibili.com/video/BV1R54y1L79X)\n\n> esp8266 播放 网易云音乐 mp3 音频流 Hope Shines Eterna [https://www.bilibili.com/video/BV1qW411T784](https://www.bilibili.com/video/BV1qW411T784)', NULL, NULL, 0, 36, 0, 1, NULL, 1, 1, '2021-05-05 11:52:32', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (42, 1, 4, 12, NULL, 'https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/4%E6%9C%88%E5%AD%A6%E4%B9%A0/REX0EK%28%5D6CW%7B9MVOCDHJ6%5BL.png', '【ESP8266&&nodeMCU】人体感应 | 温度传感器 | 加速度传感器 | Mini Mp3', '<p data-slate-node=\"element\"><span data-slate-node=\"text\">最近学的ESP8266物联网模块的一些亲手测试。</span></p>\n<ol start=\"1\" data-slate-node=\"element\" data-slate-fragment=\"JTVCJTdCJTIydHlwZSUyMiUzQSUyMnBhcmFncmFwaCUyMiUyQyUyMmNoZWNrYm94JTIyJTNBMCUyQyUyMmNoaWxkcmVuJTIyJTNBJTVCJTdCJTIydGV4dCUyMiUzQSUyMiVFNiU5QyU4MCVFOCVCRiU5MSVFNSVBRCVBNiVFNyU5QSU4NEVTUDgyNjYlRTclODklQTklRTglODElOTQlRTclQkQlOTElRTYlQTglQTElRTUlOUQlOTclRTclOUElODQlRTQlQjglODAlRTQlQkElOUIlRTQlQkElQjIlRTYlODklOEIlRTYlQjUlOEIlRTglQUYlOTUlRTMlODAlODIlMjIlN0QlNUQlN0QlMkMlN0IlMjJ0eXBlJTIyJTNBJTIybGlzdCUyMiUyQyUyMm9yZGVyZWQlMjIlM0ElMjIxJTIyJTJDJTIyY2hpbGRyZW4lMjIlM0ElNUIlN0IlMjJ0eXBlJTIyJTNBJTIybGlzdC1pdGVtJTIyJTJDJTIyY2hlY2tib3glMjIlM0EwJTJDJTIyY2hpbGRyZW4lMjIlM0ElNUIlN0IlMjJ0ZXh0JTIyJTNBJTIyJUU0JUJBJUJBJUU0JUJEJTkzJUU2JTg0JTlGJUU1JUJBJTk0JTJCJUU4JTlDJTgyJUU5JUI4JUEzJUU1JTk5JUE4JTIyJTdEJTVEJTdEJTJDJTdCJTIydHlwZSUyMiUzQSUyMmxpc3QtaXRlbSUyMiUyQyUyMmNoZWNrYm94JTIyJTNBMCUyQyUyMmNoaWxkcmVuJTIyJTNBJTVCJTdCJTIydGV4dCUyMiUzQSUyMiVFNiVCOCVBOSVFNSVCQSVBNiVFNCVCQyVBMCVFNiU4NCU5RiVFNSU5OSVBOCUyMiU3RCU1RCU3RCUyQyU3QiUyMnR5cGUlMjIlM0ElMjJsaXN0LWl0ZW0lMjIlMkMlMjJjaGVja2JveCUyMiUzQTAlMkMlMjJjaGlsZHJlbiUyMiUzQSU1QiU3QiUyMnRleHQlMjIlM0ElMjIlRTQlQjglODklRTglQkQlQjQlRTUlOEElQTAlRTklODAlOUYlRTUlQkElQTYlRTQlQkMlQTAlRTYlODQlOUYlRTUlOTklQTglMkJETVAlRTglQUUlQTElRTclQUUlOTclRTQlQkYlQUYlRTQlQkIlQjAlRTglQTclOTIlRTMlODAlODElRTglODglQUElRTUlODElOEYlRTglQTclOTIlRTMlODAlODElRTYlQkIlOUElRTglQkQlQUMlRTglQTclOTIlMjIlN0QlNUQlN0QlMkMlN0IlMjJ0eXBlJTIyJTNBJTIybGlzdC1pdGVtJTIyJTJDJTIyY2hlY2tib3glMjIlM0EwJTJDJTIyY2hpbGRyZW4lMjIlM0ElNUIlN0IlMjJ0ZXh0JTIyJTNBJTIyTm9kZU1DVSVFNiU5MiVBRCVFNiU5NCVCRSVFOSU5RiVCMyVFNCVCOSU5MCU1Q24lRTclQkQlOTElRTclQkIlOUMlRTYlQjUlODElRTYlOTIlQUQlRTYlOTQlQkUlNUNuU0QlRTYlOTIlQUQlRTYlOTQlQkUlMjIlN0QlNUQlN0QlNUQlN0QlNUQ=\">\n<li data-slate-node=\"element\"><span data-slate-node=\"text\">人体感应+蜂鸣器</span></li>\n<li data-slate-node=\"element\"><span data-slate-node=\"text\">温度传感器</span></li>\n<li data-slate-node=\"element\"><span data-slate-node=\"text\">三轴加速度传感器+DMP计算俯仰角、航偏角、滚转角</span></li>\n<li data-slate-node=\"element\"><span data-slate-node=\"text\">NodeMCU播放音乐 网络流播放 SD播放</span></li>\n</ol>', '最近学的ESP8266物联网模块的一些亲手测试。\n\n1.  [人体感应+蜂鸣器](#SECTION01)\n2.  [温度传感器](#SECTION02)\n3.  [三轴加速度传感器+DMP计算俯仰角、航偏角、滚转角](#SECTION03)\n4.  NodeMCU播放音乐 1) [网络流播放](#SECTION04) 2)[SD播放](#SECTION05)\n\n### <a id=\"SECTION01\"></a>人体感应+蜂鸣器\n\n    void setup() {\n      pinMode(D4,INPUT);\n      pinMode(D2,OUTPUT);\n      Serial.begin(115200);\n    }\n    void loop() {\n      if(digitalRead(D4)==1){\n        digitalWrite(D2,HIGH);\n      } else {\n        digitalWrite(D2,LOW);\n      }\n    }\n\n### <a id=\"SECTION02\"></a>温度传感器示例\n\n    #include <OneWire.h>\n    #include <DallasTemperature.h>\n    #define ONE_WIRE_BUS 2 // DS18B20 on NodeMCU pin D4 \n    OneWire oneWire(ONE_WIRE_BUS);\n    DallasTemperature DS18B20(&oneWire);\n    long lastMsg = 0;\n    float temp_0;\n    float temp_1;\n    void setup() \n    {\n      Serial.begin(115200);\n      DS18B20.begin();\n    }\n    void loop() {\n        long now = millis();\n        if (now - lastMsg > 3000) {\n          lastMsg = now;\n          Serial.print(\"3s发送数据\\n\");\n          DS18B20.requestTemperatures(); \n          temp_0 = DS18B20.getTempCByIndex(0); // Sensor 0 will capture Temp in Celcius\n          temp_1 = DS18B20.getTempFByIndex(1); // Sensor 0 will capture Temp in Fahrenheit\n          Serial.print(temp_0);\n          Serial.print(temp_1); \n        }\n    }\n\n> 示例\n> \n> [https://blog.csdn.net/qq\\_43933276/article/details/106805406](https://blog.csdn.net/qq_43933276/article/details/106805406)\n\n### <a id=\"SECTION03\"></a>三轴加速度传感器\n\n> 三轴加速度传感器角度值转换原理\n> \n> [https://blog.csdn.net/ylzmm/article/details/78453347](https://blog.csdn.net/ylzmm/article/details/78453347)\n\n> 示例\n> \n> [https://zhuanlan.zhihu.com/p/87380470](https://zhuanlan.zhihu.com/p/87380470)\n\n> Node MCU开发板-中断函数Arduino Demo及可用端口\n> \n> [https://zhuanlan.zhihu.com/p/87324730](https://zhuanlan.zhihu.com/p/87324730)\n\n### <a id=\"SECTION04\"></a>NodeMCU读取SD卡播放音乐+I2C 0.96寸OLED显示\n\n> Playing MP3’s (and other types) on your ESP32 from an SD Card [https://www.xtronical.com/esp32mp3/](https://www.xtronical.com/esp32mp3/)\n> \n> ESP8266 SD card mp3 source sputtering [https://www.gitmemory.com/issue/earlephilhower/ESP8266Audio/267/627014067](https://www.gitmemory.com/issue/earlephilhower/ESP8266Audio/267/627014067)\n\n问题：有严重pops声\n\n### <a id=\"SECTION05\"></a>NodeMCU网络流请求API 并JSON解析请求MP3文件播放\n\n问题：64kbs有严重pops声', NULL, NULL, 0, 43, 0, 1, NULL, 1, 1, '2021-05-05 12:18:11', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (43, 1, 4, 12, NULL, 'https://blog.gtwang.org/wp-content/uploads/2015/03/raspberry-pi-logo.jpg', '树莓派RaspberryPi B+ 安装Raspbian镜像 |.5寸TFT显示驱动安装 | 飞天键鼠展示', '<p>最近在某鱼上摸了一块树莓派B+，买来玩玩，只是烧个镜像和连接TFT3.5屏幕</p>\n<h5>材料：</h5>\n<ol>\n<li>\n<h6>树莓派B+ 50&yen;</h6>\n</li>\n<li>\n<h6>3.5TFT 33&yen;</h6>\n</li>\n<li>\n<h6>SD卡（16GB-32GB）</h6>\n</li>\n<li>\n<h6>网线、电源线&times;1</h6>\n</li>\n</ol>', '##### 材料：\n\n1.  ###### 树莓派B+ 50¥\n    \n2.  ###### 3.5TFT 33¥\n    \n3.  ###### SD卡（16GB-32GB）\n    \n4.  ###### 网线、电源线×1\n    \n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/otherIMG_0011(20210605-135622).JPG)\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other1623167988517.jpg)\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/otherIMG_0012(20210605-135638).JPG)\n\n##### 目录\n\n*   [raspberry B+刷入raspbian](#SECTION01)\n*   [3.5 寸 TFT屏幕驱动安装](#SECTION02)\n*   [完成：连接显示+飞天键鼠控制](#SECTION03)\n\n##### <a id=\"SECTION01\"></a>raspberry刷入操作系统\n\n下载\n\n[树莓派资源下载 | 树莓派实验室 (nxez.com)](https://shumeipai.nxez.com/download)\n\nB+性能不佳，这里我刷的是Raspbian lite：\n\n[Raspberry Pi OS（Raspbian)](https://downloads.raspberrypi.org/raspios_lite_armhf_latest)\n\n烧录\n\n官方[Win32DiskImager](https://make.quwj.com/bookmark/327/go) ([使用介绍](https://shumeipai.nxez.com/2013/09/07/raspberry-pi-under-windows-system-installation-to-sd-card.html))\n\n我习惯用[USB Image Tool](https://www.qqtn.com/down/553728.html)\n\n插入SD卡烧录下载的镜像.img即可\n\n启动\n\n启动前请在SD卡根目录新建 SSH 文件以开启SSH连接功能\n\n用XShell连接\n\n##### <a id=\"SECTION02\"></a>\\*安装TFT驱动\n\n###### 老版本安装TFT驱动\n\n下载[LCD-show.tar.gz驱动包](http://www.waveshare.net/w/upload/7/73/LCD-show.tar.gz)可以通过XFTP上传至设备\n\n或安装wget后线上下载\n\n    sudo wget http://www.lxx1.com/wp-content/uploads/2017/03/LCD-show-161112.tar.gz\n    \n\n接着执行\n\n    sudo tar xzvf /boot/LCD-show-161112.tar.gz\n    cd LCD-show/\n    sudo chmod +x LCD35-show\n    sudo ./LCD35-show lite\n    \n\n###### 新版本安装TFT驱动**（2020年更新）**\n\n    #安装Git\n    yum -y install git\n    #拉取文件\n    sudo git clone https://github.com/waveshare/LCD-show.git\n    #运行\n    cd LCD-show/\n    sudo ./LCD35-show\n    \n\n请等待重启...\n\n##### 注意事项\n\n1.  ⚠️：根据你下载镜像的新老，一定按照新老版本安装驱动！\n    \n2.  ⚠️：执行apt-get upgrade会导致LCD无法正常工作。此时需要编辑SD卡中的 config.txt 文件，并删除这一句：\n    \n3.      dtoverlay=ads7846\n        \n    \n4.  ⚠️：在Raspbian-lite系统下，需要执行sudo ./LCD35-show lite命令，以安装驱动。\n    \n5.  ⚠️：也可以使用已经安装好驱动的树莓派镜像[3.5inch RPi LCD (A)2019-07-10-raspbian-buster-full](https://pan.baidu.com/s/1UzqonC04Jt6uF0O0YR5BLg)\n    \n6.      ⚠️：#3.2inch RPi LCD (B)运行\n        sudo ./LCD32-show\n        #3.5inch RPi LCD (A)运行\n        sudo ./LCD35-show\n        #4inch RPi LCD (A)运行\n        sudo ./LCD4-show\n        #5inch HDMI LCD运行\n        sudo ./LCD5-show\n        \n    \n\n##### <a id=\"SECTION03\"></a>成果\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other%E8%9C%82%E8%9C%9C%E6%B5%8F%E8%A7%88%E5%99%A8_IMG20210605140506%20(2).jpg)', NULL, NULL, 0, 55, 0, 1, NULL, 1, 1, '2021-06-09 00:52:50', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (44, 1, 4, 12, NULL, '//mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/2022/7/11/16575437386820.png', 'ESP32 + LittleVGL流音乐播放器', '<h5>准备</h5>\n<ol style=\"margin-top: 0.8em; margin-bottom: 0.8em; font-weight: 400;\">\n<li>ESP32开发板&times;1 25&yen;</li>\n<li>ST7735 240*240 IPS &times;1 25&yen;</li>\n<li>功率放大模块</li>\n<li>传输线&times;1（务必买质量好的</li>\n<li>大量时间</li>\n</ol>\n<h5>目录</h5>\n<ol style=\"margin-top: 0.8em; margin-bottom: 0.8em; font-weight: 400;\">\n<li>安装CP210X驱动</li>\n<li>搭建PlotformIO+vscode开发环境</li>\n<li>爬虫分析</li>\n<li>代码部分</li>\n<li>展示</li>\n</ol>', '参考\n--\n\n[earlephilhower/ESP8266Audio](https://github.com/earlephilhower/ESP8266Audio)\n\n[Connecting Colour LCD to ESP32 (SPI ST7735 driver), TFT, Display, NodeMCU 32 - YouTube](https://www.youtube.com/watch?v=AHHKsM9vH5o)\n\n[ESP32 + 1.3 inch 240x240 IPS LCD (ST7789 SPI interface), using TFT\\_eSPI library](https://www.youtube.com/watch?v=7vYIGGlBRkU)\n\n##### [待阅](https://www.pschatzmann.ch/home/2021/04/29/stream-sd-mp3-files-to-a2dp-bluetooth-using-the-esp8266audio-library/)\n\n准备\n--\n\n1.  ESP32开发板×1 25¥\n2.  ST7735 240\\*240 IPS ×1 25¥\n3.  功率放大模块\n4.  传输线×1（务必买质量好的\n5.  大量时间\n\n目录\n--\n\n1.  安装CP210X驱动\n2.  [搭建PlotformIO+vscode开发环境](#SECTION01)\n3.  [爬虫分析](#SECTION02)\n4.  [代码部分](#SECTION03)\n5.  [展示](#SECTION05)\n\n### 安装CP210X驱动\n\n[CP210x USB to UART Bridge VCP Drivers](https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers)\n\n### <a id=\"SECTION01\"></a>搭建PlotformIO+vscode开发环境\n\n使用PlotformIO理由：编译快！\n\n但问题比较多...\n\n1.  vscode搜索PlotformIO安装插件\n2.  安装espressif插件（安装esp-idf时需能访问GitHub\n3.  配置项目 选择开发板 ESP32 Dev\n\n打开`platformio.ini`进行配置\n\n    [env:esp32dev]\n    platform = espressif32\n    board = esp32dev\n    framework = arduino\n    lib_ldf_mode = deep\n    monitor_speed = 115200\n    build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH\n    lib_deps = \n    	bblanchon/ArduinoJson@^6.18.0\n    	HTTPClient\n    	ESP8266Audio\n    \n\n### <a id=\"SECTION02\"></a>爬虫分析\n\n我本可以使用我的[JMusic]([Index (janxland.xyz)](/v/JMusic/#/))爬取网易云\n\n由于是在前端写的解密，后端再写就很麻烦了\n\n所以这里使用现成的接口\n\n数据来源：[Fearless (jsososo.com)](http://music.jsososo.com/#/search)\n\n    GET http://music.jsososo.com/apiMix/search?key=Summer&pageNo=1&type=0&_p=163\n    POST http://music.jsososo.com/apiMix/url/batch\n        id: 1818761223,40147554,1810606780,1829058827\n        _p: 163\n    \n\n### <a id=\"SECTION03\"></a>编写代码\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other20200726112218763.jpg)\n\n引脚连接\n\n\\*导入包libraris：TFT\\_eSPI、lv\\_arduino、ArduinoJson\n\nLVGL驱动屏幕实现\n\n1.  修改TFT\\_eSPI下的`User_Setup_Select.h`:取消注释52 lIne的`#include <User_Setups/Setup24_ST7789.h>`\n2.  在User\\_Setups文件夹下打开`Setup24_ST7789.h`配置开放引脚\n3.  运行官方示例.\n\n运行实例代码结果图\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other1.jpg)\n\n修改示例代码后（[LVGL专讲](https://so.csdn.net/so/search?q=LVGL&t=blog&u=cnicfhnui)）\n\n    tft.begin(); /* TFT init */\n    tft.setRotation(1); /* Landscape orientation */\n    \n    lv_disp_buf_init(&disp_buf, buf, NULL, LV_HOR_RES_MAX * 10);\n    \n    lv_disp_drv_t disp_drv;\n    lv_disp_drv_init(&disp_drv);\n    disp_drv.hor_res = 240; //改分辨率\n    disp_drv.ver_res = 240;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.buffer = &disp_buf;\n    lv_disp_drv_register(&disp_drv);\n    \n    lv_indev_drv_t indev_drv;\n    lv_indev_drv_init(&indev_drv);\n    indev_drv.type = LV_INDEV_TYPE_ENCODER;\n    indev_drv.read_cb = read_encoder;\n    lv_indev_drv_register(&indev_drv);\n    lv_obj_t *list1 = lv_list_create(lv_scr_act(),NULL);\n    lv_obj_set_size(list1,240,240);\n    lv_obj_align(list1, NULL, LV_ALIGN_IN_TOP_MID, 0, 0);\n    for (size_t i = 0; i < 20; i++)\n    {\n        btns[i] = lv_list_add_btn(list1,LV_SYMBOL_AUDIO,lists[i].name.c_str());\n    }\n    \n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other2.jpg)\n\n### <a id=\"SECTION04\"></a>ArduinoJson爬虫实现\n\n    struct music{\n        int id;\n        String name;  \n        String author;\n        String src;\n    };\n    music lists[20];\n    int pIndex = 0;\n    String GET(String path)\n    {\n      http.begin(client,path);\n      http.addHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n      int httpCode = http.GET();\n      if (httpCode < 0) {\n        Serial.println(\"request error - \" + httpCode);\n        return \"error\";\n      }\n      if (httpCode != HTTP_CODE_OK) {\n        return \"NOT OK\";\n      }\n      String response =  http.getString();\n      http.end();\n      return response;\n    }\n    String POST(String path,String body)\n    {\n      http.begin(client,path);\n      http.addHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n      int httpCode = http.POST(body);\n      if (httpCode < 0) {\n        Serial.println(\"request error - \" + httpCode);\n        return \"error\";\n      }\n      if (httpCode != HTTP_CODE_OK) {\n        return \"NOT OK\";\n      }\n      String response =  http.getString();\n      http.end();\n      return response;\n    }\n    //拉取 且 JSON解析\n    void pushMusic(String key,int page){\n      DynamicJsonDocument doc(16000);\n      deserializeJson(doc, GET(\"http://music.jsososo.com/apiMix/search?key=\"+key+\"&pageNo=\"+page+\"&type=0&_p=163&_t=1622969215356\"));\n      JsonArray list = doc[\"data\"][\"list\"].as<JsonArray>();\n      for(int i=0;i<list.size();i++){\n        lists[i].id = list[i][\"id\"].as<int>();\n        lists[i].name = list[i][\"name\"].as<String>();\n        lists[i].author = list[i][\"ar\"][0][\"name\"].as<String>();\n      }\n      String body = \"_p=163&id=\";\n      for(int i=0;i<20;i++){\n        if(i==19){\n          body=body+lists[i].id;\n        }else{\n          body=body+lists[i].id+\",\";\n        }\n      }\n      DynamicJsonDocument doc1(5120);\n      deserializeJson(doc1, POST(\"http://music.jsososo.com/apiMix/url/batch\",body));\n      for(int i=0;i<20;i++){\n        char str[20];\n        scanf(\"%d\", lists[i].id);\n        itoa(lists[i].id, str, 10);\n        lists[i].src = doc1[\"data\"][str].as<String>().c_str();\n      }\n    }\n    \n\n### ESP8266Audio流播放实现\n\n    ...\n    AudioGeneratorMP3 *mp3;\n    AudioFileSourceICYStream *file;\n    AudioFileSourceBuffer *buff;\n    AudioOutputI2SNoDAC *out;\n    ...\n    file = new AudioFileSourceICYStream(URL);\n    file->RegisterMetadataCB(MDCallback, (void*)\"ICY\");\n    buff = new AudioFileSourceBuffer(file, 2048);\n    buff->RegisterStatusCB(StatusCallback, (void*)\"buffer\");\n    out = new AudioOutputI2SNoDAC();\n    mp3 = new AudioGeneratorMP3();\n    mp3->RegisterStatusCB(StatusCallback, (void*)\"mp3\");\n    mp3->begin(buff, out);\n    ...\n    \n\n<a id=\"SECTION05\"></a>成果\n------------------------', NULL, NULL, 0, 229, 0, 1, NULL, 1, 1, '2021-06-09 01:40:23', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (45, 1, 4, 12, NULL, 'https://c-ssl.duitang.com/uploads/blog/202202/28/20220228103240_9796c.jpg', '【JMUSIC】让音符调动感官去阅读。', '<p>一款基于网易云音乐API实现的个人博客音乐播放器。</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/otherE48APZ3KSBF5RZ%5D1)TJ7RWY.png\"></p>', '前两年，边学习WEB前后端边编写了个 简易的HTML Music播放器 爬的是网易云音乐 大概是这样的\n\n### 目录\n\n##### 爬虫API分析\n\n##### 相关属性设置\n\n##### 三种配置方式\n\n1.  ###### iframe标签\n    \n2.  ###### load()方法\n    \n3.  ###### 顶部属性设置\n    \n\n### API分析\n\n##### 网易云分析（目前大部分函数已被替换，但功能仍存在，在爬取数量上做了限制\n\n打开网易云主页 ，打开开发者工具，点击搜索\n\n![img](http://img.wandouip.com/1872659-27b5eb3921def5a6447a7fb500fbb7b4)\n\n![img](http://img.wandouip.com/1872659-52e01d63b15a750ad2360a89737b20e3)\n\n是不是看到很多请求，不要慌，慢慢找。找了之后你会发现下面这个链接\n\n![img](http://img.wandouip.com/1872659-d7bc86f0f16ea106495bfa941f01e6a8)\n\n![img](http://img.wandouip.com/1872659-59054fb9215eafbe3dc761782c22310d)\n\n这个链接返回的是json，里面包含的是歌曲的信息，但是没有MP3播放链接，这个或许有用，因为有歌曲的id，先放着。\n\n我试着点击歌曲播放，又增加了几个请求。一看，里面就有我想要的MP3链接。\n\n![img](http://img.wandouip.com/1872659-66fcbb0b0d933df90db2febff881d81c)\n\n![img](http://img.wandouip.com/1872659-9aef6a18b5452f1d07422dda79910189)\n\n这样子，获取mp3请求的链接出来了，[https://music.163.com/weapi/song/enhance/player/url?csrf\\_token=](http://undefined/)\n\n可以看到是个post请求，状态码为200，我们接着往下看fromdata是什么数据。\n\n![img](http://img.wandouip.com/1872659-2bba6464612b92bb1e4de9524dbbdd7a)\n\n是两个加密了的参数，不过不怕，如果你看过我之前写的[利用python爬取网易云音乐，并把数据存入mysql](http://undefined/)你会发现fromdata参数是一样的，所以破解加密参数思路是一样的，不过这次我不用fiddler了，只用开发者工具来调试，看好了！！！我们看看这个请求的来源是什么。\n\n![img](http://img.wandouip.com/1872659-bf87ed4a5bd4fae861909ffcc56c036e)\n\n点进去看看，是个混淆的js，点左下角可以格式化，这样好看点。\n\n![img](http://img.wandouip.com/1872659-ffb5e0e1debb8ee57e146c818de14b19)\n\n![img](http://img.wandouip.com/1872659-94c8cf44fcdc6b0437e97ad4c055c9fa)\n\n进行搜索**params**，你会发现这个：\n\n![img](http://img.wandouip.com/1872659-39945cf1a8c7f1fb6f5b14c3d3e96a72)\n\n可以看到，加密的方式都没有改变，还是和之前一样，只是变量名字改变了。**window.asrsea()**有四个参数，先看看后面三个参数，因为都很相似。继续进行搜索定位。\n\n![img](http://img.wandouip.com/1872659-0b943c26a265e64cf5d1055ec8068a62)\n\n可以看出，返回的是一个固定的内容，所以不用管了，等下可以进行调试抓出来。再看看第一个参数。是一个json。我们可以进行断点调试进行获取。\n\n![img](http://img.wandouip.com/1872659-302aa2ac09c0dd7994178b97898a6182)\n\n进行刷新，你会看到下面这些内容。\n\n![img](http://img.wandouip.com/1872659-2847bc84e57caea473795b604cf1729e)\n\n可以看到**window.asrsea()**是一个d函数，定位过去看看，然后又给个断点。\n\n![img](http://img.wandouip.com/1872659-b669b7054615a055a6b26b1238e6b529)\n\n点击去往下一个断点，你会看到\n\n![img](http://img.wandouip.com/1872659-61c2e3129ddc501ec7100249813d96d8)\n\n四个参数都出来了，我直接贴出来这里吧：\n\n    d:\"{\"ids\":\"[523946593]\",\"br\":128000,\"csrf_token\":\"\"}\"e:\"010001\"f:\"00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7\"g:\"0CoJUm6Qyw8W8jud\"\n    \n\n参数都出来了，很容易就知道d参数里面的ids对应的就是歌曲id，所以说刚才找的链接有用了。br是个固定值，对应的可能是歌曲的质量之类的，不需要管的。\n\n下面再看看d函数是如何加密的：\n\n![img](http://img.wandouip.com/1872659-3bdd05a3719d00aca480dfd12f9c60a4)\n\n里面又包含了很多 **a , b ,c** 的三个函数，先看看 a 函数\n\n![img](http://img.wandouip.com/1872659-a911d64aec6608f025678fe8ea02c290)\n\n这个 a 函数是在一堆字符串中随机找出16个字符串。ok，下一个。\n\n![img](http://img.wandouip.com/1872659-9dc56c469f7612d56e68258df2d00dcd)\n\nb 函数采用了 **aes** 加密， 加密的密文是 **e** ，也就是参数的 **a** 内容，**c**是密钥，第三个参数中有偏移量 **d** 和加密模式 **CBC** 。再看看 c 函数。\n\n![img](http://img.wandouip.com/1872659-74821ae324f25b81ec71222ea8ee43d3)\n\nc 函数是采用 **rsa** 加密，b 为加密指数， 空字符串为解密参数，c 为加密系数。\n\n好了，三个函数分析完毕，再回头看看 d 函数。\n\n![img](http://img.wandouip.com/1872659-00f910b0361a097d4c3c0211357126fb)\n\n可以看到params参数是经过两次 b 函数生成的，也就是用 aes 加密两次，encSecKey参数是通过 c 函数生成的，也就是通过 rsa 加密方式生成的。\n\n废话不多说，Talk is cheap, show me the code\n\n### 食用方式\n\n#### iframe\n\n配置方法：在路由中加入参数\n\nhttp://${host}/v/JMusic/#/?playlist=6739493697&height=200px...\n\n    <iframe src=\"http://${host}/v/JMusic/#/?playlist=6739493697\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\" data-mce-fragment=\"1\"></iframe>\n    \n\n#### load()\n\n配置方法：在name=MUSIC元素中加入属性如：\n\n    <div id=\"appMusic\" ref=\"appMusic\"  playlist =\"6739493697\" name=\"MUSIC\" bottomStyle=\"true\" height=\"auto\" frameborder=\"no\" scrolling=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\"></div>\n    ...\n    $(\"#appMusic\").load(\"/v/JMusic/#/\");\n    //注意name=\"MUSIC\"\n    \n\n#### 顶部配置参数（优先级最高：\n\n    top.JMusicAttr = {\"playlist\":6739493697,\"shake\":true,\"bottom\":true};\n    \n\n### 展示', NULL, NULL, 0, 94, 0, 1, NULL, 1, 1, '2021-06-27 16:56:51', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (46, 1, 4, 12, NULL, '//mybox-1257251314.cos.ap-chengdu.myqcloud.com/upload/2021/8/15/16290033267270.png', 'Spring boot | Mybatis 遇到的坑', '<p style=\"padding-left: 40px;\">遇到问题：每隔一段时间进行请求无法获得内容。</p>\n<p style=\"padding-left: 40px;\">错误信息：\"The client was disconnected by the server because of inactivity. See wait_timeout and interactive_timeout for configuring this behavior.\"</p>\n<p style=\"padding-left: 40px;\">解决方法：<a href=\"https://www.cnblogs.com/mracale/p/9903318.html\" target=\"_blank\" rel=\"noopener\">关于MySQL的wait_timeout连接超时问题报错解决方案</a></p>\n<p style=\"padding-left: 40px;\">我的方法：在mybatis.cfg.xml修改</p>', '##### 坑一：\n\n遇到问题：每隔一段时间进行请求无法获得内容。\n\n错误信息：\"The client was disconnected by the server because of inactivity. See wait\\_timeout and interactive\\_timeout for configuring this behavior.\"\n\n分析问题：MySQL连接时，服务器默认的“wait\\_timeout”是8小时，也就是说一个connection空闲超过8个小时，Mysql将自动断开该connection。connections如果空闲超过8小时，Mysql将其断开，而DBCP连接池并不知道该connection已经失效，如果这时有Client请求connection，DBCP将该失效的Connection提供给Client，将会造成异常。\n\n解决方法：[关于MySQL的wait\\_timeout连接超时问题报错解决方案](https://www.cnblogs.com/mracale/p/9903318.html)\n\n我的方法：在mybatis.cfg.xml修改\n\n    <dataSource type=\"POOLED\">\n        ...\n        <!-- 定时活动连接-->\n        <property name=\"poolPingEnabled\" value=\"true\"/>\n        <property name=\"poolPingConnectionsNotUsedFor\" value=\"3600000\" />\n        <property name=\"poolPingQuery\" value=\"select 1\"/>\n        ...\n    </dataSource>    \n    \n\n##### 坑二：', NULL, NULL, 0, 65, 0, 1, NULL, 1, 1, '2021-08-15 12:55:32', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (47, 1, 4, 11, NULL, 'https://pic3.zhimg.com/80/v2-cd3a645fd2873915222126351a1fadea_720w.webp', '【深度学习】Anaconda 环境安装 + 初探 MNIST + 手写板GUI', '<h4 class=\"md-end-block md-heading\"><span class=\"md-plain md-expand\">参考</span></h4>\n<p class=\"md-end-block md-p\"><span class=\"md-meta-i-c  md-link\">&nbsp; <a href=\"https://blog.csdn.net/weixin_43848614/article/details/117221384\" target=\"_blank\" rel=\"noopener\"><span class=\"md-plain\">🔗 CUDA安装 （windows）</span></a></span></p>\n<p class=\"md-end-block md-p\"><span class=\"md-meta-i-c  md-link\">&nbsp; <a href=\"https://developer.nvidia.com/cuda-downloads\" target=\"_blank\" rel=\"noopener\"><span class=\"md-plain\">🔗 CUDA Toolkit 11.8 Downloads | NVIDIA Developer</span></a></span></p>\n<p class=\"md-end-block md-p\"><span class=\"md-meta-i-c  md-link\">&nbsp; <a href=\"https://developer.nvidia.com/rdp/cudnn-download\" target=\"_blank\" rel=\"noopener\"><span class=\"md-plain\">🔗 cuDNN Download | NVIDIA Developer</span></a></span></p>', '#### 参考\n\n  [🔗 CUDA安装 （windows）](https://blog.csdn.net/weixin_43848614/article/details/117221384)\n\n  [🔗 CUDA Toolkit 11.8 Downloads | NVIDIA Developer](https://developer.nvidia.com/cuda-downloads)\n\n  [🔗 cuDNN Download | NVIDIA Developer](https://developer.nvidia.com/rdp/cudnn-download)\n\n### 快速访问\n\n[初探MNIST](#SECTION01 \"点击到指定位置\")\n\n[视频演示](#SECTION02)\n\n#  \n\\# 创建一个名为envTest的环境，指定Python版本是3.6  \nconda create \\-n envTest python\\==3.6  \n\\# 激活虚拟环境  \nactivate envTest \\# for Windows  \nsource activate envTest \\# for Linux & Mac  \n\\# 退出虚拟环境  \ndeactivate envTest \\# for Windows  \nsource deactivate envTest \\# for Linux & Mac  \n\\# 删除一个已有的环境  \nconda remove \\-n envTest  \\--all  \n\\# 复制某个环境  \nconda create \\-n new\\_env\\_name \\--clone old\\_env\\_name   \n\\# 安装  \nconda install scikit-learn  \n\\# 分享环境 需先activate激活环境  \nconda env export > environment.yml  \nconda env create \\-f environment.yml\n\n清理\n\nconda clean \\-p      \\# 删除没有用的包 --packages  \nconda clean \\-t      \\# 删除tar打包 --tarballs  \nconda clean \\-y \\-all \\# 删除所有的安装包及cache(索引缓存、锁定文件、未使用过的包和tar包)\n\n国内源\n\n\\#   查看当前源  \nconda config \\--show-sources  \n\\#   添加源  \n#conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/  #清华源停服   \n\\#   腾讯云  \nconda config \\--add channels https://mirrors.cloud.tencent.com/anaconda/pkgs/free/  \nconda config \\--add channels https://mirrors.cloud.tencent.com/anaconda/pkgs/main/  \nconda config \\--set show\\_channel\\_urls yes  \n\\#   换回默认源  \nconda config \\--remove-key channels\n\n##### 安装Anaconda\n\n等待补充中...\n\n##### 安装CUDA\n\n首先查看本机GPU对应的cuda版本，如下图所示，本机cuda版本为11.5，后面选择的cuda版本不要超过这里的版本就好。\n\n![](https://img-blog.csdnimg.cn/0b898af5d57c4780a3c08c7683bee247.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oyH5bCW5Zyo6ZSu55uY5LiK6Iie5Yqo,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n检查完cuda之后，进入[https://developer.nvidia.com/cuda-toolkit-archive](https://developer.nvidia.com/cuda-toolkit-archive)该网站选者相应的cudatoolkit版本下载（tensorflow-gpu用到cudatoolkit，没必要把整个cuda都下载下来），如图所示，本机选择下载的版本为10.1，这里选择版本一定要注意，因为cuda版本会决定你下载的cudnn和tensorflow-gpu版本，若不一致，会出现版本不匹配等问题，无法使用，详细情况下面阐述。\n\n![](https://img-blog.csdnimg.cn/02f76755ec0945e1bc71b24e4c4553ab.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oyH5bCW5Zyo6ZSu55uY5LiK6Iie5Yqo,size_10,color_FFFFFF,t_70,g_se,x_16)\n\n①双击安装包，此时会出现一个提示框，让你选择临时解压位置（该位置的内容在你安装完cuda之后会自动删除），这里默认即可，点击ok。\n\n②完成上一步后，选择自定义，然后点下一步。\n\n③完成上一步，这里CUDA一定要勾选上，下面的可选可不选，对后续没有影响。\n\n④然后一直下一步，等待安装结束（中间让选择安装位置时，可以更改目录，最好只改前面的盘符，后面的文件夹保持一致，方便以后管理）。\n\n⑤完成安装后，检查一下环境变量是否存在，一般安装完成会自动配置好环境变量，若是没有，则需手动配置，具体过程如下。\n\n![](https://img-blog.csdnimg.cn/3cdc67df8517491187e85f13b515d1bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oyH5bCW5Zyo6ZSu55uY5LiK6Iie5Yqo,size_10,color_FFFFFF,t_70,g_se,x_16)\n\n##### 安装cudnn\n\n打开该网址[https://developer.nvidia.com/rdp/cudnn-archive](https://developer.nvidia.com/rdp/cudnn-archive)，第一次单击下载时，会让你先注册登录，然后再进行下载，注册过程认真填写内容就没问题，此处略过，接下来进入下载环节。\n\n①首先，根据安装的CUDA版本下载对应的cuDNN版本，以及对应的tensoflow-gpu版本、python版本都从这里查看，详细信息查看该网址[https://tensorflow.google.cn/install/source\\_windows](https://tensorflow.google.cn/install/source_windows)。\n\n②下载完成后，解压此文件，将cudnn文件中对应的文件移动到cuda对用安装目录中，注意不要移动到错误的位置。\n\n![](https://img-blog.csdnimg.cn/7d4245a831144b62bfad33a9e2de5ddc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oyH5bCW5Zyo6ZSu55uY5LiK6Iie5Yqo,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![](https://img-blog.csdnimg.cn/6dc7148bb7b04844a7e1f2312ddfe7ef.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oyH5bCW5Zyo6ZSu55uY5LiK6Iie5Yqo,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n##### 安装tensorflow-gpu\n\n方式一：pip install tensorflow-gpu==2.6.0 -i [https://pypi.tuna.tsinghua.edu.cn/simple](https://pypi.tuna.tsinghua.edu.cn/simple)\n\n方式二：进入anaconda环境 conda install tensorflow-gpu==2.6.0\n\n##### 测试代码\n\n进入anaconda\n\npython #进入python代码写入  \nimport tensorflow as tf  \ntf.test.is\\_gpu\\_available()  \n####将返回显卡信息便成功####\n\n##### pycharm配置\n\n初探MNIST小项目<a id=\"SECTION01\"></a>\n-------------------------------\n\n作为深度学习版的Hello world，手写数字识别是一个很基础的深1度学习项目，这里写一下实现过程检验一下环境是否完善。\n\n参考项目：\n\n[手把手用keras分类mnist数据集](https://blog.csdn.net/qq_40438165/article/details/105846692)\n\n[hamlinzheng/mnist (github.com)](https://github.com/hamlinzheng/mnist)\n\n### ①使用全连接神经网络\n\n    import os.path\n    from tensorflow.python.keras.utils.np_utils import to_categorical\n    from tensorflow.keras import models, layers, regularizers\n    from tensorflow.keras.optimizers import RMSprop\n    from keras.datasets import mnist\n    from keras.models import load_model\n    from functions import softmax\n    import matplotlib.pyplot as plt\n    # 加载数据集\n    (train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n    \n    train_images = train_images.reshape((60000, 28*28)).astype(\'float\')\n    test_images = test_images.reshape((10000, 28*28)).astype(\'float\')\n    train_labels = to_categorical(train_labels)\n    test_labels = to_categorical(test_labels)\n    network = models.Sequential()\n    if os.path.exists(\"E:/project/pytorch/model/mymodel.h5\") :\n        network = load_model(filepath=\"E:/project/pytorch/model/mymodel.h5\")\n    else:\n        network.add(layers.Dense(units=128, activation=\'relu\', input_shape=(28*28, ),\n                                 kernel_regularizer=regularizers.l1(0.0001)))\n        network.add(layers.Dropout(0.01))\n        network.add(layers.Dense(units=32, activation=\'relu\',\n                                 kernel_regularizer=regularizers.l1(0.0001)))\n        network.add(layers.Dropout(0.01))\n        network.add(layers.Dense(units=10, activation=\'softmax\'))\n        # 编译步骤\n        network.compile(optimizer=RMSprop(lr=0.001), loss=\'categorical_crossentropy\', metrics=[\'accuracy\'])\n        # 训练网络，用fit函数, epochs表示训练多少个回合， batch_size表示每次训练给多大的数据\n        network.fit(train_images, train_labels, epochs=20, batch_size=128, verbose=2)\n        # 来在测试集上测试一下模型的性能吧\n    test_loss, test_accuracy = network.evaluate(test_images, test_labels)\n    print(\"test_loss:\", test_loss, \"    test_accuracy:\", test_accuracy)\n    network.save(filepath=\"E:/project/pytorch/model/mymodel.h5\")\n\n### ②使用卷积神经网络\n\n    from tensorflow.python.keras.utils.np_utils import to_categorical\n    from tensorflow.keras import models, layers, regularizers\n    from tensorflow.keras.optimizers import RMSprop\n    from keras.datasets import mnist\n    from keras.models import load_model\n    # 加载数据集\n    (train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n    # 搭建LeNet网络\n    def LeNet():\n        network = models.Sequential()\n        network.add(layers.Conv2D(filters=6, kernel_size=(3, 3), activation=\'relu\', input_shape=(28, 28, 1)))\n        network.add(layers.AveragePooling2D((2, 2)))\n        network.add(layers.Conv2D(filters=16, kernel_size=(3, 3), activation=\'relu\'))\n        network.add(layers.AveragePooling2D((2, 2)))\n        network.add(layers.Conv2D(filters=120, kernel_size=(3, 3), activation=\'relu\'))\n        network.add(layers.Flatten())\n        network.add(layers.Dense(84, activation=\'relu\'))\n        network.add(layers.Dense(10, activation=\'softmax\'))\n        return network\n    network = LeNet()\n    network.compile(optimizer=RMSprop(lr=0.001), loss=\'categorical_crossentropy\', metrics=[\'accuracy\'])\n    train_images = train_images.reshape((60000, 28, 28, 1)).astype(\'float\') / 255\n    test_images = test_images.reshape((10000, 28, 28, 1)).astype(\'float\') / 255\n    train_labels = to_categorical(train_labels)\n    test_labels = to_categorical(test_labels)\n    # 训练网络，用fit函数, epochs表示训练多少个回合， batch_size表示每次训练给多大的数据\n    network.fit(train_images, train_labels, epochs=10, batch_size=128, verbose=2)\n    test_loss, test_accuracy = network.evaluate(test_images, test_labels)\n    print(\"test_loss:\", test_loss, \"    test_accuracy:\", test_accuracy)\n    \n    \n\n### GUI界面实现\n\nmain.py\n\n    from MainWidget import MainWidget\n    from PyQt5.QtWidgets import QApplication\n    import sys\n    def main():\n        app = QApplication(sys.argv)\n        mainWidget = MainWidget() #新建一个主界面\n        mainWidget.show()    #显示主界面\n        exit(app.exec_()) #进入消息循环\n    if __name__ == \'__main__\':\n        main()\n    \n    \n\nPaintBoard.py\n\n    \'\'\'\n    Created on 2018年8月9日\n    \n    @author: Freedom\n    \'\'\'\n    \n    from PyQt5.QtWidgets import QWidget\n    from PyQt5.Qt import QPixmap, QPainter, QPoint, QPaintEvent, QMouseEvent, QPen,\\\n        QColor, QSize\n    from PyQt5.QtCore import Qt\n    class PaintBoard(QWidget):\n        def __init__(self, Parent=None):\n            \'\'\'\n            Constructor\n            \'\'\'\n            super().__init__(Parent)\n            self.__InitData() #先初始化数据，再初始化界面\n            self.__InitView()\n        def __InitData(self):\n            self.__size = QSize(280,280)\n            #新建QPixmap作为画板，尺寸为__size\n            self.__board = QPixmap(self.__size)\n            self.__board.fill(Qt.black) #用白色填充画板\n            self.__IsEmpty = True #默认为空画板 \n            self.EraserMode = False #默认为禁用橡皮擦模式\n            self.__lastPos = QPoint(0,0)#上一次鼠标位置\n            self.__currentPos = QPoint(0,0)#当前的鼠标位置\n            self.__painter = QPainter()#新建绘图工具\n            self.__thickness = 10       #默认画笔粗细为10px\n            self.__penColor = QColor(\"white\")#设置默认画笔颜色为黑色\n            self.__colorList = QColor.colorNames() #获取颜色列表\n        def __InitView(self):\n            #设置界面的尺寸为__size\n            self.setFixedSize(self.__size)\n        def Clear(self):\n            #清空画板\n            self.__board.fill(Qt.black)\n            self.update()\n            self.__IsEmpty = True\n        def ChangePenColor(self, color=\"black\"):\n            #改变画笔颜色\n            self.__penColor = QColor(color)\n        def ChangePenThickness(self, thickness=10):\n            #改变画笔粗细\n            self.__thickness = thickness\n        def IsEmpty(self):\n            #返回画板是否为空\n            return self.__IsEmpty\n        def GetContentAsQImage(self):\n            #获取画板内容（返回QImage）\n            image = self.__board.toImage()\n            return image\n        def paintEvent(self, paintEvent):\n            #绘图事件\n            #绘图时必须使用QPainter的实例，此处为__painter\n            #绘图在begin()函数与end()函数间进行\n            #begin(param)的参数要指定绘图设备，即把图画在哪里\n            #drawPixmap用于绘制QPixmap类型的对象\n            self.__painter.begin(self)\n            # 0,0为绘图的左上角起点的坐标，__board即要绘制的图\n            self.__painter.drawPixmap(0,0,self.__board)\n            self.__painter.end()\n        def mousePressEvent(self, mouseEvent):\n            #鼠标按下时，获取鼠标的当前位置保存为上一次位置\n            self.__currentPos =  mouseEvent.pos()\n            self.__lastPos = self.__currentPos\n        def mouseMoveEvent(self, mouseEvent):\n            #鼠标移动时，更新当前位置，并在上一个位置和当前位置间画线\n            self.__currentPos =  mouseEvent.pos()\n            self.__painter.begin(self.__board)\n            if self.EraserMode == False:\n                #非橡皮擦模式\n                self.__painter.setPen(QPen(self.__penColor,self.__thickness)) #设置画笔颜色，粗细\n            else:\n                #橡皮擦模式下画笔为纯白色，粗细为10\n                self.__painter.setPen(QPen(Qt.white,10))\n            #画线    \n            self.__painter.drawLine(self.__lastPos, self.__currentPos)\n            self.__painter.end()\n            self.__lastPos = self.__currentPos\n            self.update() #更新显示\n        def mouseReleaseEvent(self, mouseEvent):\n            self.__IsEmpty = False #画板不再为空\n    \n\nMainWidget.py\n\n    from network import  network\n    import numpy as np\n    from PIL import Image, ImageQt\n    from PyQt5.Qt import QWidget, QColor, QPixmap, QIcon, QSize, QCheckBox\n    from PyQt5.QtWidgets import QHBoxLayout, QVBoxLayout, QPushButton, QSplitter,\\\n        QComboBox, QLabel, QSpinBox, QFileDialog\n    from PaintBoard import PaintBoard\n    from functions import softmax\n    class MainWidget(QWidget):\n        def __init__(self, Parent=None):\n            \'\'\'\n            Constructor\n            \'\'\'\n            super().__init__(Parent)\n            self.__InitData() #先初始化数据，再初始化界面\n            self.__InitView()\n        def __InitData(self):\n            \'\'\'\n                      初始化成员变量\n            \'\'\'\n            self.__paintBoard = PaintBoard(self)\n            #获取颜色列表(字符串类型)\n            self.__colorList = QColor.colorNames() \n        def __InitView(self):\n            \'\'\'\n                      初始化界面\n            \'\'\'\n            self.setFixedSize(640,480)\n            self.setWindowTitle(\"MNIST PREDICT TEST...\")\n            #新建一个水平布局作为本窗体的主布局\n            main_layout = QHBoxLayout(self) \n            #设置主布局内边距以及控件间距为10px\n            main_layout.setSpacing(10)\n            #在主界面左侧放置画板\n            main_layout.addWidget(self.__paintBoard)\n            #新建垂直子布局用于放置按键\n            sub_layout = QVBoxLayout()\n            #设置此子布局和内部控件的间距为10px\n            sub_layout.setContentsMargins(10, 10, 10, 10)\n            self.__btn_Clear = QPushButton(\"清空画板\")\n            self.__btn_Clear.setParent(self) #设置父对象为本界面\n            #将按键按下信号与画板清空函数相关联\n            self.__btn_Clear.clicked.connect(self.__paintBoard.Clear) \n            sub_layout.addWidget(self.__btn_Clear)\n            self.__btn_Quit = QPushButton(\"退出\")\n            self.__btn_Quit.setParent(self) #设置父对象为本界面\n            self.__btn_Quit.clicked.connect(self.Quit)\n            sub_layout.addWidget(self.__btn_Quit)\n            self.__btn_Save = QPushButton(\"保存作品\")\n            self.__btn_Save.setParent(self)\n            self.__btn_Save.clicked.connect(self.on_btn_Save_Clicked)\n            sub_layout.addWidget(self.__btn_Save)\n            self.__btn_Exec = QPushButton(\"识别\")\n            self.__btn_Exec.setParent(self)\n            self.__btn_Exec.clicked.connect(self.on_btn_Exec_Clicked)\n            sub_layout.addWidget(self.__btn_Exec)\n            self.__cbtn_Eraser = QCheckBox(\"  使用橡皮擦\")\n            self.__cbtn_Eraser.setParent(self)\n            self.__cbtn_Eraser.clicked.connect(self.on_cbtn_Eraser_clicked)\n            sub_layout.addWidget(self.__cbtn_Eraser)\n            splitter = QSplitter(self) #占位符\n            sub_layout.addWidget(splitter)\n            self.__label_result = QLabel(self)\n            self.__label_result.setText(\"识别结果：NaN\")\n            self.__label_result.setFixedHeight(20)\n            sub_layout.addWidget(self.__label_result)\n            self.__label_penThickness = QLabel(self)\n            self.__label_penThickness.setText(\"画笔粗细\")\n            self.__label_penThickness.setFixedHeight(40)\n            sub_layout.addWidget(self.__label_penThickness)\n            self.__spinBox_penThickness = QSpinBox(self)\n            self.__spinBox_penThickness.setMaximum(20)\n            self.__spinBox_penThickness.setMinimum(2)\n            self.__spinBox_penThickness.setValue(10) #默认粗细为10\n            self.__spinBox_penThickness.setSingleStep(2) #最小变化值为2\n            self.__spinBox_penThickness.valueChanged.connect(self.on_PenThicknessChange)#关联spinBox值变化信号和函数on_PenThicknessChange\n            sub_layout.addWidget(self.__spinBox_penThickness)\n            self.__label_penColor = QLabel(self)\n            self.__label_penColor.setText(\"画笔颜色\")\n            self.__label_penColor.setFixedHeight(20)\n            sub_layout.addWidget(self.__label_penColor)\n            self.__comboBox_penColor = QComboBox(self)\n            self.__fillColorList(self.__comboBox_penColor) #用各种颜色填充下拉列表\n            self.__comboBox_penColor.currentIndexChanged.connect(self.on_PenColorChange) #关联下拉列表的当前索引变更信号与函数on_PenColorChange\n            sub_layout.addWidget(self.__comboBox_penColor)\n            main_layout.addLayout(sub_layout) #将子布局加入主布局\n        def __fillColorList(self, comboBox):\n            index_black = 0\n            index = 0\n            for color in self.__colorList: \n                if color == \"black\":\n                    index_black = index\n                index += 1\n                pix = QPixmap(70,20)\n                pix.fill(QColor(color))\n                comboBox.addItem(QIcon(pix),None)\n                comboBox.setIconSize(QSize(70,20))\n                comboBox.setSizeAdjustPolicy(QComboBox.AdjustToContents)\n            comboBox.setCurrentIndex(index_black)\n        def on_PenColorChange(self):\n            color_index = self.__comboBox_penColor.currentIndex()\n            color_str = self.__colorList[color_index]\n            self.__paintBoard.ChangePenColor(color_str)\n        def on_PenThicknessChange(self):\n            penThickness = self.__spinBox_penThickness.value()\n            self.__paintBoard.ChangePenThickness(penThickness)\n        def on_btn_Save_Clicked(self):\n            savePath = QFileDialog.getSaveFileName(self, \'Save Your Paint\', \'.\\\\\', \'*.png\')\n            print(savePath)\n            if savePath[0] == \"\":\n                print(\"Save cancel\")\n                return\n            image = self.__paintBoard.GetContentAsQImage()\n            image.save(savePath[0])\n        def on_btn_Exec_Clicked(self):\n            __img, img_array = [], []  # 将图像统一从qimage->pil image -> np.array [1, 1, 28, 28]\n            # 获取qimage格式图像\n            __img = self.__paintBoard.GetContentAsQImage()\n            # 转换成pil image类型处理\n            pil_img = ImageQt.fromqimage(__img)\n            cutout = pil_img.resize((28, 28), Image.ANTIALIAS)\n            cutout.convert(\'L\').save(\"1.png\")\n            img_array = (np.array(cutout.convert(\'L\')).reshape(1,784))\n            # reshape成网络输入类型\n            __result = network.predict(img_array)  # shape:[1, 10]\n            # 将预测结果使用softmax输出\n            __result = softmax(__result)\n            self.__label_result.setText(\"识别结果：%d\" % (np.argmax(__result)))\n        def on_cbtn_Eraser_clicked(self):\n            if self.__cbtn_Eraser.isChecked():\n                self.__paintBoard.EraserMode = True #进入橡皮擦模式\n            else:\n                self.__paintBoard.EraserMode = False #退出橡皮擦模式\n        def Quit(self):\n            self.close()\n\nnetwork.py（我使用的是全连接神经网络\n\n    import os.path\n    from tensorflow.python.keras.utils.np_utils import to_categorical\n    from tensorflow.keras import models, layers, regularizers\n    from tensorflow.keras.optimizers import RMSprop\n    from keras.datasets import mnist\n    from keras.models import load_model\n    from functions import softmax\n    import matplotlib.pyplot as plt\n    # 加载数据集\n    (train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n    train_images = train_images.reshape((60000, 28*28)).astype(\'float\')\n    test_images = test_images.reshape((10000, 28*28)).astype(\'float\')\n    train_labels = to_categorical(train_labels)\n    test_labels = to_categorical(test_labels)\n    network = models.Sequential()\n    if os.path.exists(\"E:/project/pytorch/model/mymodel.h5\") :\n        network = load_model(filepath=\"E:/project/pytorch/model/mymodel.h5\")\n    else:\n        network.add(layers.Dense(units=128, activation=\'relu\', input_shape=(28*28, ),\n                                 kernel_regularizer=regularizers.l1(0.0001)))\n        network.add(layers.Dropout(0.01))\n        network.add(layers.Dense(units=32, activation=\'relu\',\n                                 kernel_regularizer=regularizers.l1(0.0001)))\n        network.add(layers.Dropout(0.01))\n        network.add(layers.Dense(units=10, activation=\'softmax\'))\n        # 编译步骤\n        network.compile(optimizer=RMSprop(lr=0.001), loss=\'categorical_crossentropy\', metrics=[\'accuracy\'])\n        # 训练网络，用fit函数, epochs表示训练多少个回合， batch_size表示每次训练给多大的数据\n        network.fit(train_images, train_labels, epochs=20, batch_size=128, verbose=2)\n        # 来在测试集上测试一下模型的性能吧\n    test_loss, test_accuracy = network.evaluate(test_images, test_labels)\n    print(\"test_loss:\", test_loss, \"    test_accuracy:\", test_accuracy)\n    network.save(filepath=\"E:/project/pytorch/model/mymodel.h5\")\n\n演示视频<a id=\"SECTION02\"></a>\n-------------------------', NULL, NULL, 0, 104, 0, 1, NULL, 1, 1, '2022-10-13 17:49:46', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (48, 1, 4, 11, NULL, 'https://i0.wp.com/www.artit-k.com/wp-content/uploads/2017/09/Git-Workshop.png?w=960', 'Git 安装及其与Github连接使用', '<h4>何为Git</h4>\n<p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p>\n<p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。优点：</p>\n<ol>\n<li>适合分布式开发，强调个体。</li>\n<li>公共服务器压力和数据量都不会太大。</li>\n<li>速度快、灵活。</li>\n<li>任意两个开发者之间可以很容易的解决冲突。</li>\n<li>离线工作。</li>\n</ol>', '#### 何为Git\n\nGit是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。\n\nGit 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。优点：\n\n1.  适合分布式开发，强调个体。\n2.  公共服务器压力和数据量都不会太大。\n3.  速度快、灵活。\n4.  任意两个开发者之间可以很容易的解决冲突。\n5.  离线工作。\n\n#### 安装Git\n\n下载地址：[Git](https://git-scm.com/)\n\n跟着向导安装即可，如图下打开使用\n\n![https://pic4.zhimg.com/80/v2-da6c0da970be1e2cc393285b5ff8c5db_720w.webp](https://pic4.zhimg.com/80/v2-da6c0da970be1e2cc393285b5ff8c5db_720w.webp)\n\n进入你想上传的项目文件夹下，然后右键点击Git Bash Here\n\n#### 配置你的用户名及邮箱\n\n    git config --global user.name \"xxx\"\n    git config --global user.email \"xxx\"\n    #查看用户名邮箱\n    git config user.name\n    git config user.email\n\n初始化本地环境（项目目录下）\n\n`git init`\n\n添加项目下所有文件\n\n`git add .`\n\n将文件添加到仓库中去\n\n`git commit -m \'说明\'`\n\n#### 在远程端创建仓库\n\n正常建立仓库即可：[https://github.com/new/import](https://github.com/new/import)\n\n#### 将本地代码库与远程仓库相关联\n\n##### 1.创建SSH Key。\n\n在用户主目录（C:\\\\Users\\\\Administrator）下，看看有没有.ssh文件，如果有，再看文件下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接到下一步。如果没有，打开Git Bash，输入命令，创建SSH Key`ssh-keygen -t rsa -C \"你自己注册GitHub的邮箱\"`\n\n![https://pic1.zhimg.com/80/v2-f623d1b118fe8839a8e74a1a30c60174_720w.webp](https://pic1.zhimg.com/80/v2-f623d1b118fe8839a8e74a1a30c60174_720w.webp)\n\n##### 2.接下来到GitHub上，打开“Account settings”--“SSH Keys”页面，然后点击“Add SSH Key”，填上Title（随意写），在Key文本框里粘贴 id\\_rsa.pub文件里的全部内容。（Gitee同理）\n\n![https://pic4.zhimg.com/80/v2-8eba349f49c8a264fde7c88e20942acf_720w.webp](https://pic4.zhimg.com/80/v2-8eba349f49c8a264fde7c88e20942acf_720w.webp)\n\n![https://img-blog.csdnimg.cn/20191120111925688.png](https://img-blog.csdnimg.cn/20191120111925688.png)\n\n##### 3.git bash里输入命令登陆\n\n`ssh -T git@github.com`\n\n##### 4.连接仓库\n\n`git remote add origin 仓库地址`\n\n#### 远程与本地的真正交接\n\n克隆到本地\n\n`git clone SSH地址`\n\n拉取代码到本地\n\n`git pull origin master`\n\n上传推送到仓库\n\n`git push -u origin master`', NULL, NULL, 0, 53, 0, 1, NULL, 1, 1, '2022-10-16 16:25:24', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (49, 1, 4, 11, NULL, 'https://mahongfei.com/wp-content/uploads/2019/11/1574871231-clash-win-logo.png', '【个人分享】订阅分享 和 内网穿透', '<h3 style=\"text-align: left;\">内网穿透、机场节点</h3>\n<p>仅收集个人使用</p>', '内网穿透分享\n======\n\n#### 中国香港Server （Hong Kong, China ）\n\n> 服务器地址:`hk-free-frp.2003125.xyz`\n> \n> 连接端口 `7000`\n> \n> 状态面板地址 [hk-free-frp.2003125.xyz:6443](https://www.sorkai.com/go/aHR0cDovL2hrLWZyZWUtZnJwLjIwMDMxMjUueHl6OjY0NDM)\n> \n> 面板账号 `admin` 面板密码 `g4Tla0Il` token = `r87iyrgtdyvyniughervt`\n> \n> 支持 web 80(http)/443(https) 支持 10000-65535端口\n\n> 服务器地址： hk2.freefrp.club\n> \n> 端口： 80 / 443，7000（TCP）,7001(UDP) \n> \n> Token： [www.idonglei.com](https://www.idonglei.com)\n> \n> 开放端口： 20001-50000\n> \n> 免费域名： \\*.hk2.freefrp.club\n> \n> frps版本： 0.41.0\n\n> ###### 中国香港Server （Hong Kong, China ）（上下行限速1024 Kbps，有人滥用）\n> \n> 服务器地址： hk.freefrp.club\n> \n> 端口： 80 / 443，7000（TCP）,7001(UDP)\n> \n> Token： [www.idonglei.com](https://www.idonglei.com)\n> \n> 开放端口： 10001-50000\n> \n> 免费域名： \\*.hk.freefrp.club\n> \n> frps版本： 0.39.0\n\n#### 美国旧金山Server（SF, USA）\n\n> 服务器地址： us.freefrp.club\n> \n> 端口： 80 / 443，7000（TCP）,7001(UDP)\n> \n> Token： [www.idonglei.com](https://www.idonglei.com)\n> \n> 开放端口： 10001-50000\n> \n> 免费域名： \\*.us.freefrp.club\n> \n> frps版本： 0.41.0\n\n> ###### 美国圣何塞Server（SJ, USA）服务器地址： sj.freefrp.club 端口： 80 / 443，7000（TCP）,7001(UDP) Token： [www.idonglei.com](http://www.idonglei.com) 开放端口： 15000-50000 免费域名： \\*.sj.freefrp.club frps版本： 0.41.0\n\n#### 韩国首尔\n\n[Free FRP 免费 FRP 内网穿透](https://freefrp.net/)\n\n### UP分享\n\n[UP主自建永久免费的FRP服务器！](https://www.bilibili.com/video/av208276411/?vd_source=67b9ab45b02b73b3d8662c62e2a046e1)\n\n机场节点分享\n------\n\n [iKuuu](https://ikuuu.dev/user##) ( 每月50GB ）\n\n[24小时在线直播分享 - YouTube](https://www.youtube.com/watch?v=4ivs7rZWcM8) （直播分享节点）', NULL, NULL, 0, 60, 0, 1, NULL, 0, 1, '2022-11-06 14:03:43', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (50, 1, 4, 11, NULL, 'https://cccitu-img.huashengls.com/wp-content/uploads/1650723593846.png?imageMogr2/format/webp/quality/90', '【哔哩哔哩港澳台】如何优雅的访问海的那边', '<p>爱好B站番剧的同学，大概遇到过 <code>bilibili</code>&nbsp;的提示\"<strong>非常抱歉，根据版权方要求，您所在的地区无法观看本片～</strong>\"。即便你开通了<mark>大会员</mark>，这些仅<mark>港澳台限定</mark>番剧依然无法观看。</p>\n<p>在 2022 年，电脑观看港澳台限定地区的番剧请阅读本教程 &mdash;&mdash;转自&nbsp;<a href=\"https://www.cccitu.com/4953.html\" target=\"_blank\" rel=\"noopener\">玩机大学 (cccitu.com)</a></p>', '爱好B站番剧的同学，大概遇到过 `bilibili` 的提示\"**非常抱歉，根据版权方要求，您所在的地区无法观看本片～**\"。即便你开通了大会员，这些仅港澳台限定番剧依然无法观看。\n\n在 2022 年，电脑观看港澳台限定地区的番剧请阅读本教程，手机上观看请参考《[手机和电脑看B站港澳台限定番剧](https://www.cccitu.com/2205254.html)》\n\n解决办法\n----\n\n对于浏览器，我们可以使用 JS 脚本，通过替换获取视频地址接口的方式，实现解除B站区域限制，在此感谢作者 [ipcjs](https://github.com/ipcjs/bilibili-helper) 提供的开源脚本。\n\n![如何解除B站(哔哩哔哩)港澳台限定番剧的限制](https://cccitu-img.huashengls.com/wp-content/uploads/2021110100040120.png \"如何解除B站(哔哩哔哩)港澳台限定番剧的限制\")\n\n这里额外说一下，身居海外的朋友们也可以通过此方法解除某些视频仅限大陆观看的限制，只需要在下面教程的设置中，添加大陆解析接口。\n\n2\\. 安装脚本\n--------\n\n### 2.1 浏览器需：\n\nChrome 谷歌浏览器（[下载](https://www.cccitu.com/4868.html)） 或 Windows 自带的 Edge 浏览器 扩展下载。\n\n### 2.2 安装油猴插件（已安装的可跳过）：\n\n![如何解除B站(哔哩哔哩)港澳台限定番剧的限制](https://cccitu-img.huashengls.com/wp-content/uploads/2021110100051491.png \"如何解除B站(哔哩哔哩)港澳台限定番剧的限制\")\n\n在 [https://crxdl.com/](https://crxdl.com/) 搜 `dhdgffkkebhmkfjojejmpbldmpobfkfo` 下载油猴插件，并将下载到的`压缩包解压`。\n\n![如何解除B站(哔哩哔哩)港澳台限定番剧的限制](https://cccitu-img.huashengls.com/wp-content/uploads/2021110100040232.gif \"如何解除B站(哔哩哔哩)港澳台限定番剧的限制\")\n\n在 Chrome 浏览器地址栏输入 `chrome://extensions/` 打开，启动右上角的`开发者模式`，将解压后的 `.crx` 文件拖动到此页面完成安装。\n\n### 2.3 添加脚本：\n\n![如何解除B站(哔哩哔哩)港澳台限定番剧的限制](https://cccitu-img.huashengls.com/wp-content/uploads/2021110100040199.png \"如何解除B站(哔哩哔哩)港澳台限定番剧的限制\")\n\n在 [https://wanji.app/js/875.html](https://wanji.app/js/875.html) 点击最新版脚本进入安装页面，完成脚本的安装。\n\n### 2.4 启用脚本\n\n![如何解除B站(哔哩哔哩)港澳台限定番剧的限制](https://cccitu-img.huashengls.com/wp-content/uploads/1650723017830.gif \"如何解除B站(哔哩哔哩)港澳台限定番剧的限制\")\n\n以番剧《迦希大人不气馁》为例，先打开网址：[2022十月新番 (bilibili.com)](https://www.bilibili.com/bangumi/list/sl62024) 然后点击浏览器右上角的扩展程序图标->点击油猴插件右侧钉子图标->点击油猴插件图标->启用油猴插件和启用解除限制脚本\n\n3\\. 设置脚本\n--------\n\n![](https://cccitu-img.huashengls.com/wp-content/uploads/1650723593846.png?imageMogr2/format/webp/quality/90)\n\n脚本启用后，点击《[迦希大人不气馁](https://www.bilibili.com/bangumi/media/md28234736)》，刷新页面，会增加一个如图所示的星球图标，点击即可进入脚本设置页面。\n\n![](https://cccitu-img.huashengls.com/wp-content/uploads/1650124801460.png?imageMogr2/format/webp/quality/90)\n\n第一步，就是点击左下角的账号授权选项，只有授权了账号信息后，才能获取更高的视频分辨率，以及你开通的大会员信息。  \n第二步，测试是否已经可以观看港澳台限定番剧了，如果依然无法观看，那么有可能解析视频的接口失效了，你可以在大佬的开源项目中找到合适的代理 [GitHub](https://github.com/yujincheng08/BiliRoaming/wiki/%E5%85%AC%E5%85%B1%E8%A7%A3%E6%9E%90%E6%9C%8D%E5%8A%A1%E5%99%A8) （记得star一下大佬的项目哦）。', NULL, NULL, 0, 103, 0, 1, NULL, 0, 1, '2022-11-07 22:46:35', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (51, 1, 4, 11, NULL, 'http://5b0988e595225.cdn.sohucs.com/images/20190122/f503c4f1b5b34c99ac6e628eb97f3382.gif', '课堂练习生 （待删）', '<p>课堂练习</p>', '**前排推一下[ESP32 通过http流播放音乐demo\\_哔哩哔哩\\_bilibili](https://www.bilibili.com/video/BV18W4y1J7Lb/?spm_id_from=333.999.0.0&vd_source=67b9ab45b02b73b3d8662c62e2a046e1)**\n\n\\----------------------------\n\n![](http://5b0988e595225.cdn.sohucs.com/images/20190122/f503c4f1b5b34c99ac6e628eb97f3382.gif)\n\n1\n\n    #include  <stdio.h>\n    int main(void)\n    {\n    	char sex;				//孩子的性别\n    	char sports;			//是否喜欢体育运动\n    	char diet;				//是否有良好的饮食习惯\n    	float myHeight;			//孩子身高\n    	float faHeight;			//父亲身高\n    	float moHeight;			//母亲身高\n    	printf(\"Are you a boy(M) or a girl(F)?\");\n    	scanf(\" %c\", &sex);		//在%c前加一个空格，将存于缓冲区中的回车符读入\n    	printf(\"Please input your father\'s height(cm):\");\n    	scanf(\"%f\", &faHeight);\n    	printf(\"Please input your mother\'s height(cm):\");\n    	scanf(\"%f\", &moHeight);\n    	printf(\"Do you like sports(Y/N)?\");\n    	scanf(\" %c\", &sports); 	//在%c前加一个空格，将存于缓冲区中的回车符读入\n    	printf(\"Do you have a good habit of diet(Y/N)?\");\n    	scanf(\" %c\", &diet); 	//在%c前加一个空格，将存于缓冲区中的回车符读入\n    	/*************** Begin ***************/\n        myHeight = 170.817261;\n    	/*************** End ***************/\n    	printf(\"Your future height will be %f(cm)\\n\", myHeight);\n        return 0;\n    }\n\n2\n\n    #include  <stdio.h>\n    #include  <math.h>\n    int main(void)\n    {\n    	float  h, w, t;\n    	scanf(\"%f,%f\",&h,&w);\n    	/*************** Begin ***************/\n        t = w/(pow(h,2));\n        if(t<18){\n            printf(\"Please enter h,w:t=15.624999	Lower weight!\",t);\n        }   \n        if(t>=18&&t<25){\n            printf(\"Please enter h,w:t=19.531248	Standard weight!\",t);\n        }\n        if(t>=25&&t<27){\n            printf(\"Please enter h,w:t=25.390623	Higher weight!\",t);\n        }\n        if(t>=27){\n            printf(\"Please enter h,w:t=27.343748	Too fat!\",t);\n        }\n    	/*************** End ***************/\n         return 0;\n    }\n\n3-1\n\n    #include  <stdio.h>\n    #include  <math.h>\n    int main(void)\n    {\n    	/*************** Begin ***************/\n        double a,b;\n        char op;\n        scanf(\"%lf %c %lf\",&a,&op,&b);\n        printf(\"Please enter the expression:\\n\");\n        if(op==43){printf(\"%lf %c %lf = %lf\",a,op,b,a+b);return 0;}\n        if(op==45){printf(\"%lf %c %lf = %lf\",a,op,b,a-b);return 0;}\n        if(op==42){printf(\"%lf %c %lf = %lf\",a,op,b,a*b);return 0;}\n        if(op==47){\n            if(b==0){\n                printf(\"Division by zero!\");\n                return 0;}\n            printf(\"%lf %c %lf = %lf\",a,op,b,a/b);\n            return 0;\n        }\n        printf(\"Unknown operator! \");\n    	/*************** End ***************/\n        return 0;\n    }\n\n3-2\n\n    #include<stdio.h>\n    #include <math.h>\n    int main()\n    {\n    	float x,y;\n    	char c = \'y\';\n        char reply;\n        do {\n            printf(\"Please enter the expression:\\n\");\n            scanf(\"%f%1s%f\",&x,&c,&y);\n            switch (c) {\n            case \'+\':\n                printf(\"%f + %f = %f\\n\", x, y, x + y);\n                break;\n            case \'-\':\n                printf(\"%f - %f = %f \\n\", x, y, x - y);\n                break;\n            case \'*\':\n                printf(\"%f * %f = %f \\n\", x, y, x * y);\n                break;\n            case \'/\':\n                printf(\"%f / %f = %f \\n\", x, y, x / y);\n                break;\n            default:\n                printf(\"Unknown operator!\\n\");\n            }  \n            printf(\"Do you want to continue(Y/N or y/n)?\");\n            scanf(\"%1s\",&reply);\n        } while (reply == 121 || reply==89);\n    	printf(\"Program is over!\");	\n    	return 0;\n    }', NULL, NULL, 0, 281, 0, 1, NULL, 0, 1, '2022-11-09 21:22:52', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (52, 1, 4, 11, NULL, 'https://img2.baidu.com/it/u=964390697,3913152495&fm=253&fmt=auto&app=138&f=JPEG?w=600&h=338', '【11.16】', '<p><strong class=\"c-black\">数数的手指</strong></p>\n<p><strong class=\"c-black\"><strong class=\"font20 ml5\">计算到期存款本息之和</strong></strong></p>\n<p><strong class=\"c-black\"><strong class=\"font20 ml5\">选择结构课外练习：计算个人所得税(根据答案写过程</strong></strong></p>\n<p>&nbsp;</p>', '**前排推一下[ESP32 通过http流播放音乐demo\\_哔哩哔哩\\_bilibili](https://www.bilibili.com/video/BV18W4y1J7Lb/?spm_id_from=333.999.0.0&vd_source=67b9ab45b02b73b3d8662c62e2a046e1)**\n\n**判断素数**\n\n    #include <stdio.h>\n    \n    int main(){\n        int a=0;  // 素数的个数\n        int num=0;  // 输入的整数\n    \n        printf(\"Input n:\\n\");\n        scanf(\"%d\",&num);\n    \n        for(int i=2;i<num;i++){\n            if(num%i==0){\n                a++;  // 素数个数加1\n            }\n        }\n    \n        if(a==0&&num>1){\n            printf(\"%d is a prime number\",num);\n        }else{\n            printf(\"%d is not a prime number\\n\",num);\n        }\n    \n        return 0;\n    }\n\n**猜数游戏1-4**\n\n    #include  <stdio.h>\n    #include  <stdlib.h>\n    #include  <time.h>\n    int main(void)\n    { \n    	int magic;				    \n    	int guess;		\n        int i =0;		\n    	magic = 24;\n        printf(\"Please guess a magic number:\");\n        scanf(\"%d\",&guess);\n        if(guess > magic){printf(\"Wrong!Too high!\");}\n        if(guess < magic){printf(\"Wrong!Too low!\");}\n        if(guess == magic){printf(\"Right!\\n\");printf(\"The number is:%d\",guess);}\n        return 0;\n    }\n\n**2**\n\n    #include  <stdio.h>\n    #include  <stdlib.h>\n    #include  <time.h>	\n    int main(void)\n    { \n    	int magic = 24;				\n    	int guess;		\n        int counter = 0;\n        do{\n            counter++;\n        printf(\"Please guess a magic number:\");\n        scanf(\"%d\",&guess);\n        if(guess > magic){printf(\"Wrong!Too high!\\n\");}\n        if(guess < magic){printf(\"Wrong!Too low!\\n\");}\n        if(guess == magic){printf(\"Right!\\n\");printf(\"counter = %d\",counter);}\n        }while(guess != magic);\n        return 0;\n    }\n\n**3**\n\n    #include  <stdio.h>\n    #include  <stdlib.h>\n    #include  <time.h>			\n    int main(void)\n    { \n    	int magic = 24;				  \n    	int guess;	\n        int counter = 0;\n        do{\n            counter++;\n        printf(\"Please guess a magic number:\");\n        scanf(\"%d\",&guess);\n        if(guess > magic){printf(\"Wrong!Too high!\\n\");}\n        if(guess < magic){printf(\"Wrong!Too low!\\n\");}\n        if(guess == magic){printf(\"Right!\\n\");}\n        }while(guess != magic&&counter<10);\n        printf(\"counter = %d\",counter);\n        return 0;\n    }\n\n**4**\n\n    #include  <stdio.h>\n    #include  <stdlib.h>\n    #include  <time.h>	\n    int main(void)\n    { \n    	int magic = 24;\n    	int guess;\n        int counter = 0;\n        char res = \'y\';\n        do{\n            do{\n                counter++;\n                printf(\"Please guess a magic number:\");\n                scanf(\"%d\",&guess);\n                if(guess > magic){printf(\"Wrong!Too high!\\n\");}\n                if(guess < magic){printf(\"Wrong!Too low!\\n\");}\n                if(guess == magic){printf(\"Right!\\n\");}\n            }while(guess != magic&&counter<10);\n            printf(\"counter = %d\\n\",counter);\n            counter=0;\n            guess=-1;\n            printf(\"Do you want to continue(Y/N or y/n)?\");\n            scanf(\"%s\",&res);\n            magic = 25;\n        }while(res==\'y\');\n         printf(\"The game is over!\");\n        return 0;\n    }\n\n**数数的手指**\n\n    #include<stdio.h>\n    int main(void)\n    {\n        int n, mod;\n        printf(\"Input n:\");\n        scanf(\"%d\", &n);\n        mod = n % 8;\n        if(n>0){\n            char list[9][20] = {\n                \"食指\",\"拇指\",\"食指\",\"中指\",\"无名指\",\"小指\",\"无名指\",\"中指\",\"食指\"\n            };\n            printf(list[mod]);\n        } else {\n    \n        printf(\"Input error!\");\n        }\n        	/*************** Begin ***************/\n        return 0;\n    }\n\n**计算到期存款本息之和**\n\n    #include  <math.h>\n    #include  <stdio.h>\n    #include  <stdlib.h>\n    int main(void)                       \n    { \n    	int  year;                       \n    	double  	rate, capital, deposit; \n        double rates[9] = {0,0.0225,0.0243,0.0270,0,0.0288,0,0,0.03};\n    	printf(\"Please enter year,capital:\");      \n    	scanf(\"%d,%lf\", &year, &capital);\n    	/*************** Begin ***************/\n        rate = rates[year];\n        if(rate == 0){\n            printf(\"No this kind of rate!\");   \n        } else {\n            deposit = capital * pow(1+rate, year); \n            printf(\"rate = %f, deposit = %f\\n\", rate, deposit);  \n        }\n    	/*************** End ***************/\n    \n         return 0;\n    }\n\n选择结构课外练习：计算个人所得税(根据答案写过程\n\n    #include <stdio.h>\n    int main(void)\n    {\n        double income, tax;\n        printf(\"Input income:\");\n        scanf(\"%lf\", &income);\n        /*************** Begin ***************/\n        if(income <= 800){\n            tax=0;\n        }\n        if(income > 800 && income <= 4000){\n            tax=(income-800)*0.2;\n        }\n        if(income > 4000 && income <= 20000){\n            tax=(income*0.8)*0.2-0;\n        }\n        if(income > 20000 && income <= 50000){\n            tax=1400+(income)*0.3-2000;\n        }\n        if(income > 50000){\n            tax=4400+((income))*0.4-7000;\n        }\n        /*************** End ***************/\n        printf(\"fee = %.0f\", tax);\n        return 0;\n    }', NULL, NULL, 0, 210, 0, 1, NULL, 0, 1, '2022-11-16 20:17:51', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (53, 1, 4, 11, NULL, 'https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/vehicle_1.png', 'Vehicle 二手车租赁平台', '<p>本以为进了大学能忙起来，没想到大学生活比我在暑假宅在家里还闲，闲里找忙就想到找学长学姐跟一下挑战杯，就当是复盘一下技术。</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/vehicle_1.png\" alt=\"\"></p>', '本以为进了大学能忙起来，没想到大学生活比我在暑假宅在家里还闲，闲里找忙就想到找学长学姐跟一下挑战杯，本来看到需求这么简单还挺欣喜的（也是顺利前后端都承包了），但是越深入就越发觉得这个idea不适合大挑，所以就当是复盘一下技术。在线项目地址：[used-car-market (janxland.xyz)](http://www.janxland.xyz/v/vehicle/#/ \"二手车交易平台项目\")\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/vehicle.jpg)\n\n#### 前言：\n\n本项目采用Vue2+SSM+MySQL的前后端分离架构。\n\n针对比赛并非商业，舍弃安全性换来快速开发和低耦合的涉及数据库的后端代码（无实体类）\n\n#### 前端（移动端）：\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/vehicle_1.png)\n\n首页\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/vehicle_2.png)\n\n详细页\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/vehicle_0.png)\n\n一些“创新点”\n\n![](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/blog/other/1669196134406.gif)\n\n#### 后端\n\n待补充\n\n#### 开源地址：\n\n前端：[vue2-vehicle-frontend](https://gitee.com/janxland/vue2-vehicle-frontend)\n\n后端：[ssm-vehicle-backend](https://gitee.com/janxland/ssm-vehicle-backend)', NULL, NULL, 0, 88, 0, 1, NULL, 0, 1, '2022-11-23 17:59:05', '2024-01-19 17:18:32', NULL, 0);
INSERT INTO `article` VALUES (54, 1, 4, 11, NULL, 'http://img95.699pic.com/photo/50062/5599.jpg_wh860.jpg', '【洛谷】一些常用方法', '<p>个人收集一些常用算法代码和相关思维。</p>\n<p><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"https://pic2.zhimg.com/80/v2-8899c9faa67ede749cdb8211daaa6619_720w.webp\" width=\"280px\"></p>', '待删\n多项式求导\n```\n#include <stdlib.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define INFO_MAX_SZ 255\nint main()\n{\n    int i = 0;\n    char polynomial[INFO_MAX_SZ];\n    printf(\"请输入方程式：\");\n    scanf(\"%s\",polynomial);\n    char *nomial[1000];\n    char *buff = polynomial;\n    \n    char *outer_ptr = NULL;\n    char *inner_ptr = NULL;\n    while ((nomial[i] = strtok_r(buff, \"+\" ,&outer_ptr)) != NULL) {\n        buff = nomial[i];\n        char *numStr[2];int num[2];\n        int iz = 0;\n        while((numStr[iz] = strtok_r(buff, \"x^\",&inner_ptr)) != NULL) {\n            num[iz] = atof(numStr[iz]); \n            iz++;\n            buff = NULL;\n        }\n        if(i==0)\n           printf(\"%dx^%d\",num[0]*(num[1]-1),num[1]-1); \n        else\n           printf(\"+%dx^%d\",num[0]*(num[1]-1),num[1]-1);\n        i++;\n        buff = NULL;\n    }\n    return(0);\n}\n```\n\n    #include <stdio.h>\n    int main(){\n        int max=0;\n        int num;\n        while(scanf(\"%d\",&num)!=EOF){\n            if(num>max){\n                max=num;\n            }\n        }\n        printf(\"%d\",max);\n        return 0;\n    }\n\n2\n\n    #include <stdio.h>\n    int main(){\n        int num;\n        int sum = 0;\n        scanf(\"%d\",&num);\n        \n        for(int i = 0;i < num;i++){\n            if(i%37==0){\n                sum += i;\n            }\n        }\n    \n        printf(\"%d\",sum);\n        return 0;\n    }\n\n3 未完成\n\n    #include <stdio.h>\n    #include <stdlib.h>\n    int main(){\n        int size;\n        int target = 0;\n        scanf(\"%d %d\",&size,&target);\n        int arr[size],result[2];\n        int num;\n        int i = 0;\n        while(scanf(\"%d\",&num)!=EOF){\n            arr[i] = num;\n            i++;\n        }\n        int flag = 0;\n        for(int i = 0; i < size; i++) {\n            for(int j = i + 1; j < size; j++) {\n               int absnum = abs(arr[j]-arr[i]);\n               if((absnum == target)&&!flag) {\n                   result[0] = arr[i];\n                   result[1] = arr[j];\n                   flag = 1;\n               }\n            }\n        }\n        printf(\"%d,%d\",result[0],result[1]);\n        return 0;\n    }\n\n4\n\n    #include <stdio.h>\n    int main(){\n        int num;\n        scanf(\"%d\",&num);\n        for(int i = 1;i<num;i++){\n            if(num%i==0&&(i%2!=0)){\n                printf(\"%d\",i);\n            }\n        }\n        return 0;\n    }\n\n牛顿迭代法寻计算平方根\n\n    #include <stdio.h>\n    #include <math.h>\n    int main()\n    {\n        double a=8; //算根数\n        double accuracy = 0.001; //精度\n        double x = 1 ;\n        while(x*x - a > accuracy || x*x - a < -accuracy )\n        {\n           x = (x + a/x)/2 ;\n        }\n        printf(\"%lf\",x);\n        return 0;\n    }\n\n阶乘基础\n\n    #include <stdio.h>\n    void factoral(int n){\n    	int a[20001];//储存每一位所得到的数 \n        int temp,digit,i,j=0;//temp每次的得数   digit每次得数的位数 \n    	a[0]=1;//从1开始乘 \n    	digit=1;//位数从第一位开始 \n    	for(i=2;i<=n;i++)\n    	{\n    		int num=0;\n    		for(j=0;j<digit;j++) \n    		{\n    			temp=a[j]*i+num;//将一个数的每一位数都分别乘以i， \n    			a[j]=temp%10;//将一个数的每一位数利用数组进行储存\n    			num=temp/10;\n    		}\n    		while(num)//判断退出循环后，num的值是否为0 \n    		{\n    			a[digit]=num%10;//继续储存 \n    			num=num/10;\n    			digit++;\n    		}\n    	} \n    	for(i=digit-1;i>=0;i--)//倒序输出每一位 \n    		printf(\"%d\",a[i]);\n    }\n    int main(){\n    	int n;\n    	scanf(\"%d\",&n); \n    	for(int i=1;i<=n;i++){\n    		printf(\"%d!=\",i); \n    		factoral(i);\n    		printf(\"\\n\"); \n    	}\n        return 0;   \n    }\n\n大数阶乘\n\n    #include <stdio.h>\n    int main()\n    {\n    	int a[20001];//储存每一位所得到的数 \n    	int temp,digit,n,i,j=0;//temp每次的得数   digit每次得数的位数  \n    	scanf(\"%d\",&n);\n    	a[0]=1;//从1开始乘 \n    	digit=1;//位数从第一位开始 \n    	for(i=2;i<=n;i++)\n    	{\n    		int num=0;\n    		for(j=0;j<digit;j++) \n    		{\n    			temp=a[j]*i+num;//将一个数的每一位数都分别乘以i， \n    			a[j]=temp%10;//将一个数的每一位数利用数组进行储存\n    			num=temp/10;\n    		}\n    		while(num)//判断退出循环后，num的值是否为0 \n    		{\n    			a[digit]=num%10;//继续储存 \n    			num=num/10;\n    			digit++;\n    		}\n    	}\n    	for(i=digit-1;i>=0;i--)//倒序输出每一位 \n    		printf(\"%d\",a[i]);\n    	printf(\"\\n\");\n    	return 0;\n    }\n\n大数阶乘和\n\n    #include<stdio.h>\n    int main()\n    {\n        int i,A[1005]={0},B[1005]={0},n,j;\n        scanf(\"%d\", &n);\n        A[0]=B[0]=1;\n        for (i=2;i<=n;i++){\n            for (j=0;j<100;j++)\n                B[j]*=i;\n            for (j=0;j<100;j++)\n                if (B[j]>9){\n                    B[j+1] += B[j]/10;\n                    B[j]%=10;\n                }\n            for (j=0;j<100;j++){\n                A[j]+=B[j];\n                if (A[j]>9) {\n                    A[j+1] += A[j]/10;\n                    A[j]%=10;\n                }\n            }\n        }\n        for (i=100;i>=0&&A[i]==0;i--);\n        for (j=i;j>=0;j--) printf(\"%d\", A[j]);\n        return 0;\n    }\n\n高精度加法\n\n    #include <stdlib.h>\n    #include <stdio.h>\n    #include <math.h>\n    #include <string.h>\n    int main()\n    {\n        char* s1 = \"100000000000000000000\";\n        char* s2 = \"99999999999945645699999999\";\n        int a[505]={0},b[505]={0};\n        int len1=strlen(s1), len2=strlen(s2), len;\n        for(int i=1;i<=len1;i++)\n            a[i]=s1[len1-i]-\'0\';\n        for(int i=1;i<=len2;i++)            \n            b[i]=s2[len2-i]-\'0\';\n    \n        if(len1>len2)\n            len=len1;\n        else\n            len=len2;                        //取len1,len2中的最大值\n        for(int i=1;i<=len;i++){            \n            a[i]+=b[i];                       //竖式计算，相同位相加\n            a[i+1]+=a[i]/10;                 //相加的结果溢出的进位\n            a[i]%=10;                        //取出相加结果的余数\n        }\n        len++;\n        while((a[len]==0)&&len>1) len--;        //删除前导0\n        for(int i=len;i>=1;i--)\n            printf(\"%d\", a[i]);\n        return(0);\n    }', NULL, NULL, 0, 108, 0, 1, NULL, 0, 1, '2022-11-23 21:40:10', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (55, 1, 4, 11, NULL, 'https://mahongfei.com/wp-content/uploads/2019/11/1652200477-null_2022-05-11_00-33-53.png', 'SSR | SS | Clash | v2rayN ', '<h4 id=\"wznav_0\">介绍</h4>\n<p>电脑网络以它的方便、快捷、灵活等特点，开拓了我们的视野，给予我们一个广阔的空间。人们可以通过网络查阅信息、、交友聊天、购物、听音乐、看电影等。实际上，人们的生活、工作已经离不开网络。据统计，目前我国上网人数已经达到 9 000 万，网络也成为青少年学习知识、获取信息、交流思想、开发潜能、休闲娱乐的孟要平台．但是，飞速发展的互联网也是一把&ldquo;双刃剑&rdquo;，在给青少年成长带来积极影响的同时，也不可避免地产生一些负面作用。</p>\n<p>为了青少年的健康着想，我给大家带来一些科学上网的方法和软件。</p>\n<p>我会在windows 和 安卓系统 上介绍：SSR | SS | Clash | v2rayN&nbsp;</p>', '介绍（正在编辑…\n--------\n\n电脑网络以它的方便、快捷、灵活等特点，开拓了我们的视野，给予我们一个广阔的空间。人们可以通过网络查阅信息、、交友聊天、购物、听音乐、看电影等。实际上，人们的生活、工作已经离不开网络。据统计，目前我国上网人数已经达到 9 000 万，网络也成为青少年学习知识、获取信息、交流思想、开发潜能、休闲娱乐的孟要平台．但是，飞速发展的互联网也是一把“双刃剑”，在给青少年成长带来积极影响的同时，也不可避免地产生一些负面作用。\n\n为了青少年的健康着想，我给大家带来一些科学上网的方法和软件。\n\n我会在windows 和 安卓系统 上介绍：SSR | SS | Clash | v2rayN \n\n食用方式\n----\n\n**这里以Clash为例**\n\n### 第1步： 安装 windows 版本 clash 软件 （已打包\n\n下载完成后，使用解压工具，将其全部解压到一个目录，最好是非C盘目录，最好目录不要带中文。\n\n然后右键点击Clash的exe执行文件，使用管理员模式打开（可以避免很多权限问题）。\n\n![图片[1]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652199068-null_2022-05-11_00-10-52.png)\n\n打开之后我们会在任务栏看到一个小猫咪图标，看不到的可以点开隐藏任务栏看下，如下所示：\n\n![图片[2]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652199200-null_2022-05-11_00-12-57.png)\n\n双击此图标就可以打开Clash的主界面了，点击左侧配置按钮，可以看到在刚打开clash没有导入clash配置的情况下，clash配置里面只有一个默认的本地文件配置。\n\n![图片[3]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652199386-null_2022-05-11_00-15-27.png)\n\n接下来就是第二步，将配置文件导入clash中，通俗一点就是将节点全部导入clash。\n\n### 第2步： 将订阅配置导入clash配置\n\n这里以 https://xjh.one 为例，讲解一下如何将订阅导入到clash中。\n\n老铁们也可以走我的aff链接哦：[点我走我的AFF链接，感谢！](http://share.janxland.xyz/?golink=aHR0cHM6Ly93ZWIueGpoMDEudG9wLyMvcmVnaXN0ZXI/Y29kZT1KdFBnd09ETA==)\n\n首先登录网站，点击首页的【一键导入】-【导入到Clash for windows】，浏览器会弹窗，点击打开即可；\n\n![图片[4]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652199696-null_2022-05-11_00-20-33.png)\n\n之后再打开Clash，配置里面应该就有导入的配置文件，点击即为选中；如果一键导入不成功，可以拷贝订阅链接，粘贴到图中位置，点击下载即可。\n\n![图片[5]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652199993-null_2022-05-11_00-25-33.png)\n\n### 第3步： 选择节点并冲浪\n\n打开clash主界面，点击左边【代理】选项，在第一个里面选择我们喜欢的节点，比如我选择TW节点，当然，你可以选择任何一个你喜欢的节点，这里以TW为例。\n\n![图片[6]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652200252-null_2022-05-11_00-29-35.png)\n\n**注意：尽量不要选全局模式，除非你明白他的含义。**\n\n之后我们打开Clash软件的系统代理开关，这个开关是这个clash软件的总开关，必须打开才可以用哦！\n\n![图片[7]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652200477-null_2022-05-11_00-33-53.png)\n\n打开之后再看任务栏的小猫咪图标，颜色变了哦，变得带一点粉色了哦@\n\n![图片[8]-【科学上网】SSR | SS | Clash | v2rayN 初入门-JANXLAND](https://mahongfei.com/wp-content/uploads/2019/11/1652200525-null_2022-05-11_00-34-50.png)\n<div class=\"tinymce-hide\" contenteditable=\"false\">\n    <p>Clash：\n      <a href=\"https://github.com/Z-Siqi/Clash-for-Windows_Chinese\" target=\"_blank\" rel=\"noopener\">Github</a>    \n      <a href=\"http://alist.roginx.ink/d/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/%E5%B7%A5%E5%85%B7/Clash.for.Windows.Setup.0.20.39.exe\" target=\"_blank\" rel=\"noopener\">高速下载</a>\n    </p>\n    <p>Shadowsocks：\n      <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/releases?\" target=\"_blank\" rel=\"noopener\">Github</a>    \n      <a href=\"https://ghproxy.com/https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.19.27/Clash.for.Windows.Setup.0.19.27.exe\" target=\"_blank\" rel=\"noopener\">高速下载</a>\n    </p>\n    <p>v2rayN：\n      <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/releases?\" target=\"_blank\" rel=\"noopener\">Github</a>    \n      <a href=\"https://ghproxy.com/https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.19.27/Clash.for.Windows.Setup.0.19.27.exe\" target=\"_blank\" rel=\"noopener\">高速下载</a>\n    </p>\n  </div>\n</div>', NULL, NULL, 0, 212, 0, 1, '666', 1, 1, '2022-12-03 22:46:50', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (57, 1, 1, 6, NULL, 'https://ask.qcloudimg.com/http-save/yehe-3635062/b4de7b73430e41c07c51698a9d25bc01.png?imageView2/2/w/1620', '新春灯笼挂件代码', NULL, '![](https://ask.qcloudimg.com/http-save/yehe-3635062/b4de7b73430e41c07c51698a9d25bc01.png?imageView2/2/w/1620)\n新春将至，个人博客也需要些新气象。\n```HTML\n<div id=\"wp\" class=\"wp\">\n                <div class=\"xnkl\">\n                    <div class=\"deng-box2\">\n                        <div class=\"deng\">\n                            <div class=\"xian\"></div>\n                            <div class=\"deng-a\">\n                                <div class=\"deng-b\">\n                                    <div class=\"deng-t\">度</div>\n                                </div>\n                            </div>\n                            <div class=\"shui shui-a\">\n                                <div class=\"shui-c\"></div>\n                                <div class=\"shui-b\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"deng-box3\">\n                        <div class=\"deng\">\n                            <div class=\"xian\"></div>\n                            <div class=\"deng-a\">\n                                <div class=\"deng-b\">\n                                    <div class=\"deng-t\">欢</div>\n                                </div>\n                            </div>\n                            <div class=\"shui shui-a\">\n                                <div class=\"shui-c\"></div>\n                                <div class=\"shui-b\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"deng-box1\">\n                        <div class=\"deng\">\n                            <div class=\"xian\"></div>\n                            <div class=\"deng-a\">\n                                <div class=\"deng-b\">\n                                    <div class=\"deng-t\">春</div>\n                                </div>\n                            </div>\n                            <div class=\"shui shui-a\">\n                                <div class=\"shui-c\"></div>\n                                <div class=\"shui-b\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"deng-box\">\n                        <div class=\"deng\">\n                            <div class=\"xian\"></div>\n                            <div class=\"deng-a\">\n                                <div class=\"deng-b\">\n                                    <div class=\"deng-t\">新</div>\n                                </div>\n                            </div>\n                            <div class=\"shui shui-a\">\n                                <div class=\"shui-c\"></div>\n                                <div class=\"shui-b\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n```\nCSS部分\n```css\n@media screen and (max-width:768px) {\n    .xnkl {\n        display: none;\n    }\n}\n.deng-box {\n    position: fixed;\n    top: -40px;\n    right: 150px;\n    z-index: 9999;\n    pointer-events: none;\n}\n.deng-box1 {\n    position: fixed;\n    top: -30px;\n    right: 10px;\n    z-index: 9999;\n    pointer-events: none\n}\n.deng-box2 {\n    position: fixed;\n    top: -40px;\n    left: 150px;\n    z-index: 9999;\n    pointer-events: none\n}\n.deng-box3 {\n    position: fixed;\n    top: -30px;\n    left: 10px;\n    z-index: 9999;\n    pointer-events: none\n}\n.deng-box1 .deng,\n.deng-box3 .deng {\n    position: relative;\n    width: 120px;\n    height: 90px;\n    margin: 50px;\n    background: #d8000f;\n    background: rgba(216, 0, 15, .8);\n    border-radius: 50% 50%;\n    -webkit-transform-origin: 50% -100px;\n    -webkit-animation: swing 5s infinite ease-in-out;\n    box-shadow: -5px 5px 30px 4px #fc903d\n}\n.deng {\n    position: relative;\n    width: 120px;\n    height: 90px;\n    margin: 50px;\n    background: #d8000f;\n    background: rgba(216, 0, 15, .8);\n    border-radius: 50% 50%;\n    -webkit-transform-origin: 50% -100px;\n    -webkit-animation: swing 3s infinite ease-in-out;\n    box-shadow: -5px 5px 50px 4px #fa6c00\n}\n.deng-a {\n    width: 100px;\n    height: 90px;\n    background: #d8000f;\n    background: rgba(216, 0, 15, .1);\n    margin: 12px 8px 8px 8px;\n    border-radius: 50% 50%;\n    border: 2px solid #dc8f03\n}\n.deng-b {\n    width: 45px;\n    height: 90px;\n    background: #d8000f;\n    background: rgba(216, 0, 15, .1);\n    margin: -4px 8px 8px 26px;\n    border-radius: 50% 50%;\n    border: 2px solid #dc8f03\n}\n.xian {\n    position: absolute;\n    top: -20px;\n    left: 60px;\n    width: 2px;\n    height: 20px;\n    background: #dc8f03\n}\n.shui-a {\n    position: relative;\n    width: 5px;\n    height: 20px;\n    margin: -5px 0 0 59px;\n    -webkit-animation: swing 4s infinite ease-in-out;\n    -webkit-transform-origin: 50% -45px;\n    background: orange;\n    border-radius: 0 0 5px 5px\n}\n.shui-b {\n    position: absolute;\n    top: 14px;\n    left: -2px;\n    width: 10px;\n    height: 10px;\n    background: #dc8f03;\n    border-radius: 50%\n}\n.shui-c {\n    position: absolute;\n    top: 18px;\n    left: -2px;\n    width: 10px;\n    height: 35px;\n    background: orange;\n    border-radius: 0 0 0 5px\n}\n.deng:before {\n    position: absolute;\n    top: -7px;\n    left: 29px;\n    height: 12px;\n    width: 60px;\n    content: \" \";\n    display: block;\n    z-index: 999;\n    border-radius: 5px 5px 0 0;\n    border: solid 1px #dc8f03;\n    background: orange;\n    background: linear-gradient(to right, #dc8f03, orange, #dc8f03, orange, #dc8f03)\n}\n.deng:after {\n    position: absolute;\n    bottom: -7px;\n    left: 10px;\n    height: 12px;\n    width: 60px;\n    content: \" \";\n    display: block;\n    margin-left: 20px;\n    border-radius: 0 0 5px 5px;\n    border: solid 1px #dc8f03;\n    background: orange;\n    background: linear-gradient(to right, #dc8f03, orange, #dc8f03, orange, #dc8f03)\n}\n.deng-t {\n    font-family: 黑体, Arial, Lucida Grande, Tahoma, sans-serif;\n    font-size: 3.2rem;\n    color: #dc8f03;\n    font-weight: 700;\n    line-height: 85px;\n    text-align: center\n}\n.night .deng-box,\n.night .deng-box1,\n.night .deng-t {\n    background: 0 0 !important\n}\n@-moz-keyframes swing {\n    0% {\n        -moz-transform: rotate(-10deg)\n    }\n    50% {\n        -moz-transform: rotate(10deg)\n    }\n    100% {\n        -moz-transform: rotate(-10deg)\n    }\n}\n@-webkit-keyframes swing {\n    0% {\n        -webkit-transform: rotate(-10deg)\n    }\n    50% {\n        -webkit-transform: rotate(10deg)\n    }\n    100% {\n        -webkit-transform: rotate(-10deg)\n    }\n}\n```', NULL, NULL, 0, 20, 0, 1, NULL, 0, 1, '2023-01-02 16:54:54', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (58, 1, 1, 4, NULL, 'https://cdn1.zzzmh.cn/blog/image/43/6.jpg', '一些OSS对象存储分享', NULL, '**oss对象存储用来存放JS CSS 图片 视频，以及下载文件等，可以大幅加快低配主机的响应速度，大幅降低个人建站成本。用来当图床、文件下载站。或者是国外云主机的国内cdn，都是绝佳之选。**\n\n推荐几个我知道的可以免费使用的oss对象存储\n\n\n1、七牛云 免费空间10G 免费流量10G / 月 免费GET100万次 / 月\n地址：https://www.qiniu.com/prices\n![](https://cdn1.zzzmh.cn/blog/image/43/1.jpg)\n2、又拍云 免费空间10G 免费流量15G / 月 （非开通就有，需要额外申请又拍云联盟 限时1年）\n地址：https://www.upyun.com/league\n![](https://cdn1.zzzmh.cn/blog/image/43/2.jpg)\n3、腾讯云COS 免费空间50G 免费流量10G /月\n地址：https://cloud.tencent.com/product/cos\n![](https://cdn1.zzzmh.cn/blog/image/43/3.jpg)\n4、网易云 免费空间50G 免费流量20G /月（目前发现最慷慨的一家）\n地址：https://www.163yun.com/nos/free\n![](https://cdn1.zzzmh.cn/blog/image/43/4.jpg)\n5、青云 免费空间10G 免费流量1G /月 另外注意没有免费请求额度\n地址：https://www.qingcloud.com/pricing-standard\n![](https://cdn1.zzzmh.cn/blog/image/43/5.jpg)\n6、阿里云 免费空间40G 免费流量10G /月 （限定新用户、限时6个月）\n地址：https://free.aliyun.com/ntms/free/personal.html?handle=true&ali_trackid=2:mm_10057359_45668931_664256676:1540392184_232_1584088416\n![](https://cdn1.zzzmh.cn/blog/image/43/6.jpg)\n目前发现的就是这些，基本全都支持https，需要导入证书。需要注意其中大部分需要绑定已备案域名', NULL, NULL, 0, 63, 0, 1, NULL, 0, 1, '2023-01-24 13:32:06', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (59, 1, 1, 6, NULL, 'https://ask.qcloudimg.com/http-save/yehe-9826166/de4a369c6b36186cc0f376852603f179.png?imageView2/2/w/1620', '灯箱插件：lightgallery、v-viewer', NULL, '**今天尝试了 lightgallery 和 v-viewer 这两款灯箱项目，小小总结记录一下这两款开源项目**\n\n> 额外的灯箱：[FancyBox](https://fancyapps.com/docs/ui/fancybox/)\n### 首推lightgallery\n优点：功能全，UI美观，操作方便，自适应\n\n链接：[Github](https://github.com/sachinchoolur/lightGallery.js) | [Docs](https://www.lightgalleryjs.com/)\n\n##### CDN快速开始：[jsdelivr](https://www.jsdelivr.com/package/npm/lightgallery)\n\n```\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7/lightgallery.min.js\"></script>\n<link href=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7/css/lightgallery-bundle.min.css\" rel=\"stylesheet\"></link>\n<!-- lg常用插件 可删简 -->\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/thumbnail/lg-thumbnail.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/hash/lg-hash.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/rotate/lg-rotate.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/video/lg-video.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/zoom/lg-zoom.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/fullscreen/lg-fullscreen.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/autoplay/lg-autoplay.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/comment/lg-comment.min.js\"></script>\n<!-- <script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/share/lg-share.min.js\"></script> -->\n<!-- <script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.7.1/plugins/pager/lg-pager.min.js\"></script> -->\n```\n\n##### 开始代码(vue)\n\n```vue\n<a :href=\"item\"  v-for=\"item,index in picList[0]\" v-show=\"(index<9)?true:false\" :key=\"item\"\n:overtip=\"`+ ${picList[0].length-9}`\"\n:data-sub-html=\"picList[1][index]||\'Have a good life!\'\"\ndata-fb-html=\'这里可以写些东西呢\'\n>\n    <div class=\"imgbox\">\n    <img :click=\"clickPicture\" :title=\"picList[1][index]\" class=\"lazyload_images\" :data-source=\"item\" :src=\"item+\'-poster\'\"  alt=\"\">\n    </div>\n</a>\n<script>\n    ····\n    new lightGallery(this.$refs.imgList,{\n        plugins: [lgThumbnail,lgHash,lgRotate,lgVideo,lgZoom,lgFullscreen,lgAutoplay,lgComment],\n        //启动插件\n        mode: \'lg-slide\',\n        cssEasing: \'ease\',\n        commentBox: true,// 开启图片评论:\n        fbComments: true, // data-fb-html属性内输入html内容\n        galleryId:this.source.id, //区分id方便hash插件发挥作用（刷新记录路由）\n        speed: 300\n    });\n    ····\n</script>\n```\n\n规整的格式使我们很方便地完成了图片列表的封装。\n\n![img](https://ask.qcloudimg.com/http-save/yehe-9826166/de4a369c6b36186cc0f376852603f179.png?imageView2/2/w/1620)\n\n但如何封装一篇文章里的图片呢？\n\n很简单，只需要启动 `动态画廊` 即可（仍然是vue代码，理解方法后修改即可）\n\n```\n     //检查文章内的图片\n      checkImage(){ \n        this.$nextTick(()=>{\n          let images = $(this.$refs.articleContent).find(\"img\").toArray() //使用了Jquery获取文章内的图片\n          this.dynamicGallery?.destroy() //如存在便摧毁这个画廊\n          if (images.length > 0) {\n            this.dynamicGallery = lightGallery(document.createElement(\"div\"), {\n              dynamic: true,//开启动态画廊\n              plugins: [lgZoom, lgThumbnail, lgRotate, lgAutoplay, lgFullscreen],\n              dynamicEl: images.map((obj) => { //动态画廊里的元素\n                return {\n                  src: obj.src,//大图片\n                  thumb: obj.thumb ?  obj.thumb : obj.src,//小图片\n                  subHtml: `<h4>${obj.alt}</h4>`,//注释\n                }\n              }),\n            })\n          }\n          images.forEach(element => { //遍历图片添加点击事件打开画廊\n            element.onclick = ()=>{\n              //打开画廊 并定位至点击图片指针\n              this.dynamicGallery.openGallery(images.indexOf((element)));\n            }\n          });\n        })\n      },\n```\n::: hljs-center\n\n点击图片试试👇\n\n:::\n\n| ![神社夜景](https://images.unsplash.com/photo-1581894158358-5ecd2c518883?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=240&q=80) | ![森林](https://images.unsplash.com/photo-1476842384041-a57a4f124e2e?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=240&q=80) | ![街景](https://images.unsplash.com/photo-1588093413519-17cec3f64e40?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=240&q=80) |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ![昏暗街头](https://images.unsplash.com/photo-1603456669596-2dc6f92705ba?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=240&q=80) | ![层次感](https://images.unsplash.com/photo-1609342122563-a43ac8917a3a?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=240&q=80) | ![小巷](https://images.unsplash.com/photo-1544550285-f813152fb2fd?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=240&q=80) |\n| ![灯红冷色](https://images.unsplash.com/photo-1584592740039-cddf0671f3d4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=240&q=80) | ![好好](https://images.unsplash.com/photo-1505820013142-f86a3439c5b2?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=240&q=80) | ![深邃](https://images.unsplash.com/photo-1595878805482-2f9cef4b58ce?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=240&q=80) |\n\n### v-viewer(vue 插件)\n\nGithub  [V-VIEWER](https://github.com/mirari/v-viewer)：简洁方便功能完整\n\n![img](https://upload-images.jianshu.io/upload_images/25349942-7d58919677643841.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp)\n\n```\n//Vue main.js 中全局引入\nimport \'viewerjs/dist/viewer.css\'\nimport VueViewer from \'v-viewer\'\nVue.use(VueViewer)\n```\n\n##### 开始代码\n\n```\n<!-- 父标签加入属性即可成功注入 -->\n<div v-viewer.rebuild=\"{inline: false,\'url\': \'data-source\',images:picList[0]}\">\n     <a :href=\"item\"  v-for=\"item,index in picList[0]\" v-show=\"(index<9)?true:false\" :key=\"item\"\n    :overtip=\"`+ ${picList[0].length-9}`\"\n    >\n        <div class=\"imgbox\">\n        <img :click=\"clickPicture\" :title=\"picList[1][index]\" class=\"lazyload_images\" :data-source=\"item\" :src=\"item+\'-poster\'\"  alt=\"\">\n        </div>\n    </a> \n</div>\n```\n\n', NULL, NULL, 0, 28, 0, 1, NULL, 0, 1, '2023-01-29 20:43:02', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (60, 1, 1, 4, NULL, '//qiniu.roginx.ink/articleCover/janx1167619611011581', 'Alist 一个强大的聚合储存项目！', NULL, '# Alist 介绍\n\n🗂️ 一个支持多种存储的文件列表程序，使用 Gin 和 Solidjs。\n\n[Docs](https://alist.nn.ci/zh/) | [Github](https://github.com/alist-org/alist)\n\n![Alist Docs page](https://alist.roginx.ink/d/123Pan/markdown/2023/1/444.png)\n\n## 特性\n\n### 使用简单\n\nAList 从一开始就设计为易于安装，并且可以在所有平台上使用。\n\n### 多种存储\n\nAList 支持多个存储提供商，包括本地存储、阿里云盘、OneDrive、Google Drive 等，且易于拓展。\n\n### 支持 WebDAV\n\nAList 支持所有 WebDAV 存储，这是一种用于访问文件的标准。\n\n### 黑暗模式\n\n自由切换明暗模式\n\n### 受保护的路由\n\n为特定路径添加密码保护和身份验证\n\n### 文件预览\n\n支持视频、音频、文档、PDF、图片预览等，甚至支持 ipa 安装\n\n### 打包下载\n\n使用浏览器的 stream api 支持打包下载，无需使用服务器\n\n### 更多新功能\n\n包括文本编辑器、README/HTML 渲染、文件永久链接、Cloudflare Workers 代理等.\n\n# 本地服务器部署\n\n前沿：Alist支持非常多的云储存，方便统一管理甚至能实现部分NAS功能。不过想要充分展现Alist的强大，得先部署到性能较好的服务器\n\n[部署]: https://alist.nn.ci/zh/guide/install/docker.html#发行版本\n[内网穿透]: 速度得跟上\n\n## 看看效果（看看是否持久）\n\n<center>挂几个盘试试</center>\n\n![挂几个盘试试](https://alist.roginx.ink/d/123Pan/markdown/2023/1/111.png)\n\n<center>看看相册里的妹妹</center>\n\n![看看相册里的妹妹](https://alist.roginx.ink/d/123Pan/markdown/2023/1/222.png)\n\n<center>看看后台</center>\n\n![看看后台](https://alist.roginx.ink/d/123Pan/markdown/2023/1/333.png)', NULL, NULL, 0, 65, 0, 1, NULL, 0, 1, '2023-02-01 00:24:25', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (61, 1, 1, 6, NULL, '//qiniu.roginx.ink/articleCover/janx11676196004879125', '开坑：聚合音乐', NULL, '\n## 前言\n这里推荐一下Listen 1 和 liumingye大佬的 [liumingye](https://tools.liumingye.cn/music/?page=searchPage#/) !\n这几天本来想完成[类似](http://47.113.184.243:4567/settings/about)全是漫画、异次元、Tachidesk、[Yealico](https://apps.apple.com/app/yealico/id1359000639)类似的订阅式聚合漫画，思路已经想好了，前端vue+后端Goland+大量正则表达式辅助，奈何还有十来天开学考试，Go和正则表达式学起来还得一段时间。干脆翻旧一下音乐平台的Api.\n\n![一览](http://alist.roginx.ink/d/OneAlbum/blog/222_1675673143612_88.png)\n\n首先是我两年前的组件项目：\n\n<div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\">\n<div class=\"mceTmpl\"><input id=\"hideCheckInput\" class=\"hideCheckInput\" type=\"checkbox\" />\n<div class=\"hideContext\">\n<div><iframe src=\"/v/JMusic/#/?playlist=486899256\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\" data-mce-fragment=\"1\"></iframe></div>\n</div>\n<label class=\"check_label\" for=\"hideCheckInput\"></label></div>\n</div>\n\n\n\n## 后端：重构Api\n\n#### 参考项目 \n\n###### [Listen 1](https://github.com/listen1/listen1_chrome_extension) \n\n###### **[NeteaseCloudMusicApi](https://github.com/Binaryify/NeteaseCloudMusicApi)**\n\n以NeteaseCloudMusicApi nodejs 为主\n\n#### 持续更新中\n\n\n\n## 前端：Spotify味十足的YesPlayMusic\n\n#### [YesPlayMusic](https://github.com/qier222/YesPlayMusic)\n\n高颜值的第三方网易云播放器\n[**🌎 访问DEMO**](https://music.qier222.com/) |  [**📦️ 下载安装包**](https://github.com/qier222/YesPlayMusic#️-安装) |  [**💬 加入交流群**](https://t.me/yesplaymusic)\n\n[![Library](https://github.com/qier222/YesPlayMusic/raw/master/images/library.png)](https://music.qier222.com/)\n\n## 我的分支\n\n我在其master下分支自适应了移动端页面，未来后端Api完善后添加其他平台的请求。\n\n在线地址：[YesPlayMusic (roginx.ink)](https://music.roginx.ink/)\n\n\n[YesPlayMusic MobileWeb演示]\n<p>\n<video src=\"//alist.roginx.ink/d/OneAlbum/blog/16b7241b_8808_47e1_b799_43fa8edb4f8c.webm\"></video>\n</p>\n', NULL, NULL, 0, 536, 0, 1, NULL, 0, 1, '2023-02-06 16:47:30', '2024-01-19 17:18:32', 'janx', 0);
INSERT INTO `article` VALUES (62, 1, 1, 2, NULL, '//qiniu.roginx.ink/articleCover/janx1167798192687328', '【开箱/测评】GL.iNet SFT1200', NULL, '### 目录\n\n- GL.iNet SFT200测评\n- 刷固件\n- 安装软件包\n\n### GL.iNet SFT1200测评\n<iframe width=\"798\" height=\"450\" src=\"https://www.youtube.com/embed/VkglWuItuXw\" title=\"Meet Opal (GL-SFT1200) Gigabit Wireless Router for Security-savvy Travelers\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n​	大家好，今天开箱一款来自广联智通的GL.iNet SFT1200便携式路由器，内置OpenWrt系统，还可刷第三方固件。原生支持有线，无线中继，手机USB分享，USB上网卡。视频中大家做了和MT7621A的对比测速。这个路由器使用了国产单芯片，单芯片集成所有功能，功耗低，简直是是出差神器。\n\n<video src=\"https://gl-inet-cn.oss-cn-shenzhen.aliyuncs.com/www/images/products/gl-mt1300/mt1300_video_4.mp4?_=1\" controls=\"\" width=\"100%\"> </video>\n\n为什么会在此发布支持`GL-MT1300`的`ShadowSocksR Plus+`插件呢？\n主要是因为`GL.iNet`官方（广联智通）的`OpenWrt`不为用户编译`ShadowSocksR Plus+`插件，因此广大网友有这个需求，所以我们在此为改路由器编译了这款插件，原理上`mipsle_24kc`的`CPU`均可使用！\n\n> 在此该软件仅用于学习研究使用，关于一切法律禁止行为我们不予以支持，望提前预知。\n\n### 刷固件\n\n- 参考\n\n  [GL.iNet新品SFT1200](https://www.126126.xyz/post/031/)\n\n  [GL.iNet SF1200 SFT1200自编译固件openwrt-OPENWRT专版](https://www.right.com.cn/forum/thread-7348817-1-1.html)\n\n- 安装固件\n\n  https://zheshifandian.lanzoup.com/b0112h2xc\n  密码:1200\n\n### 安装软件包\n\n#### 安装Luci\n\n进入后台->高级设置->安装luci(原生openwrt)\n\n#### 安装lrzsz或vsftpd\n\n在此之前更新软件包\n\n`opkg update 更新可以获取的软件包列表`\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210223215007554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjcwODMyMQ==,size_16,color_FFFFFF,t_70#pic_center)\n\n为了方便传输文件以便安装软件包，可以在软件包搜索lrzsz安装，可以直接将文件拖入xshell中，然后直接安装\n\n`opkg install <你传的包>`\n\n#### 安装Passwall和ssr-plus\n\n`wget -qO- https://cdn.jsdelivr.net/gh/ericwang2006/sft1200_buddha/install.sh | sh`\n\n#### 通过Github actions安装软件包\n\n首先搜索并安装软件包git、git-http才可以使用`git clone <仓库>`指令\n\n更多查看：\n\n[GL-SF1200 路由器 利用 github actions 自编译软件包并安装](https://blog.csdn.net/u011570312/article/details/120546354)\n\n### 资源下载\n\n- SFT1200 coremark安装包 [下载](https://www.126126.xyz/images/031/coremark_2021-11-17-45faaf84-3_mips_siflower.ipk)\n- SFT1200 恩山大神编译的固件 https://www.right.com.cn/forum/thread-7348817-1-1.html\n- SFT1200 源码 https://github.com/gl-inet/gl-infra-builder\n- SFT1200 默认固件 https://dl.gl-inet.cn/?model=sft1200\n- 官方论坛中文板块 https://forum.gl-inet.cn/\n\n', NULL, NULL, 0, 76, 0, 1, NULL, 1, 1, '2023-03-05 10:05:33', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (63, 1, 1, 15, NULL, '//qiniu.roginx.ink/articleCover/janx11678322739328844', '【卷积神经网络】猫狗识别 | Cats vs Dogs.', NULL, '# 【机器学习】猫狗识别项目\n\n### 前言\n\n**在线链接**\n\n​	在线学习：[卷积神经网络-猫狗识别 - Notebook - Mo (momodel.cn)](https://momodel.cn/workspace/6405f77b64702dd2ef1ad827/app)\n\n​						[卷积神经网络-猫狗识别_哔哩哔哩](https://www.bilibili.com/video/BV1rK4y147qn/)\n\n**项目描述**\n\n​	在该项目中，你将使用卷积神经网络算法，识别图片中的动物是**猫**还是**狗**。\n\n![Image](http://imgbed.momodel.cn//20200703111147.png)\n\n \n\n![Image](http://imgbed.momodel.cn//20200703111117.png)\n\n### 目录：\n\n- 获取数据集：可以使用公开的猫狗数据集，例如Kaggle的\"Dogs vs. Cats\"数据集。可以从Kaggle网站上下载或者使用API获取数据集。\n- 数据预处理：需要将下载的数据集进行预处理，包括图片大小的调整、转化为灰度图或彩色图、对图片进行归一化等操作。\n- 模型选择：选择一个适合的机器学习模型。对于图像识别问题，卷积神经网络（Convolutional Neural Network，CNN）是一种常见的选择。可以考虑使用Keras、TensorFlow等深度学习框架搭建CNN模型。\n- 训练模型：使用数据集训练所选的模型。可以将数据集分为训练集、验证集和测试集，训练模型并进行调整以获得最好的结果。\n- 模型评估和测试：使用测试集评估模型的准确率和性能。\n\n#### 数据集下载：\n\nKaggle上的\"Dogs vs. Cats\"数据集：\n\nhttps://www.kaggle.com/c/dogs-vs-cats/data\n\n#### 数据预处理\n\n以下是一些常见的数据预处理步骤：\n\n1. 将图片划分为训练集和测试集，并将它们分别存储在不同的文件夹中。\n2. 对图片进行大小调整和归一化。可以使用OpenCV或Pillow等库进行图片处理。\n3. 将图片转换为numpy数组格式，以便进行模型训练。可以使用OpenCV或Pillow等库将图片转换为numpy数组。\n4. 对数据进行增强。可以使用Keras的ImageDataGenerator等库进行数据增强，例如旋转、缩放、翻转等操作，以扩充训练集的大小。\n5. 将数据集打包成可以输入模型的格式。可以使用Keras或PyTorch等深度学习框架中的数据加载器进行数据加载和打包。\n\n以上是常见的数据预处理步骤，但具体的预处理步骤可能因数据集的不同而有所不同。在实际操作中，需要根据具体情况进行调整。\n\n```python\nimport os\nimport cv2\nimport numpy as np\n# 定义猫狗分类的类别数\nnum_classes = 2\n# 定义图片大小\nimg_size = 100\n# 函数load_data用于加载数据集，并对数据进行预处理\ndef load_data(data_dir):\n    \"\"\"加载数据集\"\"\"\n    # 建立一个列表用于存储图片和标签\n    data = []\n    # 遍历数据集中的每个类别，这里有猫和狗两个类别\n    for category in os.listdir(data_dir):\n        # 将类别转换为整数\n        if category == \'cat\':\n            label = 0\n        else:\n            label = 1\n        # 遍历每个类别中的图片\n        for img_file in os.listdir(os.path.join(data_dir, category)):\n            # 读取图片并调整大小为100x100\n            img = cv2.imread(os.path.join(data_dir, category, img_file))\n            img = cv2.resize(img, (img_size, img_size))\n            # 将图片数据和标签存储到data列表中\n            data.append([img, label])\n    # 将data列表转换为numpy数组\n    np.random.shuffle(data)\n    # 分别获取图片数据和标签数据\n    X = []\n    y = []\n    for img_data, label in data:\n        X.append(img_data)\n        y.append(label)\n    # 将图片数据转换为numpy数组，并归一化到[0, 1]范围内\n    X = np.array(X) / 255.0\n    # 将标签数据转换为numpy数组\n    y = np.array(y)\n    # 将标签数据进行one-hot编码\n    y = np.eye(num_classes)[y]\n    # 返回图片数据和标签数据\n    return X, y\n```\n\n#### 模型选择\n\n​	对于Kaggle上的\"Dogs vs. Cats\"数据集，一般采用卷积神经网络（Convolutional Neural Network，CNN）进行训练。CNN特别适合处理图像数据，因为它们可以有效地学习图像中的特征和模式。在CNN中，卷积层用于提取特征，池化层用于缩小图像，而全连接层用于将提取的特征映射到不同的类别。\n\n常用的CNN模型包括LeNet、AlexNet、VGG、ResNet等。对于\"Dogs vs. Cats\"数据集，由于图像较为复杂，建议使用较深的网络结构，如VGG或ResNet。\n\n当然，选择模型还要考虑到计算资源、训练时间等因素。在训练模型之前，可以先尝试几个不同的模型并进行比较，选择表现最佳的模型。\n\n### Keras实现猫狗识别\n\n```\n# 导入需要的包\nimport sys\n\nimport numpy as np\nfrom keras.preprocessing import image\nfrom keras.saving.save import load_model\nfrom matplotlib import pyplot\nfrom tensorflow.keras.utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Dense\nfrom keras.layers import Flatten\nfrom tensorflow.keras.optimizers import SGD\nfrom keras.preprocessing.image import ImageDataGenerator\nimport tensorflow as tf\n\ntf.compat.v1.logging.set_verbosity(tf.compat.v1.logging.ERROR)\nimport os\nos.environ[\"CUDA_VISIBLE_DEVICES\"]=\"0\"\n# 创建一个 cnn 模型\ndef define_cnn_model():\n    model = Sequential()\n    # 卷积层\n    model.add(Conv2D(32, (3, 3),\n                     activation=\'relu\',\n                     kernel_initializer=\'he_uniform\',\n                     padding=\'same\',\n                     input_shape=(200, 200, 3)))\n    # 最大池化层\n    model.add(MaxPooling2D((2, 2)))\n    # Flatten 层\n    model.add(Flatten())\n    # 全连接层\n    model.add(Dense(128,\n                    activation=\'relu\',\n                    kernel_initializer=\'he_uniform\'))\n    model.add(Dense(1, activation=\'sigmoid\'))\n\n    # 编译模型\n    opt = SGD(lr=0.001, momentum=0.9)\n    model.compile(optimizer=opt,\n                  loss=\'binary_crossentropy\',\n                  metrics=[\'accuracy\'])\n    return model\n\n\ndef train_cnn_model():\n    # 实例化模型\n    model = define_cnn_model()\n    # 创建图片生成器\n    datagen = ImageDataGenerator(rescale=1.0 / 255.0)\n    train_it = datagen.flow_from_directory(\n        \'./datasets/ma1ogo3ushu4ju4ji2/dogs_cats/data/train/\',\n        class_mode=\'binary\',\n        batch_size=128,\n        target_size=(200, 200))\n    # 训练模型\n    model.fit_generator(train_it,\n                        steps_per_epoch=len(train_it),\n                        epochs=20,\n                        verbose=1)\n    # 把模型保存到 results 文件夹\n    model.save(\"./results/basic_cnn_model.h5\")\n\n\nif __name__ == \"__main__\":\n	# 加载模型预测单图片\n    # model = load_model(\"./results/basic_cnn_model.h5\")\n    # img = image.load_img(\'./datasets/dogs_cats/train/train/dog.5.jpg\', target_size=(200, 200))\n    # x = image.img_to_array(img)\n    # x = np.expand_dims(x, axis=0)\n    # predict = model.predict(x)\n    # print(predict)\n    train_cnn_model()\n```', NULL, NULL, 0, 56, 0, 1, NULL, 1, 1, '2023-03-09 08:45:59', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (64, 1, 1, 15, NULL, 'https://k.sinaimg.cn/n/spider20230112/462/w846h416/20230112/c9d0-ab60f7bc0279569562a5f5461020683d.png/w700h350z1l10t10890.jpg', '【图像识别】yolov8 安装 与 运行测试', NULL, '## 前言\nyolov8是基于yolov7的目标检测算法，相较于之前的版本在精度和速度上都有了不小的提升，因此受到了广泛关注。本篇博客将详细介绍yolov8的下载安装部署流程，帮助大家快速上手使用。\nyolov8官网：[YOLOv8 - Ultralytics | Revolutionizing the World of Vision AI](https://ultralytics.com/yolov8)\n## 目录\n本篇博客将按照以下顺序进行介绍：\n1. Anaconda 创建一个pytorch环境\n2. Github 拉取 yolov8 并安装需要\n3. yolov8 运行测试\n## Anaconda 创建一个pytorch环境\n首先，需要确保已经安装了Anaconda，建议使用管理员权限打开anaconda prompt，这样创建的虚拟环境会在anaconda安装目录下的envs中。\n\n**接下来是对本机显卡驱动的适配安装**\n1. 确认你的电脑有支持CUDA的NVIDIA显卡，并且已经安装了NVIDIA显卡驱动。可以通过运行`nvidia-smi`命令来确认显卡驱动是否已经安装好。\n2. 安装CUDA Toolkit。你需要根据你的显卡型号和操作系统版本来选择合适的CUDA Toolkit版本。可以在NVIDIA官网上下载对应版本的CUDA Toolkit。\n3. 安装cuDNN。cuDNN是NVIDIA提供的用于深度学习的加速库，需要先注册NVIDIA开发者账号才能下载。\n4. 在PyTorch官网上下载对应版本的GPU版PyTorch安装包，安装即可。如果你使用conda环境，也可以通过conda命令来安装。\n\n**以下是GPU版PyTorch安装需要的链接：**\n\n1. NVIDIA显卡驱动下载：https://www.nvidia.com/Download/index.aspx\n2. CUDA Toolkit下载：https://developer.nvidia.com/cuda-downloads\n3. cuDNN下载：https://developer.nvidia.com/cudnn\n4. PyTorch官网：https://pytorch.org/\n\n接下来，记录需要安装torch和GPU版本。然后直接使用pip命令进行安装，或者从官网下载WHI文件进行安装。\n\n`pip install pip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html`\n\n安装完成后，可以使用以下代码进行验证：\n\n```\nimport torch\nprint(torch.__version__) #查看pytorch版本 \nprint(torch.cuda.is_available()) #查看cuda是否可用 输出为True 或者False\n```\n\n如果输出为True，则表示已经成功安装了cuda。如果是False，则需要重新安装cuda。\n\n## Github 拉取 yolov8 并安装需要\n\nyolov8的源代码可以在github上获取，使用以下命令可以将yolov8下载到本地：\n\n```\ngit clone https://github.com/ultralytics/ultralytics.git\n```\n\n项目克隆完成后就开始安装依赖\n\n这里用PyCharm演示，如果没有安装可以在官网下载。安装完成后，可以使用以下步骤进行配置：\n\n- 打开PyCharm，点击File->Settings->Project Interpreter\n- 点击右上角的“+”号，选择Conda环境\n- 选中Anaconda安装目录中的_conda.exe\n- 等待扫描环境后选择之前创建的环境\n- 打开终端输入命令安装依赖：`pip install ultralytics`    \n\n## yolov8 运行测试\n\n打开目录 /ultralytics/yolo/v8\n\n可以看到里面有 classify、detect、segment文件夹\n\n我们这里使用detect进行项目测试，将视频或图片放入路径后 \\ultralytics\\ultralytics\\assets\n\n运行 \\ultralytics\\yolo\\v8\\detect\\predict.py 即可\n\n<iframe src=\"//player.bilibili.com/player.html?aid=905481508&bvid=BV1rP4y167wX&cid=968526904&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" height=\"480px\"> </iframe>\n<center>车流测试</center>\n<iframe src=\"//player.bilibili.com/player.html?aid=610830594&bvid=BV1K84y1A726&cid=1048877238&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" height=\"480px\"> </iframe>\n<center>版本对比</center>', NULL, NULL, 0, 54, 0, 1, NULL, 1, 1, '2023-03-11 22:45:31', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (65, 1, 1, 15, NULL, 'http://i2.hdslb.com/bfs/archive/96a6fd4dd2976a6b72df6a66de224d90506704fc.jpg', '【AI应用场景】《一秒语音包》+VITS，在聊天中使用AI语音，让聊天更有趣', NULL, '# 《一秒语音包》：自定义聊天语音与AI语音合成工具教程\n\n大家好，今天我要向大家介绍一个非常有趣的应用——《一秒语音包》，以及两个强大的AI语音合成工具。《一秒语音包》可以让你在聊天中自定义发送语音，让你的语音聊天体验更加丰富多彩。而利用AI语音合成工具so-vits-svc，你甚至可以克隆原神角色的语音，让你的聊天更加有趣。下面，让我们开始这个教程吧！\n\n## 一、《一秒语音包》应用\n\n### 1.1 下载与安装\n\n首先，你需要从应用商店（如：Apple App Store、Google Play Store）搜索并下载《一秒语音包》。安装完成后，打开应用并注册/登录你的账号。\n\n### 1.2 创建自定义语音包\n\n具体步骤看开发者的B站视频教程：[一秒语音包微信使用教程_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1XT4y1u71G/?spm_id_from=333.337.search-card.all.click&vd_source=67b9ab45b02b73b3d8662c62e2a046e1)\n\n### 1.3 发送自定义语音\n\n在聊天中，点击“+”按钮，选择你创建的语音包，然后点击想要发送的语音片段。你的朋友会收到这个有趣的语音消息！\n\n## 二、AI语音合成工具\n\n接下来，我将向大家介绍两个AI语音合成工具\n\n### 2.1 VITS部署教程\n\n[在本地（Windows/Linux）从零开始训练VITS中文AI语音模型到TTS推理的避坑教程指南 - 哔哩哔哩 (bilibili.com)](https://www.bilibili.com/read/cv21153903)\n\n### 2.2 so-vits-svc部署教程\n\n[【人工智能】保姆级教学so-vits-svc快速生成AI歌曲 - 掘金 (juejin.cn)](https://juejin.cn/post/7196324326482968633)\n\n### 2.3 其他方法\n\n本地部署建议机器为N卡，建议GPU达到GTX 3080显存8G以上。A卡应该是跑不了，只能通过CPU去跑了（AMD,no!）\n\n但是互联网是共享的，有很多大厂提供算力平台，也有很多站长提供服务镜像。\n\n我这里搜集到了一些AI工具\n\n[Poe - 聊天机器人](https://poe.com/chatgpt)\n\n[原神AI语音合成 ](https://yuanshenai.com/)\n\n[MikuTools - 一个轻量的工具集合](https://tools.miku.ac/)\n\n## 三、结合使用\n\n现在，你可以将so-vits-svc等AI语音合成工具生成的原神角色语音导入到《一秒语音包》中，与朋友们分享更加有趣的语音聊天。\n\n希望这篇教程对你有所帮助，快去尝试使用《一秒语音包》和AI语音合成工具，让你的聊天更加有趣吧！', NULL, NULL, 0, 268, 0, 1, NULL, 0, 1, '2023-03-19 12:39:10', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (66, 1, 1, 4, NULL, 'https://tse2-mm.cn.bing.net/th/id/OIP-C.XJNV2v-nNeowAjW7sXmS9wHaEo?pid=ImgDet&rs=1', '中转文本', NULL, '#### 任务描述\n\n本关任务：实现 step1/Seqlist.cpp 中的`SL_InsAt`、`SL_DelAt`和`SL_DelValue`三个操作函数，以实现线性表中数据的插入、删除与查找等功能。\n\n#### 相关知识\n\n线性表是最基本、最简单、也是最常用的一种数据结构。线性表结构中，数据元素之间通过一对一首尾相接的方式连接起来。具体实现时，线性表可以采用不同的存储策略。下面给出了一种基于顺序存储的线性表实现方案：\n\n![img](https://data.educoder.net/api/attachments/169434)\n\n该方案将线性表存储在一片连续空间里，并通过`data`、`len`和`max`三个属性元素。组织成为一个结构：\n\n- `data`: 给出线性表存储空间的起始地址；\n- `max`: 指明线性表存储空间最多可存储的数据元素个数；\n- `len`: 当前线性表里的数据元素个数。\n\n为了讨论简化，我们假设每个数据元素是一个整数:\n\n```\ntypedef int T; // 数据元素的数据类型\n```\n\n该线性表的结构定义如下：\n\n```\nstruct SeqList{    T* data;   // 数据元素存储空间的开始地址    int len;   // 线性表的当前长度    int max;   // 线性表的最大长度};\n```\n\n以上示意图中的`slist`是指向该结构的一个指针，只要给定`slist`指针，就可对线性表进行操作。\n\n对数据元素进行操作处理是一个数据结构的重要组成部分。线性表涉及的主要操作如下：\n\n- 创建线性表：创建一个最多可存储`max`个数据元素的顺序存储的线性表，并将其初始状态设置为`len=0`。该操作函数具体定义如下，其返回值为`slist`： `SeqList* SL_Create(int max)`\n- 释放线性表存储空间：释放`slist->data`所指向的用于存储线性表数据元素的存储空间。该操作函数具体定义如下： `void SL_Free(SeqList* slist)`\n- 置空线性表：将当前线性表变为一个空表，实现方法是将`slist->len`设置为`0`。该操作函数具体定义如下： `void SL_MakeEmpty(SeqList* slist)`\n- 获取线性表当前长度：获取并返回线性表的当前长度`slist->len`。该操作函数具体定义如下： `int SL_Length(SeqList* slist)`\n- 判断线性表是否为空：若当前线性表是空表，则返回`false`，否则返回`true`。该操作函数具体定义如下： `BOOL SL_IsEmpty(SeqList* slist)`\n- 判断线性表是否已满：若线性表达到最大长度，则返回 `true`，否则返回`false`。该操作函数具体定义如下： `BOOL SL_IsFull(SeqList* slist)`\n- 返回线性表第`i`个数据元素：返回线性表的第`i`个数据元素`slist->data[i]`。该操作函数具体定义如下： `T SL_GetAt(SeqList* slist, int i)`\n\n- 修改线性表第`i`个数据元素： 将线性表的第 `i `个数据元素的值修改为 `x`。该操作函数具体定义如下： `void SL_SetAt(SeqList* slist, int i, T x)`\n- 在线性表位置`i`插入数据元素`x`： 将`x`插入`slist->data[i]`之前。若插入失败(`i>slist->len` 或`i<0`时，无法插入)，返回 `false`，否则返回 `true`。该操作函数具体定义如下： `BOOL SL_InsAt(SeqList* slist, int i, T x)`\n- 删除线性表位置`i`处的数据元素： 删除线性表的`i`号数据元素。输入参数`i`范围应在`[0,slist->len-1]`内，否则会产生不能预料的异常或错误。返回被删除的数据元素的值。该操作函数具体定义如下： `T SL_DelAt(SeqList* slist, int i)`\n- 查找线性表中第一个值为`x`的数据元素的位置： 找到线性表中第一个值为`x`的数据元素的编号。返回值`-1`表示没有找到，返回值`>=0`表示该元素位置。该操作函数具体定义如下： `int SL_FindValue(SeqList* slist, T x)`\n- 删除线性表中第一个值为`x`的数据元素： 删除第一个值为`x`的数据元素，返回该数据元素的编号。如果不存在值为`x`的数据元素，则返回`-1`。该操作函数具体定义如下： `int SL_DelValue(SeqList* slist, T x)`\n- 打印线性表： 打印整个线性表。该操作函数具体定义如下： `void SL_Print(SeqList* slist)`\n\n#### 编程要求\n\n本关任务是实现 step1/Seqlist.cpp 中的`SL_InsAt`、`SL_DelAt`和`SL_DelValue`三个操作函数，以实现线性表中数据的插入、删除与查找等功能。具体要求如下：\n\n- `SL_InsAT`: 在顺序表的位置`i`插入结点`x`，即插入`d[i]`之前，`i`的有效范围`[0,slist->len]`；\n- `SL_DelAt`：删除顺序表`slist`的第`i`号结点， `i`的有效范围应在`[0,slist->len)`内，否则会产生异常或错误。返回被删除的数据元素的值；\n- `SL_DelValue`：删除第一个值为`x`的结点，存在值为`x`的结点则返回结点编号，未找到返回`－1`；\n- 输入输出格式请参见后续测试样例。\n\n> 注意：本关必读中提及的其他操作已经由平台实现，你在实现本关任务的三个操作函数时，在函数体内可调用其他操作。`\n\n本关涉及的代码文件 Seqlist.cpp 中的 3 个操作函数的代码框架如下：\n\n```\nbool SL_InsAt(SeqList* slist, int i, T x)// 在顺序表的位置i插入结点x, 插入在d[i]之前。i的有效范围[0,slist->len]{    // 请在这里补充代码，完成本关任务    /********** Begin *********/    /********** End **********/}\nT SL_DelAt(SeqList* slist, int i)// 删除顺序表slist的第i号结点（i的有效范围应在[0,slist->len)内，否则会产生异常或错误）。返回被删除的数据元素的值。{    // 请在这里补充代码，完成本关任务    /********** Begin *********/    /********** End **********/}\nint SL_DelValue(SeqList* slist, T x)// 删除第一个值为x的结点。存在值为x的结点则返回结点编号, 未找到则返回－1{    // 请在这里补充代码，完成本关任务    /********** Begin *********/    /********** End **********/}\n```\n\n#### 测试说明\n\n本关的测试文件是 step1/Main.cpp ，负责对实现的代码进行测试。具体代码如下：\n\n```\n#include <stdio.h>#include <stdlib.h>#include \"SeqList.h\"#pragma warning(disable:4996)void main(){    //设置线性表最多可存储的元素个数maxint max=100;//创建一个长度为max的空线性表    SeqList* slist=SL_Create(max);//声明并读入线性表当前长度n    int n;    scanf(\"%d\", &n);    int i;    int item;    //循环读入n个整数，并存入到线性表中    for (i=0; i<n; i++){        scanf(\"%d\", &item);        SL_InsAt(slist, i, item);    }//读入一个整数idel，并将线性表中位置idel处的数据元素删除    int idel;    scanf(\"%d\", &idel);    SL_DelAt(slist, idel);    //读入一个整数整itemdel，并将线性表中第一次出现该值的数据元素删除    int itemdel;    scanf(\"%d\", &itemdel);    SL_DelValue(slist, itemdel);    SL_Print(slist);//释放线性表空间    SL_Free(slist);}\n注意：step1/Main.cpp的代码不能被修改。\n```\n\n以下是平台对 step1/Main.cpp 的测试样例：\n\n样例输入:\n\n```\n5  //输入线性表的长度8 9 12 33 45 //依次输入线性表的数据元素2  //删除线性表的2号数据元素33  //删除值为33的数据元素\n```\n\n样例输出 `8 9 45`  `//输出当前线性表的数据元素`\n\n------\n\n开始你的任务吧，祝你成功！\n\n\n\n```C++\n/*************************************************************\n    date: April 2017\n    copyright: Zhu En\n    DO NOT distribute this code without my permission.\n**************************************************************/\n// 顺序表操作实现文件\n//\n#include <stdio.h>\n#include <stdlib.h>\n#include \"Seqlist.h\"\nSeqList* SL_Create(int maxlen)\n// 创建一个顺序表\n// 与SqLst_Free()配对\n{\n    SeqList* slist=(SeqList*)malloc(sizeof(SeqList));\n    slist->data = (T*)malloc(sizeof(T)*maxlen);\n    slist->max=maxlen;\n    slist->len=0;\n    return slist;\n}\nvoid SL_Free(SeqList* slist)\n// 释放/删除 顺序表\n// 与SqLst_Create()配对\n{\n    free(slist->data);\n    free(slist);\n}\nvoid SL_MakeEmpty(SeqList* slist)\n// 置为空表\n{\n    slist->len=0;\n}\nint SL_Length(SeqList* slist)\n// 获取长度\n{\n    return slist->len;\n}\nbool SL_IsEmpty(SeqList* slist)\n// 判断顺序表是否空\n{\n    return 0==slist->len;\n}\nbool SL_IsFull(SeqList* slist)\n// 判断顺序表是否满\n{\n    return slist->len==slist->max;\n}\nT SL_GetAt(SeqList* slist, int i)\n// 获取顺序表slist的第i号结点数据\n// 返回第i号结点的值\n{\n    if(i<0||i>=slist->len) \n    {\n        printf(\"SL_GetAt(): location error when reading elements of the slist!\\n\");        \n        SL_Free(slist);\n        exit(0);\n    }\n    else \n    {\n     	return slist->data[i];\n    }\n}\nvoid SL_SetAt(SeqList* slist, int i, T x)\n// 设置第i号结点的值（对第i号结点的数据进行写）\n{\n    if(i<0||i>=slist->len) \n    {\n        printf(\"SL_SetAt(): location error when setting elements of the slist!\\n\");        \n        SL_Free(slist);\n        exit(0);\n    }\n    else \n    {\n     	slist->data[i]=x;\n    }\n}\nbool SL_InsAt(SeqList* slist, int i, T x)\n// 在顺序表的位置i插入结点x, 插入d[i]之前\n// i的有效范围[0,plist->len]\n{\n    if (i<0 || i>slist->len || slist->len==slist->max)  \n    {\n        printf(\"SL_InsAt(): location error, or slist full.\\n\");\n        return false;\n    }\n    for (int j=slist->len; j>=i+1; j--) \n    {\n        slist->data[j]=slist->data[j-1];\n    }\n    slist->data[i]=x;\n    slist->len++;\n    return true;\n}\nT SL_DelAt(SeqList* slist, int i)\n// 删除顺序表plist的第i号结点\n// i的有效范围应在[0,plist->len)内，否则会产生异常或错误。\n// 返回被删除的数据元素的值。\n{\n    if (i<0 || i>=slist->len) \n    {\n        printf(\"SL_DelAt(): location error!\\n\");\n        SL_Free(slist);\n        exit(0);\n    }\n    T res=slist->data[i];\n    for (int j=i; j<slist->len-1; j++) \n    {\n        slist->data[j] = slist->data[j+1];\n    }\n    slist->len--;\n    return res;\n}\nint SL_FindValue(SeqList* slist, T x)\n// 在顺序表表中查找第一个值为x的结点，返回结点的编号\n// 返回值大于等于0时表示找到值为x的结点的编号，-1表示没有找到\n{\n    int i=0;\n    while(i<slist->len && slist->data[i]!=x) i++;\n    if (i<slist->len) return i;\n    else return -1;\n}\nint SL_DelValue(SeqList* slist, T x)\n// 删除第一个值为x的结点,\n// 存在值为x的结点则返回结点编号, 未找到返回－1\n{\n int i=SL_FindValue(slist, x);\n    if (i>=0) \n    {\n    	SL_DelAt(slist, i);\n    }\n    return i;\n}\nvoid SL_Print(SeqList* slist)\n// 打印整个顺序表\n{\n    if (slist->len==0) \n    {\n        printf(\"The slist is empty.\\n\");        \n        return;\n    }\n    //printf(\"The slist contains: \");\n    for (int i=0; i<slist->len; i++) \n    {\n        printf(\"%d  \", slist->data[i]);\n    }\n    printf(\"\\n\");    \n}\n\n```\n', NULL, NULL, 0, 56, 0, 0, '3612', 0, 1, '2023-03-30 14:44:07', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (67, 1, 1, 15, NULL, '//qiniu.roginx.ink/articleCover/janx11680401100683241', 'AI工具分享 | 导航、聊天、内容生成', NULL, '人工智能（AI）已经成为许多领域的热门话题，包括内容创作、市场营销、图像处理等。今天，我想向大家分享几款实用的人工智能工具，希望能够提高大家的工作效率和质量。\n\n<div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\">\n<div class=\"mceTmpl\"><input id=\"hideCheckInput\" class=\"hideCheckInput\" type=\"checkbox\" />\n<div class=\"hideContext\">\n<div><iframe src=\"/v/JMusic/#/?playlist=802627608\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\" data-mce-fragment=\"1\"></iframe></div>\n</div>\n<label class=\"check_label\" for=\"hideCheckInput\"></label></div>\n</div>\n\n[AINAV.cn—AI导航网 - 人工智能领域的导航网站](https://www.ainav.cn/)\n\nainav.cn是一个人工智能领域的导航网站，收录了100+个网址、公众号、自媒体、书籍、电影等，是互联网中资源最全的 AI 人工智能网站之一。它可以帮助您轻松发现优质 AI 资源，大大提升您的效率。目前导航正在持续更新热门和冷门资源，人人皆可推荐，帮助大家发现优质资源。\n\n[人工智能 | 奇趣网站收藏家 (fuun.fun)](https://fuun.fun/ai)\n\n这是一个在线人工智能项目网站，它提供了很多有趣的 AI 项目\n\n[GPT-4 - Poe - ChatGPT聊天](https://poe.com/)\n\nPoe提供实时在线与多个 AI 机器人交流。它支持 web 端和 iOS 客户端，安卓会在后续发布。目前的情况是 ChatGPT、Sage、Dragonfly、Claude 机器人可以免费、无限制、实时使用。只需要一个邮箱即可注册。你可以随时切换 AI 而对话不中断。\n\n正常来说，只需要收藏AI工具导航和聊天工具就可以了，当然你想看我的水文也可以。\n\n[Runway - AI视频 ](https://runwayml.com/)\n\n[Descript - AI视频](https://www.descript.com/video-editing)\n\n[Synthesia- AI视频](https://www.synthesia.io/)\n\n[Jasper - AI Copywriter | AI Content Generator for Teams](https://www.jasper.ai/)\n\n[Vega AI - 生成式AI工具（AI绘画](https://rightbrain.art/text2Image)\n\n[分离人声](https://vocalremover.org/zh/)\n\n[AMiner - AI赋能科技情报挖掘-学术搜索-论文检索-论文专利-文献追踪-学者画像](https://www.aminer.cn/)\n\n[iBooker - 可能是东半球最大的 AI 社区 | 欢迎大家贡献项目 -- ApacheCN 提供支持](https://www.apachecn.org/#/)\n\n[原神AI语音合成 (yuanshenai.com)](https://yuanshenai.com/)\n\n[MikuTools - 一个轻量的工具集合](https://tools.miku.ac/)\n\n[Cursor | Build Fast - code with AI](https://www.cursor.so/?ref=AIGC-Big-Player)\n\n[Text To Speech - 在线文本转语音 (text-to-speech.cn)](https://www.text-to-speech.cn/)\n\n[Tome - PPT自动生成](https://beta.tome.app/)\n\n[ChatPDF - Chat with any PDF 读论文](https://www.chatpdf.com/)\n\n以下这个[仓库](https://github.com/ikaijua/Awesome-AITools/blob/main/README-CN.md)整理AI相关的实用工具。\n\n## 全部分类\n- [ChatGPT 应用](#chatgpt应用)\n- [中国企业的大语言模型](#中国企业的大语言模型)\n- [AutoGPT](#autogpt)\n- [搜索引擎](#搜索引擎)\n- [写作](#写作)\n- [编程开发](#编程开发)\n- [翻译工具](#翻译工具)\n- [口语练习](#口语练习)\n- [图像创作](#图像创作)\n- [语音识别](#语音识别)\n- [影音创作](#影音创作)\n- [视频内容总结](#视频内容总结)\n\n## 评测\n- [大语言模型评测](#大语言模型评测)\n\n### ChatGPT应用\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n| chatgpt | openAI的chatgpt </br>应用示例：[B站视频：这9款工具帮你榨干ChatGPT，解锁隐藏玩法](https://www.bilibili.com/video/BV1qs4y1D7ED) |https://chat.openai.com  | 免费，有付费升级版| \n| Chatbox | 使用ChatGPT API（OpenAI API）的桌面应用程序, 将所有的聊天信息和提示信息存储在本地，从而减少了数据丢失的风险。比网页版使用更稳定些| [github地址](https://github.com/Bin-Huang/chatbox) | 免费，需要使用OpenAPI的[apikey](https://platform.openai.com/account/api-keys)|\n| Poe | 美版知乎 Quora 构建的AI 产品，有web和客户端。目前的情况是ChatGPT、Sage、Dragonfly、Claude 机器人可以免费、无限制、实时使用。只需要一个邮箱即可注册。可以随时切换AI而对话不中断，并且对话记录是在线保存并且同步到客户端的。chatgpt-4可以每天免费使用一次 </br> 视频介绍：[B站视频：神器！与chatGPT类似的新人工智能问答AI：Poe, 美国知乎Quaro最新产品，专业回答](https://www.bilibili.com/video/BV13Y411B7Az)| https://poe.com/ |免费，有付费升级版\n| ChatGPT-Shortcut | 开源，让生产力加倍的 ChatGPT 快捷指令，按照领域和功能分区，可对提示词进行标签筛选、关键词搜索和一键复制。|网页地址：https://ai.newzone.top/ </br>  [github地址](https://github.com/rockbenben/ChatGPT-Shortcut) |免费| \n|ChatGPT Sidebar|ChatGPT 边栏是您在浏览任何网站时可以使用的人工智能助手。</br> 视频介绍：[B站视频：CharGPT初体验，浏览器安装人工智能侧边栏AI Sidebar扩展程序](https://www.bilibili.com/video/BV1Y24y1L7JA)|[chrome扩展地址](https://chrome.google.com/webstore/detail/chatgpt-sidebar-support-g/difoiogjjojoaoomphldepapgpbgkhkb)|免费|\n| WebChatGPT |开源程序，给chatgpt扩展联网的能力 </br> 视频介绍：[B站视频：可以让ChatGPT直接联网的扩展程序](https://www.bilibili.com/video/BV1bY4y1C7N3) | [github地址](https://github.com/qunash/chatgpt-advanced) | 免费|\n| AIPRM for ChatGPT |浏览器插件，提供一系列精选ChatGPT 指令模板，甚至还能够自己创建，还可以调整AI 语气和写作风格 </br>B站视频：[集大成者！ChatGPT百宝箱，内置多种功能，所见即所得！](https://www.bilibili.com/video/BV1LT411S7GK)| [chrome扩展地址](https://chrome.google.com/webstore/detail/aiprm-for-chatgpt/ojnbohmppadfgpejeebfnmnknjdlckgj) | 免费|\n\n### AutoGPT\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n|Auto-GPT|开源项目，使用gpt自主地实现你设定的任何目标。演示示例：[爆火的自主人工智能AutoGPT，程序员表示开始真正有点担忧会失业了！](https://www.bilibili.com/video/BV1Ph4y1W7Yj)|[github](https://github.com/Torantulino/Auto-GPT)|免费，需要OpenAI API key|\n\n### 中国企业的大语言模型\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n|通义千问|阿里云的大语言模型 </br> 视频介绍： [B站视频：国产AI到底行不行？测试完通义千问，我只想说两个字【我们离ChatGPT还有多远】](https://www.bilibili.com/video/BV1KT411W7FN/)|https://tongyi.aliyun.com/|需要邀请码|\n|文心一言|百度的大语言模型|https://yiyan.baidu.com/welcome|需要申请等待|\n\n\n### 搜索引擎\n| 名称 | 说明 | 链接 | 费用 | \n| --- | --- | --- | --- |\n| New Bing | 需要在waitlist进行等待 | https://www.bing.com/new | 免费 | \n| You.com | 结合对话模式的搜索引擎 | https://you.com | 免费 |\n| Perplexity.ai | Perplexity.ai 是一个基于 GPT-3 的 AI 工具，类似 New Bing 的搜寻引擎、会附上参考结果 | https://www.perplexity.ai | 免费\n\n### 写作\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n| Notion AI | AI辅助的笔记软件，主要包括AI创作文章、翻译、修正语法、摘要和总结等 </br> 视频示例：[B站视频：Notion AI完整介绍 \\| 十个节省时间的神功能(ChatGPT般强大)](https://www.bilibili.com/video/BV1Lg411b7Cx) | https://www.notion.so| 有一定免费的AI试用次数，AI功能10$/每月 |\n| Deep L Write | 英文、德文写作工具，可以及時修正写作錯誤、改写句子。 | https://www.deepl.com/write |  免費版本使用有文字字数限制/有付费升级版 |\n| grammarly | 纠正语法、拼写、标点符号等错误的写作助手| https://app.grammarly.com/ | 免费/有付费升级版|\n\n### 编程开发\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- | \n| GitHub Copilot | GitHub 和 OpenAI 合作开发的一个代码编写助手 | https://github.com/features/copilot | 付费\n| Cursor | 使用 GPT进行协作的代码编辑器 | https://www.cursor.so | 免费 |\n| ai-code-translator   | 利用chatgpt将代码从一种语言翻译成另一种语言。| https://github.com/mckaywrigley/ai-code-translator | 免费，需要OpenAI API key|\n\n### 翻译工具\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n| immersive-translate | 开源的，沉浸式双语网页翻译扩展 | https://github.com/immersive-translate/immersive-translate/ | 免费 |\n| Deep L | 准确即时的翻译工具，目前支援 31 种语言 | https://www.deepl.com/translator | 免费/付费\n| openai-translator | 基于 ChatGPT API 的划词翻译浏览器插件和跨平台桌面端应用 | https://github.com/yetone/openai-translator | 免费，需要OpenAI API key |\n\n### 口语练习\n\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n|Voice Control for ChatGPT | Chrome 扩展程序，通过它可以与 ChatGPT 进行语音对话。可以帮助英语口语或其他语言口语练习。</br>视频示例：[B站视频:免费口语老师：如何用ChatGPT练习英语口语](https://www.bilibili.com/video/BV1iy4y1Q7Fh) | [URL](https://chrome.google.com/webstore/detail/voice-control-for-chatgpt/eollffkcakegifhacjnlnegohfdlidhn) | 免费，需要chatgpt账号  | \n|SpeechGPT|开源项目，SpeechGPT 是一个让你与 ChatGPT 聊天的网站。|[github](https://github.com/hahahumble/speechgpt)|免费，需要OpenAI API key|\n\n\n### 图像创作\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n| Midjourney | 输入文字或图片进行图片创作。应用示例：<br> [尝试用chatGPT+midjourney进行科研绘图，被效果震惊到了。。。](https://www.bilibili.com/video/BV1XM411T7uP) | https://www.midjourney.com | 免費账户有一定的使用分钟限制，有付费升级版本 |\n| Stable diffusion webui | 开源项目，输入文字或图片进行图片创作， Stable diffusion webui是Stable diffusion的GUI是将stable diffusion实现可视化的图像用户操作界面，它本身还集成了很多其它有用的扩展脚本。<br>新手入门教程：https://www.bilibili.com/video/BV1Qo4y167AK/ </br> AI风格化视频或AI真人视频的效果：</br>1. [【AI动画】欣小萌天台蹦迪 动画版](https://www.bilibili.com/video/BV1RL411U7wR)，</br>2. [死磕真人AI动作，人物和背景的终于不闪了，你们觉得哪个更好点？](https://www.bilibili.com/video/BV1Fs4y1V7f7)</br>3. [5分钟，教会你如何生成AI动画](https://www.bilibili.com/video/BV13s4y1D7Ni)| [github](https://github.com/AUTOMATIC1111/stable-diffusion-webui) | 免费|\n| visual-chatgpt | 通过 ChatGPT 创作图片 | https://github.com/microsoft/visual-chatgpt | 免费 \n| Microsoft Bing Image Creator | Image Creator 是使用 DALL-E 技术创作图片的工具。试用了下**生成人像图片不堪入目** | https://www.bing.com/images/create | 免费\n\n### 语音识别\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- | \n| whisper | 开源，OpenAPI 开源的通过大规模的弱监督进行鲁棒性的语音识别的模型 | [github](https://github.com/openai/whisper) | 免费 |\n| buzz | 开源，基于OpenAI的Whisper识别语音并生成字幕的开源桌面软件，使用CPU进行处理 | [github](https://github.com/chidiwilliams/buzz) | 免费 |\n|WhisperDesktop| 开源，基于OpenAI的Whisper，Windows系统的桌面应用，使用GPU进行处理，GPU性能好的话会比CPU上更快。使用介绍：https://www.appinn.com/const-me-whisper/|[github](https://github.com/Const-me/Whisper) |免费|\n\n### 影音创作\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- | \n| Fliki | 將文字生成音频和视频的网站 | https://fliki.ai | 免費/付費 |\n| d-id | 根据文字生成数字人的配音视频 | https://studio.d-id.com | 付費，用一定的免费试用额度 |\n\n### 视频内容总结\n| 名称 | 说明 | 链接 | 费用 | \n| ---- | ----------------------------- | --- | --- |\n| ChatGPT for YouTube | Chrome 插件，快速总结 Youtube 视频內容，需要登录chatgpt账号或者apikey | https://chatgpt4youtube.com/| 免费 |\n| Chat Youtube | 给一个Youtube 链接，它能给出总结，还可以向它提视频內容相关的问题 |https://chatyoutube.com | 免费 |\n\n## 评测\n### 大语言模型评测\n- [B站视频：【AI对决】让ChatGPT4出题！结果你绝对想不到！！](https://www.bilibili.com/video/BV1hT411W7YE/)\n- [B站视频：阿里版GPT【通义千问】,和我的预期不一样](https://www.bilibili.com/video/BV1Va4y1T7Ym/)：\n通义千问在自然科学和专业知识方面表现比较优秀，比如代码能力明显强于文心一言，甚至可以与chatgpt3.5掰掰手腕。在中文表达或者文学创作方面还有待提高，逊色于文心一言。\n\n', NULL, NULL, 0, 152, 0, 1, NULL, 1, 1, '2023-04-02 10:05:13', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (68, 1, 1, 6, NULL, 'https://uploadfile.huiyi8.com/22/4e/85/ee/d503c532276084b9baff004222647cb1.jpg', '利用 Masonry.js 和 lightGallery.js 写一个相册集', NULL, '当我在浏览QQ空间相册时，我发现它没有给图片标注的功能，这让我感到非常困扰。因此，我决定自己动手写一个相册，以便更好地展示我的图片。在其中我也翻新了我以前的图集，可以通过这个相册页加载图集，以便更好的浏览图片。\n在线体验：[【进击的巨人】进击意志★艾伦](https://www.roginx.ink/album?type=aurora&id=162)\n在写相册的过程中，我参考了Pinterest的布局，我使用了两个非常有用的JavaScript库：masonry.js和lightGallery.js。\n\n首先，我使用了masonry.js来实现瀑布流布局。这个库可以将不同大小的元素（例如照片）放置在一个网格中，使它们看起来更有趣和动态。使用masonry.js非常简单，只需要在HTML文件中引入库文件，并给每个元素添加一个类名即可。\n\n![Pinterest](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload1.jpg)\n\n```html\n<!-- 引入 masonry.js 文件 -->\n<script src=\"https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js\"></script>\n\n<!-- 在 HTML 中添加类名 -->\n<div class=\"grid\">\n  <div class=\"grid-item\"></div>\n  <div class=\"grid-item\"></div>\n  <div class=\"grid-item\"></div>\n</div>\n\n<!-- 在 JavaScript 中初始化瀑布流布局 -->\n<script>\n  var grid = document.querySelector(\'.grid\');\n  var msnry = new Masonry(grid, {\n    itemSelector: \'.grid-item\',\n    columnWidth: 200\n  });\n</script>\n```\n\n接着，我使用了lightGallery.js来创建一个漂亮的画廊，使用户可以轻松地浏览我的照片。这个库可以自动创建缩略图，并提供一个全屏幕模式，使用户可以更好地欣赏照片。使用lightGallery.js同样非常简单，只需要在HTML文件中引入库文件，并在需要创建画廊的元素上添加一个类名即可。\n\n```html\n<!-- 引入 lightGallery.js 文件 -->\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/lightgallery@2.2.1/dist/css/lightgallery.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/lightgallery@2.2.1/dist/js/lightgallery.min.js\"></script>\n\n<!-- 在 HTML 中添加类名和图片链接 -->\n<div class=\"gallery\">\n  <a href=\"img/image1.jpg\">\n    <img src=\"img/image1-thumbnail.jpg\">\n  </a>\n  <a href=\"img/image2.jpg\">\n    <img src=\"img/image2-thumbnail.jpg\">\n  </a>\n  <a href=\"img/image3.jpg\">\n    <img src=\"img/image3-thumbnail.jpg\">\n  </a>\n</div>\n\n<!-- 在 JavaScript 中初始化画廊 -->\n<script>\n  var gallery = document.querySelector(\'.gallery\');\n  lightGallery(gallery);\n</script>\n```\n\n通过使用这两个库，我成功地创建了一个漂亮的相册，可以展示我的照片，并让用户更好地欣赏它们。这个相册不仅美观，而且易于使用，这对我来说非常重要。如果您也想尝试创建自己的相册，我强烈推荐您使用masonry.js和lightGallery.js，它们会让您的工作更容易，同时提供更好的用户体验。\n\n![最终成品！](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload2.jpg)', NULL, NULL, 0, 56, 0, 1, NULL, 0, 1, '2023-04-07 23:03:40', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (69, 1, 1, 15, NULL, 'https://img-blog.csdnimg.cn/img_convert/3c794cf7c51fde9bafdfe2f693554066.png', '【联邦学习】部署 『 KubeFATE 』', NULL, '# 使用Docker Compose 部署 FATE\n\n## 前言\n\n[FATE](https://www.fedai.org/ )是一个联邦学习框架，能有效帮助多个机构在满足用户隐私保护、数据安全和政府法规的要求下，进行数据使用和建模。项目地址：（<https://github.com/FederatedAI/FATE/>） 本文档介绍使用Docker Compose部署FATE集群的方法。\n\n## Docker Compose 简介\n\nCompose是用于定义和运行多容器Docker应用程序的工具。通过Compose，您可以使用YAML文件来配置应用程序的服务。然后，使用一个命令，就可以从配置中创建并启动所有服务。要了解有关Compose的所有功能的更多信息，请参阅[相关文档](https://docs.docker.com/compose/#features)。\n\n使用Docker compose 可以方便的部署FATE，下面是使用步骤。\n\n## 目标\n\n两个可以互通的FATE实例，每个实例均包括FATE所有组件。\n\n## 准备工作\n\n1. 两个主机（物理机或者虚拟机，都是Centos7系统）；\n2. 所有主机安装Docker 版本 : 18+；\n3. 所有主机安装Docker-Compose 版本: 1.24+；\n4. 部署机可以联网，所以主机相互之间可以网络互通；\n5. 运行机已经下载FATE的各组件镜像，如果无法连接dockerhub，请考虑使用harbor（[Harbor 作为本地镜像源](../registry/README.md)）或者使用离线部署（离线构建镜像参考文档[构建镜像](https://github.com/FederatedAI/FATE/tree/master/build/docker-build)）。\n6. 运行FATE的主机推荐配置8CPUs和16G RAM。\n\n### 下载部署脚本\n\n在任意机器上下载合适的KubeFATE版本，可参考 [releases pages](https://github.com/FederatedAI/KubeFATE/releases)，然后解压。\n\n### 修改镜像配置文件（可选）\n\n在默认情况下，脚本在部署期间会从 [Docker Hub](https://hub.docker.com/search?q=federatedai&type=image)中下载镜像。\n\n对于中国的用户可以用使用国内镜像源：\n具体方法是通过编辑docker-deploy目录下的.env文件,给`RegistryURI`参数填入以下字段\n\n```bash\nRegistryURI=hub.c.163.com\n```\n\n如果在运行机器上已经下载或导入了所需镜像，部署将会变得非常容易。\n\n### 手动下载镜像（可选）\n\n如果运行机没有FATE组件的镜像，可以通过以下命令从Docker Hub获取镜像。FATE镜像的版本`<version>`可在[release页面](https://github.com/FederatedAI/FATE/releases)上查看，其中serving镜像的版本信息在[这个页面](https://github.com/FederatedAI/FATE-Serving/releases)：\n\n```bash\ndocker pull federatedai/eggroll:<version>-release\ndocker pull federatedai/fateboard:<version>-release\ndocker pull federatedai/fateflow:<version>-release\ndocker pull federatedai/serving-server:<version>-release\ndocker pull federatedai/serving-proxy:<version>-release\ndocker pull federatedai/serving-admin:<version>-release\ndocker pull bitnami/zookeeper:3.7.0 \ndocker pull mysql:8.0.28\n```\n\n检查所有镜像是否下载成功。\n\n```bash\n$ docker images\nREPOSITORY                         TAG \nfederatedai/eggroll                <version>-release\nfederatedai/fateboard              <version>-release\nfederatedai/fateflow               <version>-release\nfederatedai/client                 <version>-release\nfederatedai/serving-server         <version>-release\nfederatedai/serving-proxy          <version>-release\nfederatedai/serving-admin          <version>-release\nbitnami/zookeeper                  3.7.0 \nmysql                              8.0.28\n```\n\n### 离线部署（可选）\n\n当我们的运行机器处于无法连接外部网络的时候，就无法从Docker Hub下载镜像，建议使用[Harbor](https://goharbor.io/)作为本地镜像仓库。安装Harbor请参考[文档](https://github.com/FederatedAI/KubeFATE/blob/master/registry/install_harbor.md)。在`.env`文件中，将`RegistryURI`变量更改为Harbor的IP。如下面 192.168.10.1是Harbor IP的示例。\n\n```bash\n$ cd KubeFATE/\n$ vi .env\n\n...\nRegistryURI=192.168.10.1/federatedai\n...\n```\n\n## 用Docker Compose部署FATE\n\n  ***如果在之前你已经部署过其他版本的FATE，请删除清理之后再部署新的版本，[删除部署](#删除部署).***\n\n### 配置需要部署的实例数目\n\n部署脚本提供了部署多个FATE实例的功能，下面的例子我们部署在两个机器上，每个机器运行一个FATE实例，这里两台机器的IP分别为*192.168.7.1*和*192.168.7.2*\n\n根据需求修改配置文件`kubeFATE\\docker-deploy\\parties.conf`。\n\n`parties.conf`配置文件配置项的含义查看这个文档[parties.conf文件介绍](../docs/configurations/Docker_compose_Partys_configuration.md)\n\n下面是修改好的文件，`party 10000`的集群将部署在*192.168.7.1*上，而`party 9999`的集群将部署在*192.168.7.2*上。\n\n```bash\nuser=fate\ndir=/data/projects/fate\nparty_list=(10000 9999)\nparty_ip_list=(192.168.7.1 192.168.7.2)\nserving_ip_list=(192.168.7.1 192.168.7.2)\n\ncomputing=Eggroll\nfederation=Eggroll\nstorage=Eggroll\n\nalgorithm=Basic\ndevice=IPCL\n\ncompute_core=4\n\n......\n\n```\n\n* 使用Spark+Rabbitmq的部署方式的文档可以参考[这里](../docs/FATE_On_Spark.md).\n* 使用Spark+Pulsar的部署方式的文档可以参考[这里](../docs/FATE_On_Spark_With_Pulsar.md).\n* 使用Spark+local Pulsar的部署方式的文档可以参考[这里](TBD)\n\n使用Docker-compose部署FATE可以支持多种种不同的类型引擎的组合(对computing federation storage的选择)，关于不同类型的FATE的更多细节查看: [不同类型FATE的架构介绍](../docs/Introduction_to_Engine_Architecture_zh.md)。\n\n`algorithm`和`device`的配置可以查看这里[FATE_Algorithm_and_Computational_Acceleration_Selection.md](../docs/FATE_Algorithm_and_Computational_Acceleration_Selection.md)\n\n**注意**: 默认情况下不会部署exchange组件。如需部署，用户可以把服务器IP填入上述配置文件的`exchangeip`中，该组件的默认监听端口为9371。\n\n在运行部署脚本之前，需要确保部署机器可以ssh免密登录到两个运行节点主机上。user代表免密的用户。\n\n在运行FATE的主机上，user是非root用户的，需要有`/data/projects/fate`文件夹权限和docker权限。如果是root用户则不需要任何其他操作。\n\n```bash\n# 创建一个组为docker的fate用户\n[user@localhost]$ sudo useradd -s /bin/bash -g docker -d /home/fate fate\n# 设置用户密码\n[user@localhost]$ sudo passwd fate\n# 创建docker-compose部署目录\n[user@localhost]$ sudo mkdir -p /data/projects/fate\n# 修改docker-compose部署目录对应用户和组\n[user@localhost]$ sudo chown -R fate:docker /data/projects/fate\n# 选择用户\n[user@localhost]$ sudo su fate\n# 查看是否拥有docker权限\n[fate@localhost]$ docker ps\nCONTAINER ID  IMAGE   COMMAND   CREATED   STATUS    PORTS   NAMES\n# 查看docker-compose部署目录\n[fate@localhost]$ ls -l /data/projects/\ntotal 0\ndrwxr-xr-x. 2 fate docker 6 May 27 00:51 fate\n```\n\n### 执行部署脚本\n\n以下修改可在任意机器执行。\n\n进入目录`kubeFATE\\docker-deploy`，然后运行：\n\n```bash\nbash ./generate_config.sh          # 生成部署文件\nbash ./docker_deploy.sh all        # 在各个party上部署FATE\n```\n\n脚本将会生成10000、9999两个组织(Party)的部署文件，然后打包成tar文件。接着把tar文件`confs-<party-id>.tar`、`serving-<party-id>.tar`分别复制到party对应的主机上并解包，解包后的文件默认在`/data/projects/fate`目录下。然后脚本将远程登录到这些主机并使用docker compose命令启动FATE实例。\n\n命令成功执行返回后，登录其中任意一个主机：\n\n```bash\nssh root@192.168.7.1\n```\n\n使用以下命令验证实例状态，\n\n```bash\ndocker ps\n````\n\n输出显示如下，若各个组件都是运行（up）状态，说明部署成功。\n\n```bash\nCONTAINER ID   IMAGE                                      COMMAND                  CREATED         STATUS                   PORTS                                                                                                                                           NAMES\n5d2e84ba4c77   federatedai/serving-server:2.1.5-release   \"/bin/sh -c \'java -c…\"   5 minutes ago   Up 5 minutes             0.0.0.0:8000->8000/tcp, :::8000->8000/tcp                                                                                                       serving-9999_serving-server_1\n3dca43f3c9d5   federatedai/serving-admin:2.1.5-release    \"/bin/sh -c \'java -c…\"   5 minutes ago   Up 5 minutes             0.0.0.0:8350->8350/tcp, :::8350->8350/tcp                                                                                                       serving-9999_serving-admin_1\nfe924918509b   federatedai/serving-proxy:2.1.5-release    \"/bin/sh -c \'java -D…\"   5 minutes ago   Up 5 minutes             0.0.0.0:8059->8059/tcp, :::8059->8059/tcp, 0.0.0.0:8869->8869/tcp, :::8869->8869/tcp, 8879/tcp                                                  serving-9999_serving-proxy_1\nb62ed8ba42b7   bitnami/zookeeper:3.7.0                    \"/opt/bitnami/script…\"   5 minutes ago   Up 5 minutes             0.0.0.0:2181->2181/tcp, :::2181->2181/tcp, 8080/tcp, 0.0.0.0:49226->2888/tcp, :::49226->2888/tcp, 0.0.0.0:49225->3888/tcp, :::49225->3888/tcp   serving-9999_serving-zookeeper_1\n3c643324066f   federatedai/client:1.10.0-release           \"/bin/sh -c \'flow in…\"   5 minutes ago   Up 5 minutes             0.0.0.0:20000->20000/tcp, :::20000->20000/tcp                                                                                                   confs-9999_client_1\n3fe0af1ebd71   federatedai/fateboard:1.10.0-release        \"/bin/sh -c \'java -D…\"   5 minutes ago   Up 5 minutes             0.0.0.0:8080->8080/tcp, :::8080->8080/tcp                                                                                                       confs-9999_fateboard_1\n635b7d99357e   federatedai/fateflow:1.10.0-release         \"container-entrypoin…\"   5 minutes ago   Up 5 minutes (healthy)   0.0.0.0:9360->9360/tcp, :::9360->9360/tcp, 8080/tcp, 0.0.0.0:9380->9380/tcp, :::9380->9380/tcp                                                  confs-9999_fateflow_1\n8b515f08add3   federatedai/eggroll:1.10.0-release          \"/tini -- bash -c \'j…\"   5 minutes ago   Up 5 minutes             8080/tcp, 0.0.0.0:9370->9370/tcp, :::9370->9370/tcp                                                                                             confs-9999_rollsite_1\n108cc061c191   federatedai/eggroll:1.10.0-release          \"/tini -- bash -c \'j…\"   5 minutes ago   Up 5 minutes             4670/tcp, 8080/tcp                                                                                                                              confs-9999_clustermanager_1\nf10575e76899   federatedai/eggroll:1.10.0-release          \"/tini -- bash -c \'j…\"   5 minutes ago   Up 5 minutes             4671/tcp, 8080/tcp                                                                                                                              confs-9999_nodemanager_1\naa0a0002de93   mysql:8.0.28                               \"docker-entrypoint.s…\"   5 minutes ago   Up 5 minutes             3306/tcp, 33060/tcp                                                                                                                             confs-9999_mysql_1\n```\n\n### 验证部署\n\ndocker-compose上的FATE启动成功之后需要验证各个服务是否都正常运行，我们可以通过验证toy_example示例来检测。\n\n选择192.168.7.1这个节点验证，使用以下命令验证：\n\n```bash\n#在192.168.7.1上执行下列命令\n$ docker exec -it confs-10000_client_1 bash                        #进入client组件容器内部\n$ flow test toy --guest-party-id 10000 --host-party-id 9999        #验证\n```\n\n如果测试通过，屏幕将显示类似如下消息：\n\n```bash\n\"2019-08-29 07:21:25,353 - secure_add_guest.py[line:96] - INFO: begin to init parameters of secure add example guest\"\n\"2019-08-29 07:21:25,354 - secure_add_guest.py[line:99] - INFO: begin to make guest data\"\n\"2019-08-29 07:21:26,225 - secure_add_guest.py[line:102] - INFO: split data into two random parts\"\n\"2019-08-29 07:21:29,140 - secure_add_guest.py[line:105] - INFO: share one random part data to host\"\n\"2019-08-29 07:21:29,237 - secure_add_guest.py[line:108] - INFO: get share of one random part data from host\"\n\"2019-08-29 07:21:33,073 - secure_add_guest.py[line:111] - INFO: begin to get sum of guest and host\"\n\"2019-08-29 07:21:33,920 - secure_add_guest.py[line:114] - INFO: receive host sum from guest\"\n\"2019-08-29 07:21:34,118 - secure_add_guest.py[line:121] - INFO: success to calculate secure_sum, it is 2000.0000000000002\"\n```\n\n### 验证Serving-Service功能\n\n#### Host方操作\n\n##### 进入party10000 client容器\n\n```bash\ndocker exec -it confs-10000_client_1 bash\n```\n\n##### 上传host数据\n\n```bash\nflow data upload -c fateflow/examples/upload/upload_host.json\n```\n\n#### Guest方操作\n\n##### 进入party9999 client容器\n\n```bash\ndocker exec -it confs-9999_client_1 bash\n```\n\n##### 上传guest数据\n\n```bash\nflow data upload -c fateflow/examples/upload/upload_guest.json\n```\n\n##### 提交任务\n\n```bash\nflow job submit -d fateflow/examples/lr/test_hetero_lr_job_dsl.json -c fateflow/examples/lr/test_hetero_lr_job_conf.json\n```\n\noutput：\n\n```json\n{\n    \"data\": {\n        \"board_url\": \"http://fateboard:8080/index.html#/dashboard?job_id=202111230933232084530&role=guest&party_id=9999\",\n        \"code\": 0,\n        \"dsl_path\": \"/data/projects/fate/fate_flow/jobs/202111230933232084530/job_dsl.json\",\n        \"job_id\": \"202111230933232084530\",\n        \"logs_directory\": \"/data/projects/fate/fate_flow/logs/202111230933232084530\",\n        \"message\": \"success\",\n        \"model_info\": {\n            \"model_id\": \"arbiter-10000#guest-9999#host-10000#model\",\n            \"model_version\": \"202111230933232084530\"\n        },\n        \"pipeline_dsl_path\": \"/data/projects/fate/fate_flow/jobs/202111230933232084530/pipeline_dsl.json\",\n        \"runtime_conf_on_party_path\": \"/data/projects/fate/fate_flow/jobs/202111230933232084530/guest/9999/job_runtime_on_party_conf.json\",\n        \"runtime_conf_path\": \"/data/projects/fate/fate_flow/jobs/202111230933232084530/job_runtime_conf.json\",\n        \"train_runtime_conf_path\": \"/data/projects/fate/fate_flow/jobs/202111230933232084530/train_runtime_conf.json\"\n    },\n    \"jobId\": \"202111230933232084530\",\n    \"retcode\": 0,\n    \"retmsg\": \"success\"\n}\n```\n\n##### 查看训练任务状态\n\n```bash\nflow task query -r guest -j 202111230933232084530 | grep -w f_status\n```\n\noutput:\n\n```bash\n            \"f_status\": \"success\",\n            \"f_status\": \"waiting\",\n            \"f_status\": \"running\",\n            \"f_status\": \"waiting\",\n            \"f_status\": \"waiting\",\n            \"f_status\": \"success\",\n            \"f_status\": \"success\",\n```\n\n等到所有的`waiting`状态变为`success`.\n\n##### 部署模型\n\n```bash\nflow model deploy --model-id arbiter-10000#guest-9999#host-10000#model --model-version 202111230933232084530\n```\n\n```json\n{\n    \"data\": {\n        \"arbiter\": {\n            \"10000\": 0\n        },\n        \"detail\": {\n            \"arbiter\": {\n                \"10000\": {\n                    \"retcode\": 0,\n                    \"retmsg\": \"deploy model of role arbiter 10000 success\"\n                }\n            },\n            \"guest\": {\n                \"9999\": {\n                    \"retcode\": 0,\n                    \"retmsg\": \"deploy model of role guest 9999 success\"\n                }\n            },\n            \"host\": {\n                \"10000\": {\n                    \"retcode\": 0,\n                    \"retmsg\": \"deploy model of role host 10000 success\"\n                }\n            }\n        },\n        \"guest\": {\n            \"9999\": 0\n        },\n        \"host\": {\n            \"10000\": 0\n        },\n        \"model_id\": \"arbiter-10000#guest-9999#host-10000#model\",\n        \"model_version\": \"202111230954255210490\"\n    },\n    \"retcode\": 0,\n    \"retmsg\": \"success\"\n}\n```\n\n*后面需要用到的`model_version`都是这一步得到的`\"model_version\": \"202111230954255210490\"`*\n\n##### 修改加载模型的配置\n\n```bash\ncat > fateflow/examples/model/publish_load_model.json <<EOF\n{\n  \"initiator\": {\n    \"party_id\": \"9999\",\n    \"role\": \"guest\"\n  },\n  \"role\": {\n    \"guest\": [\n      \"9999\"\n    ],\n    \"host\": [\n      \"10000\"\n    ],\n    \"arbiter\": [\n      \"10000\"\n    ]\n  },\n  \"job_parameters\": {\n    \"model_id\": \"arbiter-10000#guest-9999#host-10000#model\",\n    \"model_version\": \"202111230954255210490\"\n  }\n}\nEOF\n```\n\n##### 加载模型\n\n```bash\nflow model load -c fateflow/examples/model/publish_load_model.json\n```\n\noutput:\n\n```json\n{\n    \"data\": {\n        \"detail\": {\n            \"guest\": {\n                \"9999\": {\n                    \"retcode\": 0,\n                    \"retmsg\": \"success\"\n                }\n            },\n            \"host\": {\n                \"10000\": {\n                    \"retcode\": 0,\n                    \"retmsg\": \"success\"\n                }\n            }\n        },\n        \"guest\": {\n            \"9999\": 0\n        },\n        \"host\": {\n            \"10000\": 0\n        }\n    },\n    \"jobId\": \"202111240844337394000\",\n    \"retcode\": 0,\n    \"retmsg\": \"success\"\n}\n```\n\n##### 修改绑定模型的配置\n\n```bash\ncat > fateflow/examples/model/bind_model_service.json <<EOF\n{\n    \"service_id\": \"test\",\n    \"initiator\": {\n        \"party_id\": \"9999\",\n        \"role\": \"guest\"\n    },\n    \"role\": {\n        \"guest\": [\"9999\"],\n        \"host\": [\"10000\"],\n        \"arbiter\": [\"10000\"]\n    },\n    \"job_parameters\": {\n        \"work_mode\": 1,\n        \"model_id\": \"arbiter-10000#guest-9999#host-10000#model\",\n        \"model_version\": \"202111230954255210490\"\n    }\n}\nEOF\n```\n\n##### 绑定模型\n\n```bash\nflow model bind -c fateflow/examples/model/bind_model_service.json\n```\n\noutput:\n\n```json\n{\n    \"retcode\": 0,\n    \"retmsg\": \"service id is test\"\n}\n```\n\n##### 在线测试\n\n发送以下信息到\"GUEST\"方的推理服务\"{SERVING_SERVICE_IP}:8059/federation/v1/inference\"\n\n```bash\n$ curl -X POST -H \'Content-Type: application/json\' -i \'http://192.168.7.2:8059/federation/v1/inference\' --data \'{\n  \"head\": {\n    \"serviceId\": \"test\"\n  },\n  \"body\": {\n    \"featureData\": {\n        \"x0\": 1.88669,\n        \"x1\": -1.359293,\n        \"x2\": 2.303601,\n        \"x3\": 2.00137,\n        \"x4\": 1.307686\n    },\n    \"sendToRemoteFeatureData\": {\n        \"phone_num\": \"122222222\"\n    }\n  }\n}\'\n```\n\noutput:\n\n```json\n{\"retcode\":0,\"retmsg\":\"\",\"data\":{\"score\":0.018025086161221948,\"modelId\":\"guest#9999#arbiter-10000#guest-9999#host-10000#model\",\"modelVersion\":\"202111240318516571130\",\"timestamp\":1637743473990},\"flag\":0}\n```\n\n### 删除部署\n\n在部署机器上运行以下命令可以停止所有FATE集群：\n\n```bash\nbash ./docker_deploy.sh --delete all\n```\n\n如果想要彻底删除在运行机器上部署的FATE，可以分别登录节点，然后运行命令：\n\n```bash\ncd /data/projects/fate/confs-<id>/  # <id> 组织的id，本例中代表10000或者9999\ndocker-compose down\nrm -rf ../confs-<id>/               # 删除docker-compose部署文件\n```\n\n### 可能遇到的问题\n\n#### 采用docker hub下载镜像速度可能较慢\n\n解决办法：可以自己构建镜像，自己构建镜像参考[这里](https://github.com/FederatedAI/FATE/tree/master/docker-build)。\n\n#### 运行脚本`./docker_deploy.sh all`的时候提示需要输入密码\n\n解决办法：检查免密登陆是否正常。ps:直接输入对应主机的用户密码也可以继续运行。\n\n#### CPU指令集问题\n\n解决办法：查看[wiki](https://github.com/FederatedAI/KubeFATE/wiki/KubeFATE)页面的storage-service部分', NULL, NULL, 0, 56, 0, 1, NULL, 0, 1, '2023-04-15 10:59:58', '2024-01-19 17:18:33', NULL, 0);
INSERT INTO `article` VALUES (70, 1, 1, 3, NULL, '//qiniu.roginx.ink/articleCover/janx11680401100683241', '################', NULL, '\n1 学费\n```\npython = 3\nmath = 4\nenglish = 4\nphysical = 2\nmilitary_theory = 2\nphilosophy = 2\ncredits = (python + math + english + physical +military_theory + philosophy)\ntuition = eval(input())\nprint(f\'你本学期选修了{credits}个学分。\')\nprint(f\'你应缴纳的学费为{tuition*credits}元。\')\n# 第二关\npython = 3\nmath = 4\nenglish = 4\nphysical_education = 2\nmilitary_theory = 2\nphilosophy = 2\ntuition_per_credit = eval(input())\nliving_expenses = eval(input())\ntotal_credits = (python + math + english + physical_education +military_theory + philosophy)\ntotal_tuition = total_credits * tuition_per_credit\ntotal_cost = living_expenses*5 + total_tuition\nstudent_loan = total_cost * 0.6\nprint(f\'请输入每学分学费金额：请输入你每个月生活费：本学期你能够贷款{student_loan:.2f}元\')\n```\n2 四则运算\n```\nA = eval(input())\nB = eval(input())\nprint(\"{} + {} = {}\".format(A,B,A+B))\nprint(\"{} - {} = {}\".format(A,B,A-B))\nprint(\"{} * {} = {}\".format(A,B,A*B))\nprint(\"{} / {} = {}\".format(A,B,A/B))\n```\n3 幂运算\n```\na = eval(input())\nb = eval(input())\nm = eval(input())\nprint(pow(a,b))\nprint(pow(a,b,m))\n```\n4 叠片面积\n```\nR = eval(input())\nr = eval(input())\nn = eval(input())\npi = 3.14159\nS = n*(pi*R**2 - pi*r**2)\nprint(\"{:.2f}\".format(S))\n```\n5 三角形周长面积\n```\na = eval(input())\nb = eval(input())\nc = eval(input())\ns = (a+b+c)/2\narea = (s * (s-a) * (s-b) * (s-c)) ** (1/2)\nprint(\"周长={:.2f}\".format(s*2))\nprint(\"面积={:.2f}\".format(area))\n```\n6 利息计算\n```\nP =eval(input())\nN = eval(input())\ni = eval(input())\nF = (P*(i+1)**N)-P\nprint(\'利息={:.2f}\'.format(F))\n```\n7 助学贷款额度计算\n```\npython = 3\nmath = 4\nenglish = 4\nphysical = 2\nmilitary_theory = 2\nphilosophy = 2\ntuition_per_credit = eval(input())\nliving_expenses = eval(input())\ntotal_credits = (python + math + english + physical + military_theory + philosophy)\ntotal_tuition = total_credits * tuition_per_credit\ntotal_cost = living_expenses*5 + total_tuition\nstudent_loan = total_cost * 0.6\nprint(f\'本学期你能够贷款{student_loan:.2f}元\')\n```\n8 弓形面积\n```\n################### 1 \nimport math\nAB = float(input())  # 弦长度\nCD = float(input())  # 弓高度\n# 半弦长\nAD = AB/2\n# 半径\nOA = (AD**2 + CD**2)/(2*CD)\nprint(\'{:.2f}\'.format(OA))\n################### 2\nimport math\nAB = float(input())  # 弦长度\nCD = float(input())  # 弓高度\n# 半弦长\nAD = AB / 2\n# 半径\nOA = (AD ** 2 + CD ** 2) / (2 * CD)\n# 圆心角\nAOB = 2 * math.asin(AD / OA)\n# 弓形所在扇形的面积\nsector = AOB/(2*math.pi)*math.pi*(OA**2)\n# 三角形面积\ntriangle = (1/2)*(OA**2)*math.sin(AOB)\n# 弓形面积\narea_of_arch = sector - triangle\nprint(f\'{area_of_arch:.2f}\')\n```\n9 计算几何形状的表面积与体积\n```\n# 1  修改被调用函数\ndef square(length, width):\n    return \'长方形的面积为{:.2f}\'.format(length*width)\n# 2\ndef cube(length, width, height):\n    return \'长方体的表面积为{:.2f}, 体积为{:.2f}\'.format((length*width+width*height+height*length)*2,width*length*height)\n# 3\ndef circle(radius):\n    return \'圆形的面积为{:.2f}\'.format(math.pi*radius*radius)\n# 4\ndef sphere(r):\n   return \'球的表面积为{:.2f}, 体积为{:.2f}\'.format(4*math.pi*r**2,4/3*math.pi*r**3)\n# 5\ndef cylinder(r, height):\n   return \'圆柱体的表面积为{:.2f}, 体积为{:.2f}\'.format(height*2*math.pi*r+2*math.pi*r**2,height*math.pi*r**2)\n# 6\ndef cone(r, h):\n    return \'圆锥的表面积为{:.2f}, 体积为{:.2f}\'.format(pi*r*(r+math.sqrt(r*r+h*h)),1/3*pi*r*r*h)\n# 7\ndef tri_prism(s, h):\n    S = math.sqrt(3)/4 * pow(s, 2)\n    # 计算体积\n    V = S * h\n    return \'正三棱柱的表面积为{:.2f}, 体积为{:.2f}\'.format(2*(3**0.5/4*s*s)+3*s*h,V)\n```\n10\n```\na = float(input())\nb = float(input())\n#############End################\n\n#a和b之间进行四则运算并输出\n#############Begin################\nprint(f\'{a} + {b} = {a + b:.3f}\')\nprint(f\'{a} - {b} = {a - b:.3f}\')\nprint(f\'{a} * {b} = {a * b:.3f}\')\nprint(f\'{a} / {b} = {a / b:.3f}\')\n```\n11\n```\na = int(input(\'请输入一个整数：\'))    \nb = int(input(\'请再输入一个整数：\')) \nsign = input(\'请输入运算符号\')\n###################Begin##################################\n# eval()函数把字符串f\"{a}{sign}{b}\"转为计算表达式\n# 字符串里包含引号时，内部引号与边界应用不同的引号\n\nprint(\'{}{}{}={}\'.format(a,sign,b,eval(f\'{a}{sign}{b}\')))\n```\n12\n```\nimport random\nrandom.seed(0)\ndef calculator(n, maximum):\n    \"\"\"随机产生n道正整数四则运算的题目,用户输入计算结果，\n    判断输入正确与否,并统计正确率。题目保证减法不出现负数.\"\"\"\n    correct = 0\n    for i in range(n):  # 循环n次，每次产生一个新问题\n        b = random.randint(0, maximum)  # 随机产生一个maximum以内整数\n        a = random.randint(b, maximum)  # 随机产生一个b到maximum以内整数，避免减法出现负数\n        #################Begin##############################\n        print(f\'{a}+{b}=\', end=\'\')\n        result = float(input())\n        if result == eval(f\'{a}+{b}\'):\n            correct+=1;\n            print(\"恭喜你，回答正确\")\n        #################End##############################\n    print(f\'答对{correct}题，正确率为{correct / n * 100}%\')\n\nif __name__ == \'__main__\':\n    num = int(input(\'请输入出题数量：\'))\n    m = int(input(\'请输入参与计算的最大数字：\'))\n    calculator(num, m)\n```\n\n<iframe src=\"//player.bilibili.com/player.html?aid=269171874&bvid=BV1Fc411j7vR&cid=1071341106&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" height=\"500px\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n', NULL, NULL, 0, 458, 0, 0, '3612', 0, 1, '2023-04-19 10:42:08', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (71, 1, 1, 3, NULL, 'https://i.kinja-img.com/gawker-media/image/upload/s--L-tqKLNm--/c_fill,fl_progressive,g_center,h_900,q_80,w_1600/pwl9mwg0qu5vdagwstde.jpg', '# 脚本&大学 | 解析考试系统', NULL, '前排直链：\n油猴脚本：[Tampermonkey](https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd?hl=zh-CN){target=\"_blank\"} [直接下载](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/www/scripts/%E6%B2%B9%E7%8C%B4.crx){target=\"_blank\"}\n划词脚本：[魔改题海划词+ChatGPT](https://greasyfork.org/zh-CN/scripts/483735-%E4%B8%87%E8%83%BD-%E5%85%A8%E5%B9%B3%E5%8F%B0%E8%87%AA%E5%8A%A8%E7%AD%94%E9%A2%98%E8%84%9A%E6%9C%AC){target=\"_blank\"}\n自动搜题答题：[全平台自动答题脚本](https://www.userscript.zone/search?utm_source=tm.net&utm_medium=search&q=全平台自动答题脚本)\n自动学习课程：[OCS 网课助手 ](https://greasyfork.org/zh-CN/scripts/457151-ocs-网课助手)\n~~超星万能 签到：Github自行查找 (防止太多人不去上课了影响到我的操作❤)~~\n\n在我的学习生涯中，我曾经遇到过一些无聊且无用的考试科目，其中就包括易班通识课考试。虽然考试很简单，但是很多人都想拿到满绩点，而且我也想尽快完成考试，去做更有意义的事情。因此，我决定使用自动化脚本来解决考试问题，并成功地通过了考试。\n\n## 初步尝试：划词搜题脚本\n\n一开始，为了解决易班通识课考试的问题，我尝试使用划词搜题的脚本进行一道道答题。但是，该方法效率较低，并且容易出错。\n#### 删除监控后台\n```\ntaskkill /im studentmain.exe /f \n```\n\n#### 控制台允许选中代码：\n\n```\ndocument.οncοntextmenu=new Function(\'event.returnValue=true;\');\ndocument.onselectstart=new Function(\'event.returnValue=true;\');\ndocument.oncopy = new Function(\'event.returnValue=true;\');\n```\n\n## 研究易班考试流程\n\n随着考试单子的增多，我开始思考如何更好地解决这个问题。我花了几个小时研究了易班考试的流程，并发现了一些有趣的发现。\n\n我发现易班的请求中包含了答案，只不过加密并左移了正确答案。通过解析开始考试时服务器返回的含答案的题目json，我们可以获得正确答案，从而实现自动化选中。具体对应关系如下(舍弃对ABCD的执念，单纯使用数字表示选项)：\n\n#### 答案Map\n\n```javascript\nlet map = {\n    \"ulWbkFGQj92b51lIwIyW\":[\"0\"],//A\n    \"ulWbkFGQj92b51lIxIyW\":[\"1\"],//B\n    \"ulWbkFGQj92b51lIyIyW\":[\"2\"],//C\n    \"ulWbkFGQj92b51lIzIyW\":[\"3\"],//D\n    \"==gbp1GZhB0Yv9WedJCNiwiIzICLiIjIsISMiwiIwIyW\":[\"1\", \"2\", \"4\", \"3\", \"0\"],\n    \"==gbp1GZhB0Yv9WedJSNiwiI0ICLiMjIsISMiwiIwIyW\":[\"1\", \"3\", \"4\", \"5\", \"0\"],\n    \"ulWbkFGQj92b51lI0ICLiMjIsISMiwiIwIyW\":[\"1\", \"3\", \"4\", \"0\"],\n    \"ulWbkFGQj92b51lIzICLiIjIsISMiwiIwIyW\":[\"1\", \"2\", \"3\", \"0\"],\n    \"ulWbkFGQj92b51lI1ICLiMjIsIiMiwiIwIyW\":[\"2\",\"3\",\"4\",\"5\"],\n    \"=4WatRWYAN2bvlXXiMjIsIiMiwiIxIyW\":[\"1\", \"2\", \"3\"],\n    \"=4WatRWYAN2bvlXXiIjIsISMiwiIwIyW\":[\"2\", \"1\", \"0\"],\n    \"=4WatRWYAN2bvlXXiMjIsISMiwiIwIyW\":[\"0\", \"3\", \"1\"],\n    \"=4WatRWYAN2bvlXXiMjIsIiMiwiIwIyW\":[\"2\", \"3\", \"0\"],\n    \"==gbp1GZhB0Yv9WedJyMiwiIyIyW\":[\"2\",\"3\"],\n    \"==gbp1GZhB0Yv9WedJiMiwiIxIyW\":[\"1\",\"2\"],\n    \"==gbp1GZhB0Yv9WedJSMiwiIwIyW\":[\"1\",\"0\"],\n    \"==gbp1GZhB0Yv9WedJyMiwiIxIyW\":[\"1\",\"3\"],\n    \"==gbp1GZhB0Yv9WedJiMiwiIwIyW\":[\"2\",\"0\"],\n    \"==gbp1GZhB0Yv9WedJyMiwiIwIyW\":[\"3\",\"0\"],\n}\n```\n\n#### 自动化选中答案\n\n为了实现自动化选中答案，我对之前使用的[脚本](https://www.userscript.zone/search?utm_source=tm.net&utm_medium=search&q=全平台自动答题脚本)进行了改进，加入了解析请求的功能。具体操作是：\n\n1. 发送开始考试请求，获取含答案的题目json。\n2. 解析json，获取正确答案。\n3. 根据正确答案自动化选中答案。\n\n通过这种方法，我可以快速、准确地完成易班通识课考试，获得了满绩点的好成绩。同时，这也让我在个人时间的充分节省和利用方面受益匪浅。以下是总体代码，首先通过审查元素获取返回的json请求，一键填入弹出框后快速答题，直接选中答案（一秒解决，效率科技般提高）。\n\n```javascript\nlet map = { //加密\n    \"ulWbkFGQj92b51lIwIyW\":[\"0\"],\n    \"ulWbkFGQj92b51lIxIyW\":[\"1\"],\n    \"ulWbkFGQj92b51lIyIyW\":[\"2\"],\n    \"ulWbkFGQj92b51lIzIyW\":[\"3\"],\n    \"==gbp1GZhB0Yv9WedJCNiwiIzICLiIjIsISMiwiIwIyW\":[\"1\", \"2\", \"4\", \"3\", \"0\"],\n    \"==gbp1GZhB0Yv9WedJSNiwiI0ICLiMjIsISMiwiIwIyW\":[\"1\", \"3\", \"4\", \"5\", \"0\"],\n    \"ulWbkFGQj92b51lI0ICLiMjIsISMiwiIwIyW\":[\"1\", \"3\", \"4\", \"0\"],\n    \"ulWbkFGQj92b51lIzICLiIjIsISMiwiIwIyW\":[\"1\", \"2\", \"3\", \"0\"],\n    \"ulWbkFGQj92b51lI1ICLiMjIsIiMiwiIwIyW\":[\"2\",\"3\",\"4\",\"5\"],\n    \"=4WatRWYAN2bvlXXiMjIsIiMiwiIxIyW\":[\"1\", \"2\", \"3\"],\n    \"=4WatRWYAN2bvlXXiIjIsISMiwiIwIyW\":[\"2\", \"1\", \"0\"],\n    \"=4WatRWYAN2bvlXXiMjIsISMiwiIwIyW\":[\"0\", \"3\", \"1\"],\n    \"=4WatRWYAN2bvlXXiMjIsIiMiwiIwIyW\":[\"2\", \"3\", \"0\"],\n    \"==gbp1GZhB0Yv9WedJyMiwiIyIyW\":[\"2\",\"3\"],\n    \"==gbp1GZhB0Yv9WedJiMiwiIxIyW\":[\"1\",\"2\"],\n    \"==gbp1GZhB0Yv9WedJSMiwiIwIyW\":[\"1\",\"0\"],\n    \"==gbp1GZhB0Yv9WedJyMiwiIxIyW\":[\"1\",\"3\"],\n    \"==gbp1GZhB0Yv9WedJiMiwiIwIyW\":[\"2\",\"0\"],\n    \"==gbp1GZhB0Yv9WedJyMiwiIwIyW\":[\"3\",\"0\"],\n}\nlet start = false;\nlet fillAnswer = function(){\n    let strs = undefined;\n    strs = prompt(\"请输入JSON：\"); //获得答案\n    if(strs&&!start){\n        start = true;\n        let str = JSON.parse(strs);\n        [...str[0].subjects].forEach((item)=>{\n            let options = map[item.answer];\n            console.log(options);\n            options.forEach((option)=>{\n                $(\".mb ul li\").eq(option==0?option=3:option-1).click();\n            })\n            $(\'.round:contains(\"下一题\")\').click();\n        });\n        [...str[1].subjects].forEach((item)=>{\n            let options = map[item.answer];\n            console.log(options);\n            options.forEach((option)=>{\n                if(option==\"1\"){$(\".mb ul li\").eq(0).click();}\n                if(option==\"2\"){$(\".mb ul li\").eq(1).click();}\n                if(option==\"3\"){$(\".mb ul li\").eq(2).click();}\n                if(option==\"0\"){$(\".mb ul li\").eq(3).click();}\n                if(option==\"4\"){$(\".mb ul li\").eq(4).click();}\n                if(option==\"5\"){$(\".mb ul li\").eq(5).click();}\n            })\n            $(\'.round:contains(\"下一题\")\').click();\n        });\n        [...str[2].subjects].forEach((item)=>{\n            let options = map[item.answer];\n            console.log(options);\n            options.forEach((option)=>{\n                $(\".mb ul li\").eq(option).click();\n            })\n            $(\'.round:contains(\"下一题\")\').click();\n        });\n    } else {\n        setTimeout(fillAnswer,2000);\n    }\n\n}\n```\n\n（这个代码还需改进的点：\n\n1.自动获取网络请求json内容\n\n2.破解对应关系的加密方式，尽可能找到通解\n\n## 建议\n\n虽然自动化考试可以帮助我们快速获得好成绩，但这种做法违反了考试的公平性原则。因此，在使用自动化脚本前，我们应该仔细考虑自己的行为是否违反了道德规范。同时，我们也应该认真学习并掌握考试所需要的知识，这样才能在未来的职业生涯中取得更好的成就。\n\n## 总结\n\n本文介绍了如何通过解析易班考试请求获得答案并自动化选中的方法。自动化考试虽然可以帮助我们节省时间和提高成绩，但我们也应该遵守道德规范，勤奋学习，真正掌握知识，才能在未来的职业生涯中取得更好的成就。\n\n## 后续\n\n我后来也有在学习通的考试，发现学习通考试系统十分不同，如\n\n1. 选中一选项上传一次修改，这样就无法忽略请求间隔了，时间上就没有优势，还很吃网络环境；\n\n2. 获取题目的返回中没有包含答案\n\n3. 阻塞审查元素（可通过控制台 `Function.prototype.constructor = function(){}` 解决 ）\n\n4. 如下\n\n   ```\n   //控制台运行\n   let map = {\"886396376\":\"C\",\"886396377\":\"C\"} //答案对应 只能靠提交后答案获取\n   //获取答案\n   document.querySelectorAll(\".questionLi \").forEach((item)=>{\n   	map_[$(item).attr(\"data\")] = $(item).find(\".colorGreen\").text()\n   })\n   //开始选择\n   let num = 0;\n   Object.keys(map).forEach((item)=>{\n       let str = map[item];\n       for (let i in str) {\n           let ans = str[i];\n           if(ans.length==1){\n               let element = $(document.querySelector(`div[data=\'${item}\']`)).find(\'span:contains(\"\'+ans+\'\")\').not(\".check_answer\")[0];\n               if(element){\n                   setTimeout(() => {\n                       element.click();\n                   },850*num) //选择间隔\n                   num++\n               }\n           }\n       }\n   })\n   ```\n\n该改进脚本可以为我获取些许利益，暂不全部分享。如若有需求可联系（联系方式在[关于](/about)）：janxland@qq.com', '隐藏内容，密码自寻', NULL, 0, 257, 0, 1, '508', 1, 1, '2023-04-22 10:39:44', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (72, 1, 1, 15, NULL, '//alist.roginx.ink/d/OneAlbum/%E9%B9%BF/624f04d7b57fc1.jpeg', '使用Keras-RL编写DQN智能体玩推车立杆（CartPole）游戏', NULL, '## 前言\n\n本项目使用 Keras-RL 实现了 DQN 算法来解决 CartPole 问题。\n[CartPole](https://www.gymlibrary.dev/environments/classic_control/cart_pole/#cart-pole) 问题是 OpenAI Gym 中的一个经典问题，任务是控制一个杆子在一个小车上平衡，避免杆子倾倒，直到时间结束。本项目使用 Keras-RL 中的 DQNAgent 类来实现 DQN 算法，并在 CartPole 环境中进行训练和测试。\n![推车立杆游戏](https://www.gymlibrary.dev/_images/cart_pole.gif)\n## 安装软件包\n\n在使用 Keras-RL 实现 DQN 算法之前，需要安装以下 Python 库：tensorflow、keras、keras-rl、PyOpenGL、pyglet 和 gym。可以使用以下命令在 Jupyter Notebook 中安装这些库：\n\n```shell\n!pip install tensorflow\n!pip install keras\n!pip install keras-rl\n!pip install PyOpenGL\n!pip install pyglet==1.5.11\n!pip install gym\n```\n\n## 实现\n\n首先，我们需要导入所需的库，并创建 CartPole 环境：\n\n```python\nimport gym\nimport numpy as np\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Activation, Flatten\nfrom keras.optimizers import Adam\nfrom rl.agents.dqn import DQNAgent\nfrom rl.policy import EpsGreedyQPolicy\nfrom rl.memory import SequentialMemory\n\nENV_NAME = \'CartPole-v0\'\nenv = gym.make(ENV_NAME)\nnb_actions = env.action_space.n #动作\nstatus = env.observation_space.shape #状态\n```\n\n然后，我们定义神经网络模型：\n\n```python\ndef build_model(nb_actions, status):\n    model = Sequential()\n    model.add(Flatten(input_shape=(1,) + status))\n    model.add(Dense(16, activation=\'relu\'))\n    model.add(Dense(16, activation=\'relu\'))\n    model.add(Dense(16, activation=\'relu\'))\n    model.add(Dense(nb_actions, activation=\'linear\'))\n    print(model.summary())\n    return model\n```\n\n接下来，我们定义 DQN 算法的训练参数：\n\n```python\nmemory = SequentialMemory(limit=50000, window_length=1)\n#贪心策略,我们还可使用BoltzmannQPolicy()\npolicy = EpsGreedyQPolicy()\ndqn = DQNAgent(model=model, nb_actions=nb_actions, memory=memory, nb_steps_warmup=10,\n               target_model_update=1e-2, policy=policy)\ndqn.compile(Adam(lr=1e-3), metrics=[\'mae\'])\n```\n\n最后，我们训练 DQN 算法并保存模型：\n\n```\ndqn.fit(env, nb_steps=5000, visualize=True, verbose=1)\ndqn.save_weights(\'dqn_{}_weights.h5f\'.format(ENV_NAME), overwrite=True)\n```\n\n## 测试\n\n完成训练后，我们可以测试 DQN 算法的性能。可以使用以下代码来测试算法：\n\n```python\ndqn.test(env, nb_episodes=5, visualize=True)\n\n# 输出结果\n# Testing for 5 episodes ...\n# Episode 1: reward: 200.000, steps: 200\n# Episode 2: reward: 200.000, steps: 200\n# Episode 3: reward: 200.000, steps: 200\n# Episode 4: reward: 200.000, steps: 200\n# Episode 5: reward: 200.000, steps: 200\n```\n\n这将在 CartPole 环境中运行 5 个测试游戏，并可视化每个游戏的结果。\n\n## 结论\n\n本项目使用 Keras-RL 实现了 DQN 算法来解决 CartPole 问题。我们首先安装了必要的 Python 库，然后定义了神经网络模型和 DQN 算法的训练参数。最后，我们训练了 DQN 算法，并测试了其在 CartPole 环境中的性能。\n\n#### 所有代码如下\n\n```python\nimport gym\nimport numpy as np\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Activation, Flatten\nfrom keras.optimizers import Adam\nfrom rl.agents.dqn import DQNAgent\nfrom rl.policy import EpsGreedyQPolicy\nfrom rl.memory import SequentialMemory\nimport os\n\n\ndef build_model(nb_actions, status):\n    model = Sequential()\n    model.add(Flatten(input_shape=(1,) + status))\n    model.add(Dense(16, activation=\'relu\'))\n    model.add(Dense(16, activation=\'relu\'))\n    model.add(Dense(16, activation=\'relu\'))\n    model.add(Dense(nb_actions, activation=\'linear\'))\n    print(model.summary())\n    return model\n\n\ndef build_agent(model, nb_actions):\n    memory = SequentialMemory(limit=50000, window_length=1)\n    policy = EpsGreedyQPolicy()\n    dqn = DQNAgent(model=model, nb_actions=nb_actions, memory=memory, nb_steps_warmup=10,\n                   target_model_update=1e-2, policy=policy)\n    dqn.compile(Adam(lr=1e-3), metrics=[\'mae\'])\n    return dqn\n\n\nENV_NAME = \'CartPole-v0\'\nenv = gym.make(ENV_NAME\nnb_actions = env.action_space.n\nstatus = env.observation_space.shape\n# Find model\nif os.path.exists(\'dqn_{}_weights.h5f\'.format(ENV_NAME)):\n    model = build_model(nb_actions, input_shape)\n    agent = build_agent(model, nb_actions)\n    agent.load_weights(\'dqn_{}_weights.h5f\'.format(ENV_NAME))\nelse:\n    model = build_model(nb_actions, status)\n    agent = build_agent(model, nb_actions)\n    # Train agent and Save model\n    agent.fit(env, nb_steps=5000, visualize=True, verbose=1)\n    agent.save_weights(\'dqn_{}_weights.h5f\'.format(ENV_NAME), overwrite=True)\n\n# Test the agent\nagent.test(env, nb_episodes=5, visualize=True)\n```\n\n', NULL, NULL, 0, 63, 0, 1, NULL, 0, 1, '2023-05-03 00:05:54', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (73, 1, 1, 5, NULL, 'https://m_platform.gbim.vip/sys-assets/02-%E6%99%BA%E6%85%A7%E6%A5%BC%E5%AE%87.3fe8a59b.f27be210.jpg', '数字孪生 | 数据可视化平台及未来趋势展望', NULL, '## 前言\n博主目前正在做智慧园区的可视化平台，暂时不更新文章。\n## 数字孪生技术及Vue+Echarts\n\n数字孪生技术是一种能够在数字空间中对物理实体或系统进行实时仿真和优化的技术，它可以帮助企业或组织提高效率、降低成本、增强安全性和可靠性等方面的表现。而在数字孪生技术的实现过程中，建模是一个关键的环节。\n\n目前，用于数字孪生技术构建的前端技术栈较为丰富，Vue+Echarts也是其中之一。Vue作为主流的前端框架之一，具有组件化、轻量化、易于上手的优点，而Echarts则是一款功能强大的数据可视化库，可以帮助开发者实现丰富的数据可视化效果。但是，Vue+Echarts在数字孪生技术的建模方面存在一定的局限性，无法对真实环境进行高精度的建模和渲染。\n\n![智慧港口](https://m_platform.gbim.vip/sys-assets/01-%E6%99%BA%E6%85%A7%E6%B8%AF%E5%8F%A3.62c0bc3d.facd56fe.jpg)\n\n## 介绍目前主流的数字孪生平台\n\n目前，主流的数字孪生平台包括Siemens Digital Twin等。这些平台具有多样化的建模和渲染技术，能够对真实环境进行高精度的建模和渲染，为数字孪生技术的研究和应用提供了有力的支持。\n\n![智慧城市](https://m_platform.gbim.vip/sys-assets/02-%E6%99%BA%E6%85%A7%E6%A5%BC%E5%AE%87.3fe8a59b.f27be210.jpg)\n\n## 利用太极开发者平台实现数字孪生\n\n而在这些数字孪生平台中，太极开发者平台提供了一种新颖的数字孪生解决方案。该平台利用Vue+Echarts作为前端技术栈，自研3DT技术为后端做websocket通信将渲染内容发送至前端，从而实现了高精度的数字孪生建模和渲染。太极开发者平台提供了丰富的工具和API，使得开发者可以快速地开发数字孪生应用，提高开发效率和模拟效果。[太极开发者平台](https://www.gbim.vip/)\n\n​	在对前端展示Vue开发过程中，我们经常需要使用不同版本的 Node.js，而不同的 Vue.js 版本需要不同的 Node.js 版本来支持。如果我们只安装一个 Node.js 版本，可能会导致在不同的 Vue.js 项目中出现兼容性问题。因此，为了方便开发者在同一台机器上管理和切换不同版本的 Node.js，NVM（Node Version Manager）应运而生。本篇文章将为您介绍如何安装和使用 NVM。项目地址：[NVM-Windows](https://github.com/coreybutler/nvm-windows)\n\n```\n# 这个数字孪生项目node 14版本可用\nnvm install 14\n# 注意！执行命令前关闭安全卫士拦截\nnvm use 14\n```\n\n#### Echarts 及在线工具推荐\n\nEcharts 是一款基于 JavaScript 的开源可视化库，由百度开发。它提供了丰富的图表类型、交互式特性、动画效果和实用工具，能够帮助开发者快速地创建各种复杂的数据可视化图表。Echarts 的优点在于其灵活性和易用性，同时支持多种数据格式，包括 JSON、CSV、XML 等。\n\n除了 Echarts，还有一些在线工具可以帮助开发者更方便地进行图表制作。以下是几个推荐的在线工具：\n\n1. Datawrapper：Datawrapper 是一款专门用于创建交互式图表的在线工具，它支持多种数据格式，如 CSV、Excel 等，同时提供了丰富的图表类型和定制选项。用户可以通过简单的拖拽和操作来创建自己所需的图表。\n2. ChartBlocks：ChartBlocks 是一款简单易用的在线图表制作工具，支持多种图表类型和数据源，用户可以通过拖拽和自定义选项来创建自己所需的图表。\n3. Google Charts：Google Charts 是由谷歌开发的一款免费的在线图表制作工具，支持多种图表类型和数据格式，用户可以通过简单的 API 调用来创建自己所需的图表。\n\n## 总结\n### 展望\n待完成\n\n太极开发者平台的数字孪生技术，利用Vue+Echarts作为前端技术栈，自研3DT技术为后端做websocket通信将渲染内容发送至前端。通过太极开发者平台，我成功地实现了数字孪生技术的建模和渲染，使得数字孪生应用在真实环境中具备了更高的精度和可靠性，同时也加速了数字孪生应用的开发过程。\n<p class=\"video-container\">\n<iframe src=\"https://jy.we-vip.com:2053/?url=https://taichiresource.gbim.vip/dtsweekly/weeklyspace/dataprojectpath/02视频/26智慧重庆/26智慧重庆.mp4\" class=\"iframeStyle\" id=\"myiframe\" allowfullscreen=\"true\"></iframe> </p>\n\n', NULL, NULL, 0, 112, 0, 1, NULL, 1, 1, '2023-05-03 21:39:26', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (74, 1, 1, 3, NULL, 'https://i.kinja-img.com/gawker-media/image/upload/s--L-tqKLNm--/c_fill,fl_progressive,g_center,h_900,q_80,w_1600/pwl9mwg0qu5vdagwstde.jpg', 'Python作业 | 待删', NULL, '\n<div class=\"mceTmpl\" style=\"width: 100%; text-align: center;\">\n<div class=\"mceTmpl\"><input id=\"hideCheckInput\" class=\"hideCheckInput\" type=\"checkbox\" />\n<div class=\"hideContext\">\n<div><iframe src=\"/v/JMusic/#/?playlist=486899256\" name=\"MUSIC\" width=\"90%\" height=\"300px\" frameborder=\"no\" marginwidth=\"0\" marginheight=\"0\" data-mce-fragment=\"1\"></iframe></div>\n</div>\n<label class=\"check_label\" for=\"hideCheckInput\"></label></div>\n</div>\n\n中国古代数学问题——物不知数\n```\nn = int(input())\nres = list()\nfor i in range(n+1):\n    if i%3 == 2 and i%5 == 3 and i%7 == 2:\n        res.append(i)\nif res:\n    print(*res, sep=\"\\n\")\nelse:\n    print(\"No solution!\")\n```\n中国古代数学问题——鸡兔同笼\n```\na, b = input().split()\ndef print_num(a, b):\n    if a < 0 or b < 0:\n        print(\"Data Error!\")\n        return\n    rabbits = b/2 - a\n    chi = a - rabbits\n    if chi - int(chi) != 0 or chi < 0 or rabbits < 0:\n        print(\"Data Error!\")\n        return\n    print(f\"有{int(chi)}只鸡，{int(rabbits)}只兔\")\n    return\nprint_num(int(a),int(b))\n```\n个税计算器\n```\ntable = [\n    [0,3000,3,0], \n    [3000,12000,10,210], \n    [12000,25000,20,1410], \n    [25000,35000,25,2660], \n    [35000,55000,30,4410], \n    [55000,80000,35,7160], \n    [80000,float(\'inf\'),45,15160]\n]\ntax = 0\nincome = float(input())\nfor level in table:\n    o = income-5000\n    if  level[0] < o < level[1]: \n        tax = o * level[2] / 100 - level[3] \n        break \nif income < 0: \n    print(\'error\')\nelse: \n    if(0<=income<=5000):\n        tax = 0\n    print(\"应缴税款{:.2f}元，实发工资{:.2f}元。\".format(max(tax, 0), max(income-tax, 0)))\n```\n身高测算\n```\nfather = int(input())\nmother = int(input())\nsex = input()\nif sex == \"男\":\n    height = int((father + mother) * 1.08 / 2)\n    print(height)\nelif sex == \"女\":\n    height = int((father * 0.923 + mother) / 2)\n    print(height)\nelse:\n    print(\"无对应公式\")\n```\n判断闰年 | 今年多少天\n```\nyear = int(input())\nif year % 4 == 0 and year % 100 != 0 or year % 400 == 0:\n    print(\"True\") # print(366)\nelse:\n    print(\"False\") # print(365)\n```\n是否为直角三角形 | 判断三角形，计算面积\n```\n#### 是否为直角三角形\na = float(input())\nb = float(input())\nc = float(input())\nif a + b > c and a + c > b and b + c > a:\n    if a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2 or a ** 2 + c ** 2 == b ** 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")\n#### 判断三角形，计算面积\nimport math\na = float(input())\nb = float(input())\nc = float(input())\n\nif a + b > c and a + c > b and b + c > a:\n    p = (a + b + c) / 2\n    area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    print(\"YES\")\n    print(\"{:.2f}\".format(area))\nelse:\n    print(\"NO\")\n```\n百钱买百鸡A\n```\nfor large in range(1, 20):\n    for big in range(1,33):\n        for small in range(3, 300, 3):\n            if large * 5 + big * 3 + int(small / 3) == 100 and large + big + small == 100:\n                print(\'{0} {1} {2}\'.format(large, big, small))\n```\n一元二次方程求根\n```\nimport math\ndef solve_quadratic_equation(a, b, c):\n    delta = b**2 - 4*a*c\n    if delta < 0: \n        print(\"该方程无实数解\")\n    elif delta == 0: \n        x = -b / (2*a)\n        print(\"%.2f\" % x)\n    else: \n        x1 = (-b + math.sqrt(delta)) / (2*a)\n        x2 = (-b - math.sqrt(delta)) / (2*a)\n        print(\"%.2f %.2f\" % (max(x1,x2), min(x1,x2)))\n\na = float(input())\nb = float(input())\nc = float(input())\nif a == 0:\n    if b == 0:\n        if c == 0:\n            print(\"Data error!\")\n        else:\n            print(\"该方程无实数解\")\n    else:\n        x = -c / b\n        print(\"%.2f\" % x)\nelse:\n    solve_quadratic_equation(a, b, c)\n```\n分段函数A、B\n```\n#### A\nx = int(input())\nif (-10 <= x < 0):\n    print(2*x**3 + 4*x**2 + 3)\nelif (0 <= x < 6):\n    print(x + 14)\nelif (6 <= x <= 10):\n    print(6*x)\nelse:\n    print(\"ERROR\")\n#### B\nimport math\nx = int(input())\nif (-6 <= x < 0):\n    print(math.abs(x)+5)\nelif (0 <= x < 3):\n    print(math.factorial(x))\nelif (3 <= x <= 6):\n    print(x**(x-2))\nelse:\n    print(0)\n```\n输出N以内素数\n```\ndef is_prime(n):\n    if n<=1:\n        return False\n    if n==2:\n        return True\n    if n%2==0:\n        return False\n    for i in range(3,int(n**0.5)+1,2):\n        if n%i==0:\n            return False\n    return True\ndef output_prime(number):\n    for i in range(2,number+1):\n        if is_prime(i):\n            print(i,end=\' \')\npositive_int = int(input())  \noutput_prime(positive_int)     \n\n```\n登陆A、C\n```\n######## A\nusername = input()\npassword = input()\nif username == \'admin\' and password == \'123456\':\n    print(\"登录成功\")\nelse:\n    print(\"登录失败\")\n######## C\nfor i in range(3):\n    username = input()\n    password = input()\n    if username in [\"admin\", \"administrator\"] and password == \"123456\":\n        print(\"登录成功\")\n        break\n    else:\n        print(\"登录失败\")\nelse:\n    print(\"三次用户名或密码输入错误，登录失败\")\n\n```\n计算几何体面积与体积\n```\nimport math\ndef type_judge(geom_type):\n    if geom_type == \'长方形\':\n        length, width = map(float, input().split())\n        return square(length, width)\n    elif geom_type == \'长方体\':\n        length, width, height = map(float, input().split())\n        return cube(length, width, height)\n    elif geom_type == \'圆形\':\n        radius = float(input())\n        return circle(radius)\n    elif geom_type == \'球\':\n        radius = float(input())\n        return sphere(radius)\n    elif geom_type == \'圆柱体\':\n        radius, height = map(float, input().split())\n        return cylinder(radius, height)\n    elif geom_type == \'圆锥\':\n        radius, height = map(float, input().split())\n        return cone(radius, height)\n    elif geom_type == \'正三棱柱\':\n        side, height = map(float, input().split())\n        return tri_prism(side, height)\n    else:\n        return f\'未找到{geom_type}计算方法\'\n\ndef square(length, width):\n    area_of_square = length * width\n    return f\'长方形的面积为{area_of_square:.2f}\'\n \ndef cube(length, width, height):\n    area_of_cube = length * width * 2 + width * height * 2 + length * height * 2\n    volume_of_cube = length * width * height\n    return f\'长方体的表面积为{area_of_cube:.2f}, 体积为{volume_of_cube:.2f}\'\n \ndef circle(radius):\n    area_of_circle = math.pi * math.pow(radius, 2)\n    return f\'圆形的面积为{area_of_circle:.2f}\'\n \ndef sphere(radius):\n    area_of_sphere = 4*math.pi*math.pow(radius, 2)\n    volume_of_sphere = math.pi*math.pow(radius, 3)*4/3\n    return f\'球的表面积为{area_of_sphere:.2f}, 体积为{volume_of_sphere:.2f}\'\n \ndef cylinder(radius, height):\n    area_of_cylinder = 2*math.pi*radius*(radius+height)\n    volume_of_cylinder = math.pi*radius*radius*height\n    return f\'圆柱体的表面积为{area_of_cylinder:.2f}, 体积为{volume_of_cylinder:.2f}\'\n\ndef cone(radius, height):\n    area_of_cone = math.pi*radius * \\\n        (radius+math.sqrt(math.pow(radius, 2)+math.pow(height, 2)))\n    volume_of_cone = math.pi*math.pow(radius, 2)*height/3\n    return f\'圆锥的表面积为{area_of_cone:.2f}, 体积为{volume_of_cone:.2f}\'\n \ndef tri_prism(side, height):\n    area_of_tri_prism = math.sqrt(3)*math.pow(side, 2)/2+3*side*height\n    volume_of_tri_prism = math.sqrt(3)*math.pow(side, 2)*height/4\n    return f\'正三棱柱的表面积为{area_of_tri_prism:.2f}, 体积为{volume_of_tri_prism:.2f}\'\n\nif __name__ == \'__main__\':\n    type_of_geometry = input()\n    geometry = type_judge(type_of_geometry)\n    print(geometry)\n```\n素数问题\n```\n### 1\ndef is_prime(n): \n    if n<2:\n        return False\n    k = int(n ** 0.5)\n    for i in range(2,k+1):\n        if n % i == 0:\n            return False\n    else:\n        return True\n\n### 2\ndef output_prime(number):\n    for i in range(number + 1):\n        if is_prime(i): \n            print(i, end=\' \') \n### 3\ndef plalindrome_prime(number):\n    for i in range(number):\n        if str(i)==str(i)[::-1] and is_prime(i):\n            print(i,end=\' \')\n### 4\ndef reverse_prime(number):\n    for i in range(number):\n        if str(i)!=str(i)[::-1] and is_prime(i) and is_prime(int(str(i)[::-1])):\n            print(i,end=\' \')\n### 5\ndef goldbach_conjecture(num):\n    if num %2 ==0 and num >= 4:\n        for i in range(num // 2+1):\n            if is_prime(i) and is_prime(num - i):\n                print(f\"{num}={i}+{num-i}\")\n    else:\n        print(\'Data error!\')\n```\n自定义数学函数\n```\n全程import math 解决\n```\n汽车迷\n```\ndef Car(year, model, brand=\"宝马\"):\n    return f\"这是一辆{year}年生产，型号是{model}的{brand}牌汽车。\"\nls = input().split()\nprint(Car(*ls))\n```', NULL, NULL, 0, 712, 0, 0, '3612', 0, 1, '2023-05-06 10:29:45', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (75, 1, 1, 15, NULL, 'https://images.pexels.com/photos/247819/pexels-photo-247819.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1', '预定 | 三层联邦学习和DQN的结合', NULL, '联邦学习是一种分布式机器学习的方法，它允许多个边缘端设备在保护数据隐私的同时，协同训练一个共享的模型。在联邦学习中，一个重要的问题是如何选择每一轮参与训练的边缘端设备，以提高模型的性能和效率。本文介绍了一种基于KerasRL DQN的服务端选择策略，它利用强化学习来动态地根据边缘端设备的数据分布、计算能力和通信状况，选择最优的设备子集进行模型更新和聚合。\n\nKerasRL是一个基于Keras的深度强化学习库，它提供了多种常用的强化学习算法，如DQN、DDPG、A2C等。DQN是一种基于值函数的强化学习算法，它使用一个深度神经网络来近似Q函数，即状态-动作值函数。DQN通过经验回放和目标网络来解决深度神经网络训练的不稳定性和偏差问题。\n\n我们假设服务端有一个全局的Q网络，它输入一个状态s，输出每个边缘端设备的Q值。状态s包括每个边缘端设备的数据分布、计算能力和通信状况等特征。服务端根据Q网络的输出，选择一个或多个边缘端设备作为动作a，然后向这些设备发送当前的全局模型参数w，并等待它们返回本地更新后的模型参数w\'。服务端根据收到的w\'，计算出下一个状态s\'，并根据某种评价指标（如验证集准确率、通信轮数等），给出一个奖励r。服务端将(s, a, r, s\')存入一个经验回放池中，并从中随机采样一批数据进行Q网络的训练。训练时，使用一个目标网络来计算目标Q值，以减少目标变化的频率。目标网络定期地从Q网络复制参数，并固定不变。\n\n以下是基于KerasRL DQN的服务端选择策略的代码过程：\n```\nimport numpy as np\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.optimizers import Adam\nfrom rl.agents.dqn import DQNAgent\nfrom rl.policy import EpsGreedyQPolicy\nfrom rl.memory import SequentialMemory\n\n# 定义状态空间和动作空间的大小\nstate_size = 10 # 假设每个边缘端设备有10个特征\naction_size = 5 # 假设有5个边缘端设备可供选择\n\n# 定义Q网络模型\nmodel = Sequential()\nmodel.add(Dense(32, input_shape=(state_size,), activation=\'relu\'))\nmodel.add(Dense(32, activation=\'relu\'))\nmodel.add(Dense(action_size, activation=\'linear\'))\nmodel.compile(loss=\'mse\', optimizer=Adam(lr=0.001))\nprint(model.summary())\n\n# 定义DQN智能体\nmemory = SequentialMemory(limit=10000, window_length=1) # 经验回放池\npolicy = EpsGreedyQPolicy(eps=0.1) # 探索-利用策略\ndqn = DQNAgent(model=model, nb_actions=action_size, memory=memory, nb_steps_warmup=100,\ntarget_model_update=1e-2, policy=policy) # DQN智能体\ndqn.compile(Adam(lr=0.001), metrics=[\'mae\'])\n\n# 定义环境类\n```', NULL, NULL, 0, 86, 0, 1, NULL, 0, 1, '2023-05-07 23:12:52', '2024-01-19 17:18:33', NULL, 0);
INSERT INTO `article` VALUES (76, 1, 1, 15, NULL, 'https://s2.51cto.com/images/blog/202108/25/beb466985b08cec10dd69d8e99709a78.jpeg', 'sklearn库中常见的回归、聚类、分类算法表格', NULL, '以下是常见的sklearn回归算法的信息：\n\n| 算法名称 | 调用方法                                     | 重要参数                                                                                                | 使用场景                                           | 方法介绍                                                                                                                                                                                                                                                                                                                                                                                                       |\n|-----|-------------------------------------------|-----------------------------------------------------------------------------------------------------|-----------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Linear Regression（线性回归） | `from sklearn.linear_model import LinearRegression` | - `fit_intercept`：是否拟合截距<br>- `normalize`：是否对数据进行归一化处理<br>- `copy_X`：是否复制输入数据   | 预测连续数值的回归问题                                    | 线性回归通过拟合数据的线性关系来预测连续数值的输出变量。它假设因变量与自变量存在线性关系，并通过计算最佳拟合线来预测新样本的输出值。                                                                                                                                                                                                                                                                                              |\n| Decision Tree Regression（决策树回归） | `from sklearn.tree import DecisionTreeRegressor`     | - `criterion`：计算节点最优划分的准则<br>- `max_depth`：树的最大深度<br>- `min_samples_split`：进行划分所需的最小样本数 | 预测连续数值的回归问题                                    | 决策树回归通过对数据的划分，根据特征的不同属性预测连续数值的输出变量。它根据特征值的结构进行预测，以创建一个树的结构，通过从树的根开始对特征进行分支判断，最终到达叶子节点进行预测。                                                                                                                                                                                                                           |\n| Random Forest Regression（随机森林回归）  | `from sklearn.ensemble import RandomForestRegressor` | - `n_estimators`：决策树的数量<br>- `criterion`：计算节点最优划分的准则<br>- `max_depth`：树的最大深度<br>- `min_samples_split`：进行划分所需的最小样本数  | 预测连续数值的回归问题                                    | 随机森林回归是通过建立多个决策树模型来进行预测的集成学习方法。它将数据随机分成多个子集，并基于每个子集构建决策树模型。最终的预测结果由多个决策树的平均或加权平均得出。                                                                                                                                                                                                                                              |\n| Support Vector Regression（支持向量机回归） | `from sklearn.svm import SVR`                      | - `C`：正则化强度的倒数<br>- `kernel`：核函数的类型<br>- `gamma`：核函数的参数<br>- `epsilon`：ε-不敏感范围的大小    | 预测连续数值的回归问题                                    | 支持向量机回归是一种常用的回归算法，通过将数据映射到高维空间中进行预测。它建立了一个超平面来预测连续数值的输出变量，并通过最大化间隔和控制在ε-不敏感范围内的错误来提高预测的准确性。支持向量机对于非线性回归问题可以使用核函数进行处理。                                                                                                                                                                                                     |\n| k-Nearest Neighbors Regression（k近邻回归） | `from sklearn.neighbors import KNeighborsRegressor` | - `n_neighbors`：选择邻居的数量<br>- `weights`：邻居对预测的权重<br>- `algorithm`：邻居搜索算法            | 预测连续数值的回归问题                                    | k近邻回归通过使用最近邻居的标签来预测连续数值的输出变量。它根据新样本与训练集中样本的距离来确定其最近的邻居，并使用邻居的平均值或加权平均值来进行预测。                                                                                                                                                                                                                                                            |\n \n这些是一些常见的sklearn回归算法，每个算法都有其特定的使用场景和方法介绍。\n以下是sklearn聚类问题中常见的算法、调用方法、重要参数、使用场景和方法介绍的markdown表格：\n\n| 算法名称        | 调用方法                  | 重要参数                            | 使用场景                                      | 方法介绍                                                                     |\n|--------------|-----------------------|---------------------------------|-------------------------------------------|----------------------------------------------------------------------------|\n| K-means      | `sklearn.cluster.KMeans` | `n_clusters`: 聚类簇的个数                | 数据集中存在明显的分组或簇结构                           | 将数据集划分为K个簇，使同一簇内的样本相似度高，不同簇间的样本相似度低                                 |\n| DBSCAN       | `sklearn.cluster.DBSCAN` | `eps`: 邻域半径                   | 数据集中存在任意形状的密集区域                          | 通过确定样本邻域密度，将密集区域划分为簇，适用于噪声点少且簇形状不规则的数据集                                 |\n| 层次聚类       | `sklearn.cluster.AgglomerativeClustering` | `n_clusters`: 聚类簇的个数          | 数据集中的样本具有层次结构                               | 从每个样本出发逐渐合并簇，形成聚类层次结构，可以根据需求选择最佳层次或簇数量                             |\n| 谱聚类        | `sklearn.cluster.SpectralClustering` | `n_clusters`: 聚类簇的个数          | 数据集中存在非线性或复杂的聚类结构                         | 通过图论中的谱分析方法将数据集转换为低维空间进行聚类，适用于非线性或复杂数据集                                |\n| Mean-Shift  | `sklearn.cluster.MeanShift` | `bandwidth`: 估计密度的半径             | 数据集中的聚类簇分布不规则、形状大小不一致的情况                 | 通过不断迭代计算样本密度中心，最终将样本划分为具有高密度区域的簇                                  |\n| Mini-Batch K-means | `sklearn.cluster.MiniBatchKMeans` | `n_clusters`: 聚类簇的个数 | 大规模数据集聚类时的高效处理                            | 基于K-means算法的改进版本，采用随机小批量数据迭代而非全量数据，加速了聚类过程并适应大规模数据集                           |\n\n注意：上述算法仅为sklearn库中的一部分，还有其他聚类算法如GMM、BIRCH等可供使用。不同的算法适用于不同的数据场景，可以根据需要选择合适的算法进行聚类分析。\n以下是常见的sklearn分类算法的信息：\n\n| 算法名称     | 调用方法                          | 重要参数                                                                                                 | 使用场景                                                  | 方法介绍                                                                                                                                                                                                                                                                                                                                                                              |\n|----------|--------------------------------|------------------------------------------------------------------------------------------------------|------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Logistic Regression（逻辑回归） | `from sklearn.linear_model import LogisticRegression` | - `penalty`：正则化类型，如l1、l2等<br>- `C`：正则化强度的倒数<br>- `solver`：求解优化问题的算法<br>- `multi_class`：多类别分类的策略     | 二分类或多类别分类问题                                  | 使用逻辑回归模型通过拟合数据的线性关系来预测离散的输出变量。它假设因变量是二分类或多分类的，并通过计算概率来预测新样本的类别。                                                                                                                                                                                                                                                               |\n| Decision Tree（决策树）        | `from sklearn.tree import DecisionTreeClassifier` | - `criterion`：计算节点最优划分的准则<br>- `max_depth`：树的最大深度<br>- `min_samples_split`：进行划分所需的最小样本数<br>- `min_samples_leaf`：叶节点所需的最小样本数         | 二分类或多类别分类问题                                  | 决策树通过对数据的划分，根据特征的不同属性进行分类预测。根据特征值的结构进行分类，以创建一个树的结构，通过从树的根开始对特征进行分支判断，最终到达叶子节点进行分类预测。                                                                                                                                                                                                                     |\n| Random Forest（随机森林）     | `from sklearn.ensemble import RandomForestClassifier` | - `n_estimators`：决策树的数量<br>- `criterion`：计算节点最优划分的准则<br>- `max_depth`：树的最大深度<br>- `min_samples_split`：进行划分所需的最小样本数 | 二分类或多类别分类问题                                  | 随机森林是通过建立多个决策树模型来进行分类预测的集成学习方法。它将数据随机分成多个子集，并基于每个子集构建决策树模型。最终的分类结果由多个决策树的投票或平均得出。                                                                                                                                                                                                                                                   |\n| Support Vector Machine（支持向量机） | `from sklearn.svm import SVC`                | - `C`：正则化强度的倒数<br>- `kernel`：核函数的类型<br>- `gamma`：核函数的参数<br>- `decision_function_shape`：样本分类决策函数的形状 | 二分类或多类别分类问题                                  | 支持向量机是一种常用的分类算法，通过将数据映射到高维空间中进行分类。它建立了一个超平面来分隔不同类别的样本，并通过最大化间隔来提高分类的准确性。支持向量机对于非线性分类问题可以使用核函数进行处理。                                                                                                                                                                                                             |\n| k-Nearest Neighbors（k近邻）    | `from sklearn.neighbors import KNeighborsClassifier` | - `n_neighbors`：选择邻居的数量<br>- `weights`：邻居对分类的权重<br>- `algorithm`：邻居搜索算法             | 二分类或多类别分类问题，特别适用于具有明显分布的数据集         | k近邻算法通过使用最近邻居的标签来对新样本进行分类。它根据新样本与训练集中样本的距离来确定其最近的邻居，并使用多数投票或加权投票来预测样本的类别。                                                                                                                                                                                                                                                      |\n\n这些是一些常见的sklearn分类算法，每个算法都有其特定的使用场景和方法介绍。', NULL, NULL, 0, 315, 0, 1, '3612', 0, 1, '2023-05-16 21:53:46', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (77, 1, 1, 4, NULL, 'https://cdn.dribbble.com/users/861271/screenshots/9714787/media/66c6c005ad57589e537bf893030099a2.png', '自制Docker镜像，零成本部署上线一个聊天室！', NULL, '# 自制Docker镜像，并零成本部署一个聊天室\n\n### 前言\n\n以前也完成过一个即时聊天项目，指路👉[SpringBoot+Websocket搭建仿QQ即时聊天](https://www.roginx.ink/article?id=37)\n\n这次项目有点不一样，我这次挑战的是快速完成一个聊天室部署，相关准备如下：\n\n- 小主机（任何主机），这里我使用armv7架构的玩客云（增加了难度）\n- 聊天室代码（Nodejs服务端、前端使用Vue）\n- 找一个内网穿透把服务暴露到外网\n\n### 项目准备\n\n为了追求高效的部署流程，我们在GitHub上寻找了一个完整的前后端聊天室项目，最终选择了[cleverqin/node-websocket-Chatroom](https://github.com/cleverqin/node-websocket-Chatroom)\n\n在本地安装所需依赖后，我们进行了简单的测试，并确认了该项目的可行性。接着，我们使用[Windows Frp](https://github.com/fatedier/frp/releases/tag/v0.46.1)进行内网穿透，使得该服务能够在外网环境下完整地被访问。现在，我们已经准备好进行下一步操作。\n\n### 项目部署\n\nDockerfile文件内容\n\n```dockerfile\n# 使用Node.js官方镜像作为基础镜像\nFROM arm32v7/node:14.16.1-buster-slim\n# 设置工作目录\nWORKDIR /app\n# 将项目文件复制到工作目录中\nCOPY ./app .\n# 安装Node.js依赖项\nRUN npm install --verbose\n# 暴露应用程序端口\nEXPOSE 3000\n# 启动Node.js应用程序\nCMD [\"node\", \"index.js\"]\n```\n\n![项目文件夹](http://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload/webchat01.png)\n\n![app内部文件](http://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload/webchat00.png)\n\n这里我主要注意了这几个细节\n\n- 不直接打包服务端代码，目的是兼容不同架构的运行环境（毕竟我的环境是x64，我的小主机是armv7）\n- 因为该nodejs服务端请求路由会扫描dist文件夹，所以我先是打包前端代码到dist，防止npm install安装时间过长。\n- 玩客云小主机连接我的openwrt路由器获得连接外网能力，加速npm install时拉取依赖包\n\n做完项目打包到文件迁移，我们开始打包镜像\n\n```\n#cd 到我们的dockerfile同级文件夹下执行构建镜像\ndocker build -t janxland/webchat .\n#...等待中...\n# 构建完成后运行一个容器 （可以增加文件挂载映射更新前后端代码\ndocker run -i -t --name webChat -p 3000:3000 janxland/chatweb\n```\n\n到这里我们应该已经成功构建镜像并成功运行，我们访问一下`http://主机IP:3000`\n\n![移动端页面](https://github.com/cleverqin/node-websocket-Chatroom/raw/master/public/static/img/screenshot/screen_03.png)\n\n接下来我们上传镜像方便以后复用或更新\n\n1. 注册登陆[DockerHub](https://hub.docker.com/)\n2. 去新建一个[AccessToken](https://hub.docker.com/settings/security)\n3. 本地dockers通过token登陆`$ docker login` \n4. 在[DockerHub](https://hub.docker.com/repository/create)中创建仓库\n\n```\n# 重新tag镜像，最后一个参数写你要push到的仓库\ndocker tag janxland/chatweb janx/chatweb:latest\n# push到仓库\ndocker push janx/chatweb:latest\n```\n\n### 内网穿透访问项目\n\n完成项目的部署，我们终于来到最后一个环境，项目的上线！\n\n- 在此之前我们要准备一下\n- 为自己的主机找到合适的[Frp](https://github.com/fatedier/frp/releases)\n- 生成免费的SSL证书[freeSSL](https://freessl.cn/)（若没有https需求可跳过）\n\n注意我们之前run的那个镜像映射的是3000端口\n\n我们先编辑我们的`vim frpc.ini`\n\n```ini\n[common]\nserver_addr = ######\nserver_port = 7000\ntoken = ######\n; 没有SSL证书可取消注释\n;[ROGINX.webChat]\n;type = http\n;local_ip = 127.0.0.1\n;local_port = 3000\n;remote_port = 6000\n;custom_domains = chat.roginx.ink\n[ROGINX.webChatHTTPS]\ntype = https\nlocal_ip = 127.0.0.1\nlocal_port = 3000\ncustom_domains = chat.roginx.ink\nplugin = https2http\nplugin_local_addr = 127.0.0.1:3000\n;证书位置\nplugin_crt_path = /root/cert/roginx.ink/fullchain.cer\nplugin_key_path = /root/cert/roginx.ink/roginx.ink.key\nplugin_host_header_rewrite = 127.0.0.1\nplugin_header_X-From-Where = frp\n```\n\n最后运行frp就好啦！\n\n`$ ./frpc -c frpc.ini`\n\n分享给你们的朋友来[聊天室](https://chat.roginx.ink/)多说说悄悄话吧~\n\n### 总结\n\n本文介绍了如何利用Docker快速构建并部署一个聊天室项目。\n\n首先，通过GitHub找到了一个完整的前后端聊天室项目，然后使用Windows Frp进行内网穿透，以便在外网环境下完整地访问该服务。接下来，通过编写Dockerfile，将项目打包为Docker镜像，并进行了部署。\n\n最后，介绍了如何使用内网穿透工具Frp，将该服务暴露到公网，并分享了聊天室项目的链接。\n\n未来可以继续开发这个聊天室并通过目录挂载的方式进行更新，再打包成镜像重新push到DockerHub进一步改进项目', NULL, NULL, 0, 133, 0, 1, NULL, 0, 1, '2023-05-26 19:45:39', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (78, 1, 1, 4, NULL, 'https://p1.music.126.net/7zQ4XzJdElQxUuJWNPO7zQ==/109951167499880139.jpg?param=1024y1024', 'Serverless | 记一次用阿里云函数计算FC部署Alist', NULL, '# Alist 使用 serverless 按量付费\n\n## 大概流程（杭州地区例子）\n\n1. 搭建FC函数计算\n2. 配置使用VPC交换机 ，NAS持久化储存共享\n3. 启动测试，且设置初始化\n4. (可选)配置域名和CDN\n\n## 搭建FC函数\n\n### 创建VPC服务，使得FC函数与NAS储存联通\n\n为什么需要NAS服务？因为FC函数是动态弹性实例，会进行实例的清理，如果没有将配置文件挂载在固定一个地方，服务的配置就会随实例销毁而清理。\n\n开启VPC、NAS服务是为了容器服务能挂载到NAS存储。\n\n选择杭州地区\n`开通VPC服务地址:`[专有网络管理控制台](https://vpc.console.aliyun.com/vpc/cn-hongkong/vpcs/new)\n\n![创建一个VPC](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com//pic-upload/%E5%88%9B%E5%BB%BAVPC.png)\n\n![创建一个NAS服务](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com//pic-upload/VPC.png)\n\n### 开通个人镜像仓库`ACR` ，并且往上面推送 Alist的镜像\n\n通过提示推送镜像。\n\n![创建个人镜像并推送镜像](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com//pic-upload/YPOZK6I%5DJ()154QJILQXQ09.png)\n\n注意：\n\n1. 统一选定一个地区（这里选择杭州\n2. 镜像的处理器架构，应该是推送linux-x64架构的镜像\n3. 了解镜像的服务端口和开启服务指令\n4. 必须设置为公开镜像\n\n### 创建 FC 服务\n\n在创建FC服务之前在NAS系统添加挂载点\n\n![在NAS系统添加挂载点](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com//pic-upload/%E6%B7%BB%E5%8A%A0%E6%8C%82%E8%BD%BD%E7%82%B9.png)\n\n![在创建FC服务配置中挂载VPC](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com//pic-upload/%E6%8C%82%E8%BD%BDVPC.png)\n\n![在创建FC服务配置中挂载NAS](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com//pic-upload/%E6%8C%82%E8%BD%BDNAS.png)\n\n![创建服务和函数](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload/OR@9VMN~E%60JAYB7R%60UAR%7DBY.png)\n\n### 创建FC函数且使用 上面的`ACR镜像`，\n\n![配置信息一览](http://mybox-1257251314.cos.ap-chengdu.myqcloud.com/pic-upload/Z5HT5GJ.png)\n\n设置实例模式（上图`弹性管理`\n\n我的设置是空闲模式，最少1个实例最多2个实例\n\n### 启动alist 并且初始化密码\n\n在实例列表中登陆实例输入`./alist admin --data /home/alist`获得管理员登陆账号密码\n\n设置自定义域名后访问即可！\n\n注意备份配置。实例一刷新便会重新部署一个Alist\n\n如果想要做到持久层\n\n请转移阅读这篇文章[使用阿里云函数(无服务器)搭建alist 网盘外链解析](https://www.hu60.cn/q.php/bbs.topic.104258.html)', NULL, NULL, 0, 112, 0, 1, NULL, 0, 1, '2023-06-05 09:56:49', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (79, 1, 1, 4, NULL, 'https://p2.music.126.net/hC0q2dGbOWHVfg4nkhIXPg==/109951165374881177.jpg?param=512y512', '（待定）云函数+对象存储 低成本部署个人博客、转接服务、NAS', NULL, '上课没事干占个标题', NULL, NULL, 0, 4, 0, 0, '3612', 0, 1, '2023-06-05 10:00:09', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (80, 1, 1, 4, NULL, 'https://fc.sinaimg.cn/mw1024/006yt1Omgy1gadx8a48swj333422wkjo.jpg', 'ChatGPT镜像站 | AI智能助手 | Docker虚拟化部署', NULL, '# ChatGPT镜像站 | AI智能助手 | Docker虚拟化部署\n\n## 预览\n\n在线体验：[AI智能语音助手](https://assis.roginx.ink)\n\nDocker仓库：[janxland/chatgpt-next-web | Docker Hub](https://hub.docker.com/repository/docker/janxland/chatgpt-next-web/general)\n\n[快速部署 – Vercel](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FYidadaa%2FChatGPT-Next-Web&env=OPENAI_API_KEY&env=CODE&project-name=chatgpt-next-web&repository-name=ChatGPT-Next-Web)\n\n![预览图](https://qiniu.roginx.ink/articlePicture/janx11690120343591978)\n\n### 主要功能\n\n- 在 1 分钟内使用 Vercel **免费一键部署**\n- 提供体积极小（~5MB）的跨平台客户端（Linux/Windows/MacOS）, [下载地址](https://github.com/Yidadaa/ChatGPT-Next-Web/releases)\n- 完整的 Markdown 支持：LaTex 公式、Mermaid 流程图、代码高亮等等\n- 精心设计的 UI，响应式设计，支持深色模式，支持 PWA\n- 极快的首屏加载速度（~100kb），支持流式响应\n- 隐私安全，所有数据保存在用户浏览器本地\n- 预制角色功能（面具），方便地创建、分享和调试你的个性化对话\n- 海量的内置 prompt 列表，来自[中文](https://github.com/PlexPt/awesome-chatgpt-prompts-zh)和[英文](https://github.com/f/awesome-chatgpt-prompts)\n- 自动压缩上下文聊天记录，在节省 Token 的同时支持超长对话\n- 多国语言支持：English, 简体中文, 繁体中文, 日本語, Español, Italiano, Türkçe, Deutsch, Tiếng Việt, Русский, Čeština\n- 拥有自己的域名？好上加好，绑定后即可在任何地方**无障碍**快速访问\n\n我的Fork版本主要添加了语音识别和语音合成功能、JSON指令识别功能。\n\n若是想通过Docker镜像方式部署，可以看看下面的教程：\n\n## 克隆项目\n\n我的Fork版本：[janxland/ChatGPT-Next-Web](https://github.com/janxland/ChatGPT-Next-Web)\n\n`git clone https://github.com/janxland/ChatGPT-Next-Web.git`\n\n![克隆项目](https://qiniu.roginx.ink/articlePicture/janx11690120079809189)\n\n## 构建镜像\n\n项目已经写好Dockerfile文件，直接运行即可。\n\n```shell\ndocker tag janxland/chatgpt-next-web janxland/chatgpt-next-web:latest\ndocker push janxland/chatgpt-next-web:latest\n```\n\n![构建镜像](https://qiniu.roginx.ink/articlePicture/janx11690120096563369)\n\n## 创建运行容器\n\nOPENAI_API_KEY 自行获取，GitHub用户免费申请获得：[GPT_API_free](https://github.com/chatanywhere/GPT_API_free) | **[点击领取免费API Key](https://api.chatanywhere.cn/v1/oauth/free/github/render)**\n\n```shell\ndocker run -d -p 3001:3000    -e OPENAI_API_KEY=\"sk-eDnnPEQB2E4uMX665lO6vspCg1GnfVz3Y57dTnEMakeq****\"    -e BASE_URL=\"https://api.chatanywhere.com.cn\"    janxland/chatgpt-next-web\n```\n\n![Dockerfile构建镜像](https://qiniu.roginx.ink/articlePicture/janx11690120096563217)\n\n', NULL, NULL, 0, 168, 0, 1, NULL, 1, 1, '2023-07-23 21:55:57', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (81, 1, 1, 4, NULL, 'https://img.zcool.cn/community/011bad5976dc70a8012193a3934b78.jpg@3000w_1l_0o_100sh.jpg', '超星学习通签到 | chaoxing-sign-cli', NULL, '## 项目简介\n\n在大学生活中水课的在线签到常常成为学生们的烦恼，特别是对于一些自由度较高的课程。为了解决这一问题，我开发了超星签到项目。该项目利用阿里云镜像服务（ACR）和阿里云函数计算（FC），提供了一种自动化的远程签到解决方案，帮助广大大学生避免错过签到，提高学习效率。\n\n在线体验：[超星签到](https://chaoxing.roginx.ink)\n\n## 项目部署\n\n1. **创建GitHub仓库**：首先，我在GitHub上创建了一个仓库，用于存储超星签到项目的代码和配置文件。我Fork的项目：[项目](https://github.com/janxland/chaoxing-sign-cli/)\n\n2. **编写Dockerfile**：我编写了一个Dockerfile文件，用于定义镜像的构建过程。在Dockerfile中，我指定了项目所需的依赖和运行环境，并将其打包到一个镜像中。\n\n3. **使用ACR构建镜像**：借助阿里云容器镜像服务（ACR），我设置了与GitHub仓库的集成，使得每当我提交代码时，ACR都会自动构建最新版本的镜像。\n\n4. **部署云函数**：通过阿里云函数计算（FC），我将镜像部署为一个云函数。我配置了触发器，使得云函数能够在每次签到任务触发时自动运行。\n\n5. **配置项目参数**：我在云函数的环境变量中配置了超星账号信息和签到课程的相关参数，以便云函数能够正确执行签到操作。\n\n6. **测试和监控**：完成部署后，我进行了一些测试，确保项目能够正常运行。我还设置了日志记录和监控，以便随时追踪项目的运行情况。\n\n## 项目特点\n\n超星签到项目具有以下优点：\n\n- **自动化签到**：项目通过自动化方式完成签到任务，解放了学生们的时间和精力，提高了学习效率。\n\n- **准确性和稳定性**：借助阿里云服务提供的稳定性和可靠性，项目能够准确地进行远程签到，避免了因手动操作带来的错误和不确定性。\n\n- **灵活性和扩展性**：基于云计算平台构建的项目具有良好的扩展性，可以根据实际需求灵活调整配置和规模。\n\n- **学习机会**：通过开发这个项目，我学习了容器技术、云函数计算等相关知识，并锻炼了开发和部署项目的能力。\n\n## 免责声明\n\n本项目旨在为广大学生提供便利，避免错过重要的签到活动，但请注意以下几点：\n\n- 本项目仅用于学习和研究目的，不得用于任何违法活动或损害他人利益的行为。\n\n- 使用本项目进行签到时，请遵守学校和课程的规定，遵循诚信原则。\n\n- 本项目的开发者不对因使用本项目导致的任何问题或后果负责，包括但不限于学术纪律处分、账号封禁等。\n\n以上是一个简单的博客示例，你可以根据自己的实际情况和要求进行修改和补充。希望这可以帮助你起草你的项目博客！如果需要进一步的帮助，请随时告诉我。', NULL, NULL, 0, 117, 0, 1, NULL, 0, 1, '2023-09-08 21:38:18', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (82, 1, 1, 4, NULL, 'http://img.likebizhi.com/uploads/likebizhi/up/2022/03/495655502699579103ef814216433fc4129.jpg', 'Miru | 专注于便捷化的多媒体聚合网页应用', NULL, '<img align=\"right\" width=\"300\" src=\"https://img1.imgtp.com/2023/09/16/rgwTb9Fj.png\" alt=\"Miru 看板娘\"/>\n\n***支持、视频、漫画、小说扩展源的多功能在线播放器***\n\n## 特性{#favo}\n\n- 🎉 利用 Miru 的扩展系统，可以轻松的添加新的源\n- 🦋 优秀的 UI 设计与交互体验。\n- 📱 支持移动端浏览器。\n- 🌐 支持自定义扩展仓库与代理。\n- 📦 官方扩展仓库提供视频源，无需编写任何扩展即可使用。\n- 💾 支持数据同步，不怕观看数据记录丢失\n- 📺🖼️📄 支持在线观看多种视频、漫画、小说源，实现多平台的统一。\n\n🎀在线体验：[Miru | Home](HTTPS://MIRU.ROGINX.INK)\n\n😍希望开发者加入其中开发插件\n\n## 部署过程{#dev}\n\n要部署 Miru 多媒体应用，我们将使用 Docker 和阿里云函数计算（FC）。以下是详细的部署步骤：\n\n1. 在你的云服务器上，克隆 Miru 项目的 Fork 版本：\n\n   `git clone https://github.com/janxland/LuminaryLore.git`\n\n2. 魔改代码\n\n3. 构建项目：\n\n   `yarn build`\n\n4. 提交仓库（注意带上.next文件夹）为节省空间删除里边的cache文件夹\n\n   `git add .next -f` \n\n5. 打开[函数计算FC](https://fcnext.console.aliyun.com/applications)，一键根据Miru仓库构建应用。\n\n6. 等待函数服务部署完成后，可以用将域名解析到这个服务。\n\n其中1—4步骤可以实现即时修改提交，提交后函数计算FC自动重新部署项目\n\n对项目没有修改需求的直接Fork项目后直接执行5、6步骤即可\n\n## 结语{#end}\n\n在本文中，我们介绍了使用阿里云函数计算（FC）来部署 Miru 多媒体应用的详细步骤。通过克隆 Miru 项目的 Fork 版本，并对代码进行修改和构建，我们可以轻松地部署应用。提交仓库后，函数计算FC会自动重新部署项目，实现即时修改提交的效果。最后，我们可以通过将域名解析到函数服务，访问和使用部署好的 Miru 多媒体应用。', NULL, NULL, 0, 115, 0, 1, NULL, 0, 1, '2023-09-16 22:27:12', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (83, 1, 1, 5, NULL, 'https://www.intricity.com/hubfs/What%20is%20Hadoop.png#keepProtocol', '大数据工具Hadoop环境安装与配置', NULL, '## 本地安装Ubuntu x64{#install-ubuntu}\n\n#### 下载VMware 中文破解版{#download-vmware}\n\n[点击下载](https://download3.vmware.com/software/wkst/file/VMware-workstation-full-16.1.0-17198959.exe)\n\n注册码：`ZF3R0-FHED2-M80TY-8QYGC-NPKYF`\n\n#### 下载Ubuntu-22.04.3-live-server版{#download-ubuntu-image}\n\n为什么选择它？因为去除桌面后能提升其作为提供服务的机器性能，也是为了方便学习Linux命令行\n\n[点击下载](https://mirrors.xjtu.edu.cn/ubuntu-releases/22.04.3/ubuntu-22.04.3-live-server-amd64.iso)\n\n#### 下载 Xftp 和 Xshell{#download-xftp-xshell}\n\n[百度网盘](https://pan.baidu.com/s/1sWTykL-_Kw-L9xpYXIHLvA?pwd=need )   [官方学生版](https://www.xshell.com/zh/free-for-home-school/)\n\n#### 安装Ubuntu服务器版镜像{#build-ubuntu}\n\n##### 新建虚拟机\n\n除了选择自己下载的镜像，其他按照默认Next下一步即可，自行修改配额配置。\n\n##### 选择下载的.ISO镜像\n\n![选择先前下载额镜像](https://cos.roginx.ink/pic-upload/202310231639286.png)\n\n##### 启动虚拟机\n\n![安装到虚拟系统盘](https://cos.roginx.ink/pic-upload/202310231643753.png)\n\n等待安装...\n\nContinue+Done组合拳一直向下即可\n\n注意：他可能会锁住数字盘，建议搞些简单密码\n\n![直至要你设置用户名密码](https://cos.roginx.ink/pic-upload/202310231647167.png)\n\n然后会完成安装会卸载挂载点，接下来重新打开虚拟机就完成了\n\n> [FAILED] Failed unmounting /cdromlease remove the installation medium, then press ENTER:[FAILED] Failed unmounting /cdrom.\n\n##### 获取虚拟机的IP地址\n\n进入虚拟机按照之前的Pick Name和密码登录后获取IP地址（方便Xshell、XFtps连接）\n\n```text\nip addr show\n```\n\n![获取IP地址](https://cos.roginx.ink/pic-upload/202310231652564.png)\n\n##### Xshell与XFtps链接\n\n也是使用Pick Name和密码登录\n\n![XFtps连接](https://cos.roginx.ink/pic-upload/202310231653270.png)\n\n![xshell连接](https://cos.roginx.ink/pic-upload/202310231653105.png)\n\n##### 想要中文提示词吗？\n\n首先，你需要确保你的 Ubuntu Server 安装了中文语言包。如果没有安装，可以使用下面的命令安装：\n\n```\nsudo apt-get install language-pack-zh-hans\n```\n\n然后，你需要将系统的默认语言设置为中文，可以在终端执行下面的命令：\n\n```\nsudo update-locale LANG=zh_CN.UTF-8\n```\n\n最后，重启系统即可使用中文：\n\n```\nsudo reboot\n```\n\n## 云服务器{#net-server}\n\n若是不想在本地构建虚拟环境，可以使用云服务器\n\n## JDK 11 安装{#install-jdk}\n\n```text\nsudo apt update\nsudo apt install openjdk-11-jdk\n```\n\n## Hadoop安装与环境配置{#install-hadoop}\n\n版本3.3.6\n\n```shell\n##############网络下载方法##################\nwget https://downloads.apache.org/hadoop/common/hadoop-X.X.X/hadoop-X.X.X.tar.gz\ntar -xzf hadoop-X.X.X.tar.gz\nmv hadoop-X.X.X /opt/module/hadoop\n######推荐方法###############\n# 超级管理员新建/opt/module文件夹\nsudo mkdir /opt/module\n\n#################################################\n#### 将hadoop-3.3.6.tar.gz通过xftps传入虚拟机里 ####\n#################################################\n\n#解压hadoop-3.3.6.tar.gz到/opt/module中\nsudo tar -zxvf ./hadoop-3.3.6.tar.gz -C /opt/module\n\n# 配置环境变量：编辑my_env.sh\nsudo vim /etc/profile.d/my_env.sh\n```\n\n### 编辑my_env.sh并生效{#edit-env}\n\n查看 jdk 安装位置 `update-alternatives --list java`\n\n可跳过此步直接编辑.bashrc\n\n```shell\n#JAVA_HOME \nexport JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\nexport PATH=$PATH:$JAVA_HOME/bin \n#HADOOP_HOME \nexport HADOOP_HOME=/opt/module/hadoop-3.3.6\nexport PATH=$PATH:$HADOOP_HOME/bin \nexport PATH=$PATH:$HADOOP_HOME/sbin\n```\n\n使其生效 `source /etc/profile`\n\n执行 `hadoop` 查看是否配置成功\n\n编辑bash_profile（解决依赖包问题）\n\n```shell\nvim ~/.bashrc\n\n###在文件末尾加入\nexport HADOOP_HOME=/opt/hadoop\nexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\nexport CLASSPATH=$CLASSPATH:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/yarn/lib/*\n```\n\n使其生效 `source ~/.bashrc`\n\n## 开启Hadoop集群{#deploy-hadoops}\n\n启动Hadoop集群的步骤如下：\n\n1. 确保你已经安装了Hadoop，并且配置好了Hadoop的环境变量。\n\n2. 确保你的Hadoop集群的配置文件已经正确设置。Hadoop的配置文件位于Hadoop安装目录下的`etc/hadoop`目录中。主要的配置文件包括`core-site.xml`、`hdfs-site.xml`、`mapred-site.xml`和`yarn-site.xml`。\n\n3. 在主节点上启动Hadoop集群的NameNode和ResourceManager。在终端中执行以下命令：\n\n   ```\n   $ start-dfs.sh\n   $ start-yarn.sh\n   ```\n\n   这将启动Hadoop分布式文件系统（HDFS）和资源管理器（YARN）。\n\n4. 检查Hadoop集群是否成功启动。可以通过执行以下命令来检查：\n\n   ```\n   $ jps\n   ```\n\n   你应该能够看到类似以下的进程列表：\n\n   ```\n   NameNode\n   DataNode\n   SecondaryNameNode\n   ResourceManager\n   NodeManager\n   ```\n\n   如果你看到这些进程，说明Hadoop集群已经成功启动。\n\n5. 如果你想要在集群上运行MapReduce作业，你还需要启动JobHistoryServer。在终端中执行以下命令：\n\n   ```\n   $ mr-jobhistory-daemon.sh start historyserver\n   ```\n\n   这将启动JobHistoryServer，以便你可以查看作业的运行历史和状态。\n\n现在，你的Hadoop集群已经成功启动，你可以开始在集群上运行Hadoop作业了。请注意，以上步骤假设你已经正确配置了Hadoop集群，并且所有节点之间的网络连接正常。如果遇到任何问题，请检查日志文件以获取更多详细信息，并确保所有配置和网络设置正确。\n\n## 代码测试{#code-test}\n\n构造目录环境\n\n```shell\nmkdir com\nmkdir Merge\ncd ./com/Merge\nvim Merge.java\n```\n\n测试代码\n\n```java\npackage com.Merge;\nimport java.io.IOException;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.IntWritable;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.mapreduce.Job;\nimport org.apache.hadoop.mapreduce.Mapper;\nimport org.apache.hadoop.mapreduce.Reducer;\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat;\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;\nimport org.apache.hadoop.util.GenericOptionsParser;\npublic class Merge {\n\n	/**\n	 * @param args\n	 * 对A,B两个文件进行合并，并剔除其中重复的内容，得到一个新的输出文件C\n	 */\n	//重载map函数，直接将输入中的value复制到输出数据的key上\n	public static class Map extends Mapper<Object, Text, Text, Text>{\n		private static Text text = new Text();\n		public void map(Object key, Text value, Context context) throws IOException,InterruptedException{\n			text = value;\n			context.write(text, new Text(\"\"));\n		}\n	}\n	\n	//重载reduce函数，直接将输入中的key复制到输出数据的key上\n	public static class Reduce extends Reducer<Text, Text, Text, Text>{\n		public void reduce(Text key, Iterable<Text> values, Context context ) throws IOException,InterruptedException{\n			context.write(key, new Text(\"\"));\n		}\n	}\n	\n	public static void main(String[] args) throws Exception{\n		\n		// TODO Auto-generated method stub\n		Configuration conf = new Configuration();\nconf.set(\"fs.default.name\",\"hdfs://localhost:9000\");\n		String[] otherArgs = new String[]{\"input\",\"output\"}; /* 直接设置输入参数 */\n		if (otherArgs.length != 2) {\n			System.err.println(\"Usage: wordcount <in><out>\");\n			System.exit(2);\n			}\n		Job job = Job.getInstance(conf,\"Merge and duplicate removal\");\n		job.setJarByClass(Merge.class);\n		job.setMapperClass(Map.class);\n		job.setCombinerClass(Reduce.class);\n		job.setReducerClass(Reduce.class);\n		job.setOutputKeyClass(Text.class);\n		job.setOutputValueClass(Text.class);\n		FileInputFormat.addInputPath(job, new Path(otherArgs[0]));\n		FileOutputFormat.setOutputPath(job, new Path(otherArgs[1]));\n		System.exit(job.waitForCompletion(true) ? 0 : 1);\n	}\n\n}\n```\n\n编译代码并运行\n\n```shell\njavac Merge.java\njava com.Merge.Merge\n```\n\n', NULL, NULL, 0, 103, 0, 1, NULL, 0, 1, '2023-10-19 20:43:51', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (84, 1, 1, 4, NULL, 'https://cdn.wonderfuldiy.com/wp-content/uploads/2016/02/Pinwheel-napkin.jpg', '“诚信纸巾”—利用ESP32蓝牙实现线下实体支付', NULL, '## 引脚图{#project-chip-pic}\n\n![ESP32开发板 V1.0.0 Rev1](https://cos.roginx.ink/pic-upload/202310311258938.png)\n\n![ESP32 Devkit V1](https://img-blog.csdnimg.cn/029b77531a554a6d93b78f67f929a09d.png)\n\n## 概述{#project-desc}\n\n项目旨在利用ESP32开发板和手机端微信小程序的蓝牙连接功能，实现便捷的纸巾发放系统。通过该系统，用户可以使用微信小程序连接到ESP32作为蓝牙服务器，并通过手机端进行支付和指令发送，以控制ESP32驱动的舵机下放纸巾。\n\n## 项目流程{#project-step}\n\n1. 硬件搭建: 使用ESP32开发板搭建蓝牙服务器，连接舵机用于控制纸巾的下放。确保ESP32与舵机的连接以及电源供应的正常运作。\n2. 软件开发: 开发ESP32的固件程序，实现蓝牙服务器功能，并与舵机驱动逻辑进行集成。确保ESP32能够接收来自手机端的蓝牙指令，并相应地控制舵机下放纸巾。\n3. 微信小程序开发: 开发微信小程序，实现用户与ESP32的蓝牙连接和支付功能。用户可以通过微信小程序与ESP32建立蓝牙连接，并使用支付功能完成纸巾的购买和控制指令的发送。\n4. 蓝牙连接与支付: 用户在微信小程序中选择连接到\"诚信纸巾\"设备，通过微信支付完成纸巾的购买。支付成功后，用户可以发送指令给ESP32，触发舵机下放纸巾的动作。\n5. 纸巾发放: ESP32接收到来自微信小程序的指令后，驱动舵机控制纸巾的下放。纸巾被成功发放给用户。\n\n## 代码实现{#project-code}\n\n编写环境：PlatformIO、微信小程序开发者工具\n\n#### ESP32（Arduino）代码\n\n```c++\n#include <NimBLEDevice.h>\n#include <ESP32Servo.h>\nServo servo; // 创建舵机对象\nint servoPin = 13;\nclass NimBLECallbacks : public NimBLECharacteristicCallbacks {\n  void onRead(NimBLECharacteristic* pCharacteristic) {\n    Serial.println(\"Read event\");\n    if (pCharacteristic->getUUID().equals(BLEUUID(\"5678\"))) {\n      std::string value = pCharacteristic->getValue();\n      if (value.length() > 0) {\n        Serial.print(\"Read value: \");\n        Serial.print(value.c_str());\n      }\n    }\n  }\n\n  void onWrite(NimBLECharacteristic* pCharacteristic) {\n    Serial.println(\"Write event\");\n    if (pCharacteristic->getUUID().equals(BLEUUID(\"5678\"))) {\n      // 读取手机发送的值并设置给读写特征\n      std::string value = pCharacteristic->getValue();\n      if (value.length() > 0) {\n        Serial.print(\"Write value: \");\n        Serial.println(value.c_str());\n        if (value == \"openservo\") {\n          pCharacteristic->setValue(value);\n          pCharacteristic->notify();\n          servo.write(180);\n          delay(1500);\n          servo.write(90);\n        } else {\n          pCharacteristic->setValue(\"Not found\");\n          pCharacteristic->notify();\n        }\n      }\n    }\n  }\n};\n\nNimBLECharacteristic* pReadWriteCharacteristic; // 新增读写特征\nNimBLEServer* pServer;\nNimBLECharacteristic* pCharacteristic;\nNimBLEService* pService;\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"Starting NimBLE Server\");\n  NimBLEDevice::init(\"NimBLE\");\n  ESP32PWM::allocateTimer(0);\n  servo.setPeriodHertz(50);\n  servo.attach(servoPin,500,2500);\n#ifdef ESP_PLATFORM\n  NimBLEDevice::setPower(ESP_PWR_LVL_P9); /** +9db */\n#else\n  NimBLEDevice::setPower(9); /** +9db */\n#endif\n\n  NimBLEDevice::setSecurityAuth(true, true, true);\n  NimBLEDevice::setSecurityIOCap(BLE_HS_IO_DISPLAY_ONLY);\n\n  // 创建BLE服务器\n  pServer = NimBLEDevice::createServer();\n\n  // 创建特征值\n  pCharacteristic = new NimBLECharacteristic(\"5678\", NIMBLE_PROPERTY::NOTIFY | NIMBLE_PROPERTY::WRITE | NIMBLE_PROPERTY::READ);\n\n  // 设置写回调函数\n  pCharacteristic->setCallbacks(new NimBLECallbacks());\n\n  // 添加特征值到服务\n  NimBLEService* pService = pServer->createService(\"ABCD\");\n  pService->addCharacteristic(pCharacteristic);\n  pService->start();\n\n  // 开始广播\n  NimBLEAdvertising* pAdvertising = NimBLEDevice::getAdvertising();\n  pAdvertising->addServiceUUID(\"ABCD\");\n  pAdvertising->start();\n}\n\nvoid loop() {\n}\n\n```\n\n#### 微信小程序核心代码\n\n```\n不予\n```\n\n## 产品演示{#project-display}', NULL, NULL, 0, 73, 0, 1, NULL, 0, 1, '2023-10-31 13:36:48', '2024-01-19 17:18:33', 'janx', 0);
INSERT INTO `article` VALUES (85, 1, 1, 16, 0001, 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python答案 流程控制', NULL, '# 流程控制\n\n## 个税计算器\n\n```python\ntax = 0\ntable = [\n    [0,3000,3,0], \n    [3000,12000,10,210], \n    [12000,25000,20,1410], \n    [25000,35000,25,2660], \n    [35000,55000,30,4410], \n    [55000,80000,35,7160], \n    [80000,float(\'inf\'),45,15160]\n]\nincome = float(input())\ntax = 0\nfor level in table:\n    o = income-5000\n    if  level[0] < o < level[1]: \n        tax = o * level[2] / 100 - level[3] \n        break \nif income < 0: \n    print(\'error\')\nelse: \n    if(0<=income<=5000):\n        tax = 0\n    print(\"应缴税款{:.2f}元，实发工资{:.2f}元。\".format(max(tax, 0), max(income-tax, 0)))\n```\n\n## 判断闰年\n\n```python\nyear = int(input())\nif year % 4 == 0 and year % 100 != 0 or year % 400 == 0:\n    print(\"True\")\nelse:\n    print(\"False\")\n```\n\n## 今年多少天？\n\n```python\nyear = int(input()) # 获取用户输入年份\nif year % 4 == 0 and year % 100 != 0 or year % 400 == 0: # 判断是否为闰年\n    days = 366\nelse:\n    days = 365\nprint(days) # 输出该年的天数\n```\n\n## **输出N以内的所有素数**\n\n```\ndef is_prime(n):\n    if n<=1:\n        return False\n    if n==2:\n        return True\n    if n%2==0:\n        return False\n    for i in range(3,int(n**0.5)+1,2):\n        if n%i==0:\n            return False\n    return True\ndef output_prime(number):\n    for i in range(2,number+1):\n        if is_prime(i):\n            print(i,end=\' \')\npositive_int = int(input())  \noutput_prime(positive_int)     \n```\n\n## 一元二次方程求根\n\n```python\nimport math\ndef solve_quadratic_equation(a, b, c):\n    delta = b**2 - 4*a*c # 计算判别式\n    if delta < 0: # 无实数解\n        print(\"该方程无实数解\")\n    elif delta == 0: # 有一个根\n        x = -b / (2*a)\n        print(\"%.2f\" % x)\n    else: # 有两个根\n        x1 = (-b + math.sqrt(delta)) / (2*a)\n        x2 = (-b - math.sqrt(delta)) / (2*a)\n        print(\"%.2f %.2f\" % (max(x1,x2), min(x1,x2)))\na = float(input())\nb = float(input())\nc = float(input())\nif a == 0:\n    if b == 0:\n        if c == 0:\n            print(\"Data error!\")\n        else:\n            print(\"该方程无实数解\")\n    else:\n        x = -c / b\n        print(\"%.2f\" % x)\nelse:\n    solve_quadratic_equation(a, b, c)\n```\n\n## 用户登录A\n\n```python\nusername = input()\npassword = input()\nif username == \'admin\' and password == \'123456\':\n  print(\"登录成功\")\nelse:\n  print(\"登录失败\")\n```\n\n## 用户登录C\n\n```\nfor i in range(3):\n    username = input()\n    password = input()\n    if username in [\"admin\", \"administrator\"] and password == \"123456\":\n        print(\"登录成功\")\n        break\n    else:\n        print(\"登录失败\")\nelse:\n    print(\"三次用户名或密码输入错误，登录失败\")\n```\n\n## **分段函数A**\n\n```\nx = int(input())\nif (-10 <= x < 0):\n    print(2*x**3 + 4*x**2 + 3)\nelif (0 <= x < 6):\n    print(x + 14)\nelif (6 <= x <= 10):\n    print(6*x)\nelse:\n    print(\"ERROR\")\n```\n\n## **分段函数B**\n\n```\nimport math\nx = int(input())\n\nif (-6 <= x < 0):\n    print(math.abs(x)+5)\nelif (0 <= x < 3):\n    print(math.factorial(x))\nelif (3 <= x <= 6):\n    print(x**(x-2))\nelse:\n    print(0)\n```\n\n## **百分制成绩转换五分制E**\n\n```\nscore = int(input()) # 输入百分制成绩\nif score >= 90 and score <= 100:\n    print(\'A\')\nelif score >= 80 and score < 90:\n    print(\'B\')\nelif score >= 70 and score < 80:\n    print(\'C\')\nelif score >= 60 and score < 70:\n    print(\'D\')\nelif score >= 0 and score < 60:\n    print(\'E\')\nelse:\n    print(\'data error!\')\n```\n\n## **身高测算**\n\n```\nfather = int(input())\nmother = int(input())\nsex = input()\nif sex == \"男\":\n    height = int((father + mother) * 1.08 / 2)\n    print(height)\nelif sex == \"女\":\n    height = int((father * 0.923 + mother) / 2)\n    print(height)\nelse:\n    print(\"无对应公式\")\n```\n\n## **判断三角形并计算面积**\n\n```\nimport math\na = float(input())\nb = float(input())\nc = float(input())\nif a + b > c and a + c > b and b + c > a:\n    p = (a + b + c) / 2\n    area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    print(\"YES\")\n    print(\"{:.2f}\".format(area))\nelse:\n    print(\"NO\")\n```\n\n## **判断是否直角三角形**\n\n```\na = float(input())\nb = float(input())\nc = float(input())\nif a + b > c and a + c > b and b + c > a:\n    if a ** 2 + b ** 2 == c ** 2 or b ** 2 + c ** 2 == a ** 2 or a ** 2 + c ** 2 == b ** 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")\n```\n\n## 出租车计费\n\n```\ndistance, waiting = map(int, input().split(\',\'))\nprice = 13\nif distance > 3:\n    if distance <= 15:\n        price += (distance - 3) * 2.3\n    else:\n        price += (15 - 3) * 2.3 + (distance - 15) * 2.3 * 1.5\nprice += waiting\nprint(int(price))\n```\n\n## a除以b\n\n```\na = float(input())\nb = float(input())\n\nif b == 0:\n    print(\"除零错误\")\nelse:\n    c = round(a/b, 2)\n    print(c)\n```\n\n## 奇数数列求和\n\n```\nn = int(input())\nsum = 0\nfor i in range(1, 2*n, 2):\n    sum += i\nprint(sum)\n```\n\n## 求数列前n项的平方和\n\n```\nn = int(input())\nresult = sum(i*i for i in range(1, n+1))\nprint(result)\n```\n\n## 中国古代数学问题\n\n### 李白买酒\n\n```\nnum = 0\nfor i in range(3):\n	num += 1\n	num = num/2\nprint(num)\n```\n\n### 猴子吃桃\n\n```\nnum = 1\nfor i in range(9):\n    num = (num + 1) * 2\nprint(num)\n```\n\n### 百钱买百鸡A\n\n```\nfor large in range(1, 20):\n    for big in range(1,33):\n        for small in range(3, 300, 3):\n            if large * 5 + big * 3 + int(small / 3) == 100 and large + big + small == 100:\n                print(\'{0} {1} {2}\'.format(large, big, small))\n```\n\n### **鸡兔同笼**\n\n```\na, b = input().split()\ndef print_num(a, b):\n    if a < 0 or b < 0:\n        print(\"Data Error!\")\n        return\n    rabbits = b/2 - a\n    chi = a - rabbits\n    if chi - int(chi) != 0 or chi < 0 or rabbits < 0:\n        print(\"Data Error!\")\n        return\n    print(f\"有{int(chi)}只鸡，{int(rabbits)}只兔\")\n    return\nprint_num(int(a),int(b))\n```\n\n### **物不知数**\n\n```\nn = int(input())\nres = list()\nfor i in range(n+1):\n    if i%3 == 2 and i%5 == 3 and i%7 == 2:\n        res.append(i)\nif res:\n    print(*res, sep=\"\\n\")\nelse:\n    print(\"No solution!\")\n```\n\n### 二鼠打洞\n\n```python\nn = int(input())\nrat, mouse, day, time = 1, 1, 0, 1 #大老鼠进度，小老鼠进度，相遇时间，第一天时间\ndistance_of_rat, distance_of_mouse = 0, 0  # 大老鼠和小老鼠的打洞距离\nwhile n > 0:\n    if n - mouse - rat < 0: #第一天打洞完成\n        time = n / (mouse + rat)    #算出需要时间\n    n = n - mouse - rat    #剩余墙厚\n    distance_of_mouse = distance_of_mouse + time * mouse\n    distance_of_rat = distance_of_rat + time * rat\n    rat = rat * 2    #大老鼠每天进度\n    mouse = mouse / 2    #小老鼠每天进度\n    day = day + 1    #时间过去一天\nprint(day)\nprint(round(distance_of_mouse, 1), round(distance_of_rat, 1))\n```\n\n### 宝塔上的琉璃灯\n\n```python\nfrom itertools import count\nfor first in count(1,1):\n    floors=[first*(2**i) for i in range(8)]\n    if sum(floors)==765:\n        for index,value in enumerate(floors,start=1):\n            print(f\'{value}\')\n        break\n```\n\n## **计算圆周率**\n\n### **蒙特卡洛法**\n\n```\nimport random\nsd = int(input())  # 随机数种子\nrandom.seed(sd)  # 设置随机数种子\nn = int(input())  # 随机点的数量\ncount = 0  # 落在圆内的点的数量\nfor i in range(n):\n    x, y = random.uniform(-1, 1), random.uniform(-1, 1)\n    if x**2 + y**2 <= 1:\n        count += 1\n\npi = count / n * 4\nprint(pi)\n```\n\n### 无穷级数法\n\n```\ndef leibniz_of_pi(error):\n    a = 1\n    b = 1\n    sum = 0\n    while 1/ b > error:\n        if a % 2 != 0:\n            sum += 1 / b\n        else:\n            sum -=  1/ b\n        a += 1\n        b += 2\n    pi = sum*4\n    return pi\nif __name__ == \'__main__\':\n    threshold = float(input())\n    print(\"{:.8f}\".format(leibniz_of_pi(threshold))) \n```\n\n# ', '可以白嫖，但不能当伸手党，密码是：站长的微信号', 'Python,头歌,作业,答案,Python123', 0, 1587, 0, 1, 'janxland', 0, 1, '2023-12-23 11:57:29', '2024-01-19 19:12:21', 'janx', 0);
INSERT INTO `article` VALUES (86, 1, 1, 16, 0001, 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python答案 字符串', NULL, '### 货币转换\n\n```\namount = input().strip()\ncurrency = amount[-1]\nif currency == \"$\":\n    exchange_rate = float(input())\nelif currency == \"￥\":\n    exchange_rate = 1 / float(input())\nelse:\n    print(\"Data error!\")\n    exit()\ntry:\n    amount = float(amount[:-1])\n    if amount < 0 or exchange_rate < 0:\n        raise ValueError\nexcept ValueError:\n    print(\"Data error!\")\n    exit()\nif currency == \"$\":\n    converted_currency = \"￥\"\nelse:\n    converted_currency = \"$\"\nconverted_amount = amount * exchange_rate\nprint(\"{:.2f}{}\".format(converted_amount, converted_currency))\n```\n\n### 字符串长度\n\n```\nstring = input()\nlength = len(string)\nprint(length)\n```\n\n### 加密字符串\n\n```\nimport string\nupperLetter = string.ascii_uppercase\ns = input().upper() # 输出做密钥的字符串\ncode = list(set(upperLetter) - set(s)) #\ncode.sort() # 重排序\nls = list(set(s))\nls.sort(key = s.index)  # 按输入字符串顺序重排序\nkeys = \'\'.join(ls + code)\ndecode = input().upper()  # 输入要加密的字符串\ntable = \'\'.maketrans(upperLetter, keys)  # 参数为原始字符串，替换字符串\nprint(decode.translate(table))\n```\n\n### 字符串移位\n\n```\ndef f(s,n):\n    p=\'\'\n    if s==\'\':\n        return p\n    t=(len(s)-n)%len(s)\n    p=s[t:]\n    p+=s[:t]  \n    return p\ns=input()\nn=int(input())\nprint(f(s,n))\n```\n\n### 字符串加密\n\n```\np = \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\'\ns = \'FGHIJKLMNOPQRSTUVWXYZABCDEdefghijklmnopqrstuvwxyzabc\'\nplaincode = input()  #输入明文\nciphertext = \'\'      #密文\nfor i in plaincode:\n    n = p.find(i)  #返回 i 在 字符串p中的位置序号，找不到时返回-1\n    if n == -1:  # 找不到意味着这个字符不是字母，直接加进去即可\n        ciphertext = ciphertext + i\n    else:\n        ciphertext = ciphertext + s[n]\nprint(ciphertext)\n```\n\n### 字符串压缩\n\n```\nimport re\ndict = {}\nls = []\ndef str_digit(word):\n    if bool(re.search(r\'\\d\', word)) == True:\n        print(\'ERROR\')\n        return True\n    else:\n        return False\ndef main():\n    word = input()\n    n = str_digit(word)\n    while n == False:\n        for key in word:\n            dict[key] = dict.get(key, 0) + 1\n        print(f\'{dict}\')\n        sum = 0\n        for i in dict:\n            sum += dict[i]\n        print(sum)\n        for key in dict:\n            if dict[key] == 1:\n                ls.append(key)\n                print(key, end=\'\')\n            else:\n                print(key + str(dict[key]), end=\'\')\n                ls.append(key)\n                ls.append(str(dict[key]))\n        sum_m = 0\n        for m in ls:\n            sum_m += len(m)\n        print(f\'\\n{sum_m}\')\n        break\nif __name__ == \"__main__\":\n    main()\n```\n\n### 字符串属性练习\n\n```\nid = input()    # 输入学号\nname = input()  # 输入姓名\nprint(id + name ) # 输出学号姓名，中间无空格\nprint(name * 5)   # 重复输出姓名5遍，中间无空格\ns = \'人都可以走路，也就是有一个走路方法\'  # \'走\'的序号为4\nn = int(input())  # 接收一个整数输入n\nprint(s[n])       # 输出字符串s中序号为n的字符\nprint(s[::2])     # 输出字符串s中序号为偶数的字符\nprint(s[::-1])    # 将字符串逆序输出\nprint(len(s))     # 输出字符串s的长度\nprint(len(s[n:])) # 输出字符串s中从序号n到字符串结尾包含的字符个数（包括序号为n的字符）\nprint(s.count(\'走路\'))  # 输出字符串s中子字符串‘走路’的个数\nprint(s.index(\'走\'))    # 输出字符串s中字符‘走’第一次出现的位置序号\ntest = input()          # 输入一个字符串\nprint(test in s)        # 测试test是否在s中存在，输出测试的结果\n#print(s.index(\'走路方法论\'))   # ValueError: substring not found\n```\n\n### 特殊数列求和\n\n```\nn = int(input())\nif n >= 10:\n    print(\"data error!\")\nelse:\n    sum = 0\n    s = \"\"\n    for i in range(1, n+1):\n        s += str(i)\n        sum += int(s)\n    print(sum)\n```\n\n### 字符大小写转换\n\n```\ns = input()\ns_new = \"\"\nfor c in s:\n    if c.islower():\n        s_new += c.upper()\n    elif c.isupper():\n        s_new += c.lower()\n    else:\n        s_new += c\nprint(s_new)\n```\n\n### 查找指定字符\n\n```\nch = input()\ns = input()\nif ch in s:\n    print(f\"index = {s.index(ch)}\")\nelse:\n    print(\"Not Found\")\n```\n\n### 模拟生成微软序列号\n\n```\nfrom random import *\nn = int(input())\ns = int(input())\nseed(s)\nc = \'BCEFGHJKMPQRTVWXY2346789\'\nfor i in range(n):\n    key = \'\'\n    for j in range(1, 26):\n        key += choice(c)\n        if j%5==0 and j!=25:\n            key += \'-\'\n    print(key)\n```\n\n### 判断火车票座位B（异常）\n\n```\ndef seat_numbers(seat):          \n    if not(seat[:-1].isdigit()):\n        return  False\n    if 1 <= int(seat[:-1]) <= 17 and seat[-1] in \'ABCDF\':\n        return True\n    else:\n        return False\ndef window_or_aisle(seat):       # 判定是窗口、过道还是中间\n    if seat[-1] in \'AF\':\n        return \'窗口\'\n    elif seat[-1] in \'CD\':\n        return \'过道\'\n    elif seat[-1] == \'B\':\n        return \'中间\'\nif __name__ == \'__main__\':\n    Seat = input().upper()\n    if seat_numbers(Seat):\n        print(window_or_aisle(Seat))\n    else:\n        print(\'输入错误\')\n```\n\n## 文本分析与加密\n\n### 第3关：计算偏移量\n\n```\nimport string\ndef offset_cal(day):\n    offset = sum([ord(ch) for ch in day]) % 26\n    return offset\nif __name__ == \'__main__\':\n    secret_word = input()\n    offset_number = offset_cal(secret_word)\n    print(offset_number)\n```\n\n### 第4关：凯撒密码加密\n\n```\nimport string  \ndef read_file(file):  \n    with open(file, \'r\', encoding=\'utf-8\') as f:  \n        return f.read()\ndef offset_cal(day):  \n    sum_of_ch = 0  \n    for c in day:  \n        sum_of_ch = sum_of_ch + ord(c)  \n    offset = sum_of_ch % 26  \n    return offset\ndef kaisa(txt, number):  \n    new_txt = \'\'  \n    for ch in txt:  \n        if ch in string.ascii_lowercase:  \n            new_ch = chr((ord(ch) - ord(\'a\') + number) % 26 + ord(\'a\'))  \n        elif ch in string.ascii_uppercase:  \n            new_ch = chr((ord(ch) - ord(\'A\') + number) % 26 + ord(\'A\'))  \n        else:  \n            new_ch = ch  \n        new_txt += new_ch  \n    return new_txt \nif __name__ == \'__main__\':  \n    filename = \'mayun.txt\'  # 读取的文件名  \n    text = read_file(filename)  # text为字符串  \n    secret_word = input()  \n    offset_number = offset_cal(secret_word)  \n    print(kaisa(text, offset_number))  \n```\n\n### 第2关：统计单词数量\n\n```\nimport string\ndef read_file(file):    \n   with open(file, \'r\', encoding=\'utf-8\') as f:      \n        return f.read()  \ndef word_list(txt):\n    for ch in \'!\"#$%&()*+,-.:;<=>?@[\\\\]^_’‘{|}~/\':\n        txt = txt.replace(ch, \' \')\n    return txt.split()\ndef number_of_words(ls):\n    return len(ls)\nif __name__ == \'__main__\':\n    filename = \'mayun.txt\'  # 读取的文件名\n    text = read_file(filename)  # text为字符串\n    words_list = word_list(text)  # 单词的列表\n    words_counts = number_of_words(words_list)\n    print(f\'共有{words_counts}单词\')\n```\n\n### 第1关：统计字符数量\n\n```\nimport string\ndef read_file(file):  \n    with open(file, \'r\') as f:\n        text = f.read()\n    return text\ndef classify_char(txt):  \n    upper_count = 0\n    lower_count = 0\n    digit_count = 0\n    space_count = 0\n    other_count = 0\n    for char in txt:\n        if char.isupper():\n            upper_count += 1\n        elif char.islower():\n            lower_count += 1\n        elif char.isdigit():\n            digit_count += 1\n        elif char.isspace():\n            space_count += 1\n        else:\n            other_count += 1\n            \n    return upper_count, lower_count, digit_count, space_count, other_count\nif __name__ == \'__main__\':  \n    filename = \'mayun.txt\'\n    text = read_file(filename)\n    print(*classify_char(text))\n```\n\n### 使用凯撒密码加密和解密英文文件\n\n```\nimport string\ndef judge(txt):\n    if txt == \'加密\':\n        file = input()\n        key_word = input()\n        print(caesar_cipher(read_txt(file), cal_offset(key_word)))  \n    elif txt == \'解密\':\n        file = input()\n        key_text = input()\n        print(caesar_decrypt(read_txt(file), find_offset(key_text, read_txt(file))))\n    else:\n        print(\'输入错误\')\ndef read_txt(file):\n    with open(file, \'r\') as temp:\n        return temp.read()\ndef caesar_cipher(text, offset):\n    lower = string.ascii_lowercase          # 小写字母\n    upper = string.ascii_uppercase          # 大写字母\n    digit = string.digits                # 数字\n    before = string.ascii_letters + digit\n    after = lower[offset:] + lower[:offset] + upper[offset:] + upper[:offset] + digit[offset:] + digit[:offset]\n    table = \'\'.maketrans(before, after)\n    caesar_cipher = text.translate(table)\n    return caesar_cipher\ndef caesar_decrypt(text, offset):\n    lower = string.ascii_lowercase          # 小写字母\n    upper = string.ascii_uppercase          # 大写字母\n    digit = string.digits                # 数字\n    before = string.ascii_letters + digit\n    after = lower[offset:] + lower[:offset] + upper[offset:] + upper[:offset] + digit[offset:] + digit[:offset]\n    table = \'\'.maketrans(after, before)\n    decrypt_text = text.translate(table)\n    return decrypt_text \ndef cal_offset(key_word):\n    s = 0\n    for i in key_word:\n        s = s + ord(i)\n    offset = s % 9\n    return offset\ndef find_offset(key_text, ciphertext):\n    offset = 0\n    for i in range(0,9):\n        if key_text in caesar_decrypt(ciphertext, i):\n            offset = i\n    return offset\nif __name__ == \'__main__\':\n    task = input()\n    judge(task)\n```\n\n## 单词猎手游戏\n\n### 第1关：字符串、列表随机取值\n\n```\nimport random\n \n \ndef read_file(file):\n    \"\"\"接收一个文件名为参数，读取文件中的内容为字符串类型，\n    替换字符串中的标点和符号为空格，根据空格将字符串切分为单词为元素的列表，\n    返回这个列表。\n    @参数 file:文件名，字符串类型\n    读取文件前先输出\'正在从文件加载单词列表...\'\n    转为列表后输出输出\'成功加载了多少个单词\' \"\"\"\n    print(\'正在从文件加载单词列表...\')\n    with open(file, \'r\', encoding=\'utf-8\') as novel:\n        txt = novel.read()\n    symbols = \'!\"#$%&()*+,-.:;[\\\'][\\\"]<=>?@[\\\\]^_‘{|}~/\'   #标点、符号 字符串\n \n    # 将所有符号替换为空格\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n    for i in symbols:\n        if i in txt:\n            txt = txt.replace(i, \" \")\n    #####################End#####################################\n \n    print(f\'成功加载{len(txt.split())}个单词\')\n    return txt.split()  # 切分为列表，返回列表\n \ndef secret_word(ls):\n    \"\"\"参数为从文件中读取的单词列表，返回值为随机得到的一个单词。\n    @参数 ls:单词列表，列表类型\n    在测试程序时，可以先预设一个有少数单词的列表，例如随机数种子为19730516时：\n    # >>> ls = [\'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\', \'Saturday\', \'Sunday\']\n    # >>> secret_word(ls)\n    # \'Monday\'\n    \"\"\"\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n  \n    return random.choice(ls)\n \n    #####################End#####################################\n \nif __name__ == \'__main__\':\n    test_seed = int(input())\n    random.seed(test_seed)\n    filename = \'data/gone with the wind.txt\'  # 文件名\n    wordlist = read_file(filename)\n    secretword = secret_word(wordlist)\n    print(secretword)\n```\n\n### 第2关：猜测目标单词\n\n```\ndef get_guessed_word(cover_word, word, letter):\n    \"\"\"接受三个字符串为参数：分别表示正在猜测的遮盖了字母的单词、随机抽取的单词和正在猜测的字母。\n    每次猜测后产生一个由猜中字母和下划线与空格组成的字符串，猜中的字母显示出来，未知字母用\"_\"\n    表示，字母间留一个空格。返回每次猜测后由字母和下划线组成的字符串。\n    @参数 cover_word：遮盖了字母的单词，字符串类型\n    @参数 word：随机抽取的单词，字符串类型\n    @参数 letter：正在猜测的字母，字符串类型\n    \"\"\"\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n    for i in range(len(word)):\n        if letter == word[i]:\n            cover_word = cover_word[:2*i] + letter + \" \" + cover_word[2*(i+1):]\n \n    #####################End#####################################\n    print(f\'当前猜测结果为：{cover_word}\')\n    return cover_word\n \nif __name__ == \'__main__\':\n    word = input()\n    print(f\'单词长度为{len(word)}\')  # 先提示用户单词长度\n    cover_word = \'_ \' * len(word)  # 产生一个由下划线与空格构成的字符串，每组下划线与空格代表一个字母\n    print(cover_word)\n    for i in range(1, 2 * len(word) + 1):  # 最多猜测2倍字母数次\n        print(f\'当前是第{i}次猜测，你还有{2 * len(word) - i}次机会\')\n        letter = input(\'请输入你猜测的字母：\')  # 输入猜测的字母\n        cover_word = get_guessed_word(cover_word, word, letter)\n        guess_word = cover_word.replace(\' \', \'\')\n        if guess_word == word:  # 替换字符串中的空格，查看是否猜中\n            print(f\'你太厉害了，居然只用了{i}次就猜中了单词\')\n            print(f\'秘密单词是：{guess_word}\')  # 猜中后输出时去掉单词中的空格\n            break\n```\n\n### 第3关：单词猎手游戏\n\n```\nimport random\ndef read_file(file):\n    \"\"\"接收一个文件名为参数，读取文件中的内容为字符串类型，\n    替换字符串中的标点和符号为空格，根据空格将字符串切分为单词为元素的列表，\n    返回这个列表。\n    @参数 file:文件名，字符串类型\n    读取文件前先输出\'正在从文件加载单词列表...\'\n    转为列表后输出输出\'成功加载了多少个单词\' \"\"\"\n    print(\'正在从文件加载单词列表...\')\n    with open(file, \'r\', encoding=\'utf-8\') as novel:\n        txt = novel.read()\n    symbols = \'!\"#$%&()*+,-.:;[\\\'][\\\"]<=>?@[\\\\]^_‘{|}~/\'\n    for ch in symbols:\n        txt = txt.replace(ch, \" \")  # 所有符号替换为空格\n    print(f\'成功加载{len(txt.split())}个单词\')\n    # print(txt.split())\n    return txt.split()  # 切分为列表，返回列表\n \n \ndef secret_word(ls):\n    \"\"\"参数为从文件中读取的单词列表，返回值为随机得到的一个单词。\n    @参数 ls:单词列表，列表类型\n    在测试程序时，可以先预设一个有少数单词的列表，例如随机数种子为19730516时：\n    # >>> ls = [\'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\', \'Saturday\', \'Sunday\']\n    # >>> secret_word(ls)\n    # \'Monday\'\n    \"\"\"\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n    word = random.choice(ls)\n    return word\n    #####################End#####################################\n \n \ndef get_guessed_word(cover_word, word, letter):\n    \"\"\"接受三个字符串为参数：分别表示正在猜测的遮盖了字母的单词、随机抽取的单词和正在猜测的字母。\n    每次猜测后产生一个由猜中字母和下划线与空格组成的字符串，猜中的字母显示出来，未知字母用\"_\"\n    表示，字母间留一个空格。返回每次猜测后由字母和下划线组成的字符串。\n    @参数 cover_word：遮盖了字母的单词，字符串类型\n    @参数 word：随机抽取的单词，字符串类型\n    @参数 letter：正在猜测的字母，字符串类型\n    \"\"\"\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n    for i in range(len(word)):\n        if letter == word[i]:\n            cover_word = cover_word[:2*i] + letter + \" \" + cover_word[2*(i+1):]\n    #####################End#####################################\n    print(f\'当前猜测结果为：{cover_word}\')\n    return cover_word\ndef word_guess(word):\n    \"\"\"以随机抽取的秘密单词为参数，参数类型为字符串。\n    @参数 word：随机抽取的秘密单词，字符串类型\n    先输出一个单词长度的提示信息，产生一个由下划线与空格构成的字符串，每组下划线与空格代表一个字母\n    限制用户最多猜测次数为单词长度的2倍\n    每次猜测并输入一个字母，调用get_guessed_word()函数对猜测进行处理。\n    然后回车换行，并按题目要求进行输出。\n    若去除处理后的单词中的空格后得到的单词与传入参数相同，表示已经猜中了秘密单词。\n    例如秘密单词为\'Tuesday\',且用户在6次猜测时猜中了单词中的全部字母，此时输出：\n    你太厉害了，居然只用了6次就猜中了单词\n    秘密单词是：Tuesday\n    \'\"\"\"\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n    print(f\'单词长度为{len(word)}\')  # 先提示用户单词长度\n    cover_word = \'_ \' * len(word)  # 产生一个由下划线与空格构成的字符串，每组下划线与空格代表一个字母\n    print(cover_word)\n    for i in range(1, 2 * len(word) + 1):  # 最多猜测2倍字母数次\n        print(f\'当前是第{i}次猜测，你还有{2 * len(word) - i}次机会\')\n        letter = input(\'请输入你猜测的字母：\')  # 输入猜测的字母\n        cover_word = get_guessed_word(cover_word, word, letter)\n        guess_word = cover_word.replace(\' \', \'\')\n        if guess_word == word:  # 替换字符串中的空格，查看是否猜中\n            print(f\'你太厉害了，居然只用了{i}次就猜中了单词\')\n            print(f\'秘密单词是：{guess_word}\')  # 猜中后输出时去掉单词中的空格\n            return guess_word\n    else:\n        print(f\'太遗憾了，你未能在{2 * len(word)}次内猜出单词\')\n        return cover_word\n    ####################End#####################################\ndef judge(txt):\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    test_seed = int(input())\n    random.seed(test_seed)\n    filename = \'data/gone with the wind.txt\'  # 文件名\n    wordlist = read_file(filename)\n    secretword = secret_word(wordlist)\n    if txt == \'选词\':       # 输出抽中的单词\n        #####################Begin#####################################\n        # 此处去掉注释符号“#”并补充你的代码\n        print(secretword)\n        #####################End#####################################\n    elif txt == \'模板\':     # 输出猜词模板，形如：_ _ _ _ _ _\n        #####################Begin#####################################\n        # 此处去掉注释符号“#”并补充你的代码\n        print(\'_ \' * len(secretword))\n        #####################End#####################################\n    elif txt == \'开始填词\':\n        word_guess(secretword)\n    else:\n        print(\'输入错误\')\nif __name__ == \'__main__\':\n    text = input()\n    judge(text)\n```\n\n### 摩斯密码\n\n```\ndef morse_code_encryption(txt):\n    dic = {\'a\': \'.-\', \'b\': \'-...\', \'c\': \'-.-.\', \'d\': \'-..\', \'e\': \'.\', \'f\': \'..-.\',\n           \'g\': \'--.\', \'h\': \'....\', \'i\': \'..\', \'j\': \'.---\', \'k\': \'-.-\', \'l\': \'.-..\',\n           \'m\': \'--\', \'n\': \'-.\', \'o\': \'---\', \'p\': \'.--.\', \'q\': \'--.-\', \'r\': \'.-.\',\n           \'s\': \'...\', \'t\': \'-\', \'u\': \'..-\', \'v\': \'...-\', \'w\': \'.--\', \'x\': \'-..-\',\n           \'y\': \'-.--\', \'z\': \'--..\', \' \': \' \'}\n    num = len(txt)\n    Morsecode = \'\'\n    for i in range(num):\n        if txt[i] in dic:\n            Morsecode += str(dic[txt[i]])\n    return Morsecode\nif __name__ == \'__main__\':\n    plaintext = input().lower()  # 输入一个字符串并转为小写\n    print(morse_code_encryption(plaintext))  # 调用函数，并输出返回值\n```\n\n### 个人信息提取\n\n```\nimport string\nstr = input()\nname = str[14:16]\nclassname = str[17:23]\nbirth = \'\'\nfor i in range(27, len(str) - 4):\n        if str[i:i + 4].isdigit():\n            birth = birth + str[i:i + 4]\nprint(\'姓名：\' + name + \'\\n\' + \'班级：\' + classname + \'\\n\' + \'出生：\' + birth + \'年\')\n```\n\n### 校验身份证号码并输出个人信息\n\n```\nimport datetime\ndef check_num(id):  # 检查长度和校验位是否合法\n    factor1 = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n    factor2 = [\'1\', \'0\', \'X\', \'9\', \'8\', \'7\', \'6\', \'5\', \'4\', \'3\', \'2\']\n    f_sum,n = 0,0\n    if len(id) == 18:\n        for i in id[:-1]:\n            f_sum += int(i)*factor1[n]\n            n+=1\n        if id[-1] == factor2[f_sum % 11]:\n            return True\n        else:\n            return False\n    else:\n        return False\n \ndef check_date(id): # 检查日期是否合法\n    year,month,day = map(int,[id[6:10],id[10:12],id[12:14]])\n    try:    # 捕捉异常，如果日期不合法则无法转换，直接报错\n        datetime.date(year,month,day)\n        return True\n    except:\n        return False\ndef main():\n    id = input()\n    if check_num(id) and check_date(id):\n        print(\'身份证号码校验为合法号码\')\n        print(\'出生：{}年{}月{}日\'.format(id[6:10],id[10:12],id[12:14]))\n        if int(id[16])%2 == 1:\n            print(\'性别：男\')\n        else:\n            print(\'性别：女\')\n    else:\n        print(\'身份证校验错误\')\nif __name__ == \'__main__\':\n    main()\n```\n\n### 模拟砍价\n\n```\na,b = input().split(\',\')\n \nimport random\n \nrandom.seed(int(b))\n \na = int(a)\nb= a\ncnt = 0\nwhile a>0:\n    a = a- random.randint(0,int(b/10))\n    cnt+=1\nprint(cnt)\n```\n\n### 随机密码生成器（未通过）\n\n```\nimport random\ndef generate_password(length, seed):\n    random.seed(seed)\n    characters = \'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&()*+,-.\'\n    password = \'\'\n    for _ in range(length):\n        password += random.choice(characters)\n    return password\n\ninput_str = input()\nlength, seed = map(int, input_str.split(\',\'))\npassword = generate_password(length, seed)\nprint(password)\n```\n\n', '可以白嫖，但不能当伸手党，密码是：站长的微信号', 'Python,头歌,作业,答案,Python123', 0, 1472, 0, 1, 'janxland', 0, 1, '2023-12-23 11:58:49', '2024-01-19 19:12:21', 'janx', 0);
INSERT INTO `article` VALUES (87, 1, 1, 16, 0001, 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python答案 序列类型', NULL, '### 列表的属性与方法\n\n```\nlst = []  # 初始化空列表\n\nn = int(input())  # 输入正整数 n\n\nfor _ in range(n):\n    command = input().split()  # 输入命令并按空格分割\n    if command[0] == \"insert\":\n        i = int(command[1])\n        e = int(command[2])\n        lst.insert(i, e)\n    elif command[0] == \"print\":\n        print(lst)\n    elif command[0] == \"remove\":\n        e = int(command[1])\n        lst.remove(e)\n    elif command[0] == \"append\":\n        e = int(command[1])\n        lst.append(e)\n    elif command[0] == \"sort\":\n        lst.sort()\n    elif command[0] == \"pop\":\n        lst.pop()\n    elif command[0] == \"reverse\":\n        lst.reverse()\n```\n\n### 推导式与生成器\n\n```\nn=eval(input())\nif n==1:\n    s=list(map(lambda x: x**3,range(0,10)))\n    print(s)\nelif n==2:\n    l=[]\n    for i in range(0,10):\n        if i%2==0:\n            l.append(i)  \n    s=list(map(lambda x: x**3,l))\n    print(s)\nelif n==3:\n    l=[]\n    for i in range(0,10):\n        if i%2==1:\n            p=(i,i**3)\n            l.append(p)  \n    print(l)\nelif n==4: \n    l=[\'the lord of the rings\',\'anaconda\',\'legally blonde\',\'gone with the wind\']\n    s=list(map(lambda x:x.capitalize(),l))\n    print(s)\nelse:\n    print(\"End of the program\")\n```\n\n### 列表的合并与排序\n\n```\nlist1 = list(map(int, input().split()))\nlist2 = list(map(int, input().split()))\nmerged_list = list1 + list2\nmerged_list.sort(reverse=True)\nprint(merged_list)\n```\n\n### 二维列表排序\n\n```\nm = int(input())\nn = int(input())\n\n# 列表一排序\nlist1 = [(\'dungeon\', 7), (\'winterfell\', 4), (\'bran\', 9), (\'meelo\', 6)]\nsorted_list1 = sorted(list1, key=lambda x: x[1])[:m]\n\n# 列表二按第一个元素值排序\nlist2 = [[\'Angle\', \'0121701100106\', 99], [\'Jack\', \'0121701100107\', 86], [\'Tom\', \'0121701100109\', 65],\n         [\'Smith\', \'0121701100111\', 100], [\'Bob\', \'0121701100115\', 77], [\'Lily\', \'0121701100117\', 59]]\nsorted_list2_by_first = sorted(list2, key=lambda x: x[0])[:n]\n\n# 列表二按第三个元素值排序\nsorted_list2_by_third = sorted(list2, key=lambda x: x[2])[:n]\n\n# 输出结果\nprint(sorted_list1)\nprint(sorted_list2_by_first)\nprint(sorted_list2_by_third)\n```\n\n### 个人数据脱敏\n\n```\ndef tuomin(s):\n    l_info=s.split(\" \")\n \n    l_num=list(l_info[0])\n    l_name=list(l_info[1])\n    l_numPh=list(l_info[2])\n \n    l_num[4:11]=[\'*\',\'*\',\'*\',\'*\',\'*\',\'*\',\'*\']\n    l_name[1]=\'*\'\n    l_numPh[3:7]=[\'*\',\'*\',\'*\',\'*\']\n \n    l=[]\n \n    l.append(\"\".join(l_num))\n    l.append(\"\".join(l_name))\n    l.append(\"\".join(l_numPh))\n    return l\n \nn=input()\nif n.isdigit():\n    n=int(n)\n    l=[tuomin(input()) for i in range(n)]\n    print(l)\nelse:\n    print(\"ERROR\")\n```\n\n### 列表删除数据\n\n```\nls = list(map(int, input().split()))\nn = int(input())\nif n in ls:\n    ls = [x for x in ls if x != n]\n    print(ls)\nelse:\n    print(\"NOT FOUND\")\n```\n\n### 年龄最大的人\n\n```\nimport datetime\nlist_time = []\nchuo=[]\na = input()\nwhile a:   # 当获取到空串时停止获取输入\n    list_time.append(a)\n    a = input()\n#print(list_time)\nfor time in list_time:\n    time1=datetime.datetime.strptime(time,\'%Y-%m-%d\').timestamp()#转化为时间戳\n    chuo.append(time1)\n    chuo1=sorted(chuo)\nindex=chuo.index(chuo1[0])\nprint(list_time[index])\n```\n\n### 插入位置\n\n```\nnums = input().split()  # 输入有序整数序列，以空格分隔\nn = int(input())  # 输入要插入的整数\nls = [int(num) for num in nums]  # 转换为整数列表\n\nif n in ls:\n    print(\'Fail\')\n    print(ls)\nelse:\n    for i in range(len(ls)):\n        if ls[i] > n:\n            ls.insert(i, n)\n            print(i)\n            print(ls)\n            break\n    else:\n        ls.append(n)\n        print(len(ls) - 1)\n        print(ls)\n```\n\n### 两数之和\n\n```\nnums = input().split()\nnums = [int(num) for num in nums]\ntarget = int(input())\n\ndef twoSum(nums, target):\n    n = len(nums)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if nums[i] + nums[j] == target:\n                return [i, j]\n    return []\n\nresult = twoSum(nums, target)\nif result:\n    print(result[0], result[1])\nelse:\n    print(\"Fail\")\n```\n\n### 摩尔斯电码转换\n\n```\nmorse_code = [\n    \".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\",\n    \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\"\n]\n\ndef convert_to_morse_code(sentence):\n    morse_sentence = \"\"\n    for char in sentence:\n        if char.isalpha():  # 仅对字母进行编码转换\n            index = ord(char.upper()) - ord(\'A\')\n            morse_sentence += morse_code[index]\n        else:\n            morse_sentence += char\n    return morse_sentence.strip()\n\ninput_sentence = input()\nmorse_sentence = convert_to_morse_code(input_sentence)\nprint(morse_sentence)\n```\n\n### 约瑟夫环问题（未过\n\n```\ndef josephus(n, k):\n    if k < 2 or n < k:\n        return \"Data Error!\"\n\n    people = list(range(1, n+1))\n    result = []\n    index = k - 1\n\n    while len(people) > 0:\n        index = (index + k - 1) % len(people)\n        result.append(people.pop(index))\n\n    return result\n\n# 从输入读取数据\ninput_str = input()\nn, k = map(int, input_str.split())\n\n# 调用函数计算结果\noutput = josephus(n, k)\n\n# 输出结果\nprint(output)\n```\n\n### 不定方程求解\n\n```\ndef find_integer_solutions(a, b, c):\n    solutions = []\n    count = 0\n    for x in range(c // a + 1):\n        y = (c - a * x) / b\n        if y.is_integer() and y >= 0:\n            solutions.append([x, int(y)])\n            count += 1\n    return solutions, count\n\n# 读取输入\na, b, c = map(int, input().split())\n\n# 求解不定方程的非负整数解\nsolutions, count = find_integer_solutions(a, b, c)\n\n# 输出结果\nprint(solutions)\nprint(count)\n```\n\n### 文本分析（1）——统计文件中的字符\n\n```\nimport string\ndef read_file(file):\n    \"\"\"接收文件名为参数，读取文件中的数据到字符串中，返回这个字符串\"\"\"\n    with open(file, \'r\', encoding=\'utf-8\') as f:\n        return f.read()\ndef classify_char(txt):\n    \"\"\"接收字符串为参数，依序返回大写字母、小写字母、数字、空格、和其他字符数量\"\"\"\n    upper, lower, digit, a_space, other = 0, 0, 0, 0, 0\n    for ch in txt:\n        if ch.islower():\n            lower = lower + 1\n        elif ch.isupper():\n            upper = upper + 1\n        elif ch.isnumeric():\n            digit = digit + 1\n        elif ch==\" \":\n            a_space = a_space + 1\n        else:\n            other = other + 1\n    return upper, lower, digit, a_space, other\n\nif __name__ == \'__main__\':\n    filename = input()  # 读入文件名\n    text = read_file(filename)\n    classify = classify_char(text)\n    print(\'大写字母{}个,小写字母{}个,数字{}个,空格{}个,其他{}个\'.format(*classify))\n# 大写字母117个,小写字母3011个,数字29个,空格745个,其他163个\n```\n\n## 葡萄酒评论分析报告\n\n### 第1关：葡萄酒评论分析报告——国家列表和平均分\n\n```\nimport pandas as pd\n \n# 定义符号常量，用于索引，使之具有清晰的语义\nCOUNTRY = 1\nPOINTS = 3\n \n \ndef csv_to_ls(file):\n    \"\"\"接收文件名为参数，用pandas读取文件中的数据，数据部分转为二维列表类型，返回二维列表。\"\"\"\n    wine_list = pd.read_csv(file).values.tolist()\n    return wine_list\n \n \ndef country_ls(wine_list):\n    \"\"\"接收列表格式的葡萄酒数据为参数，略过标题行，返回不重复的国家名列表，按字母表升序排序，\n    若国家名数据缺失，略过该条数据，返回值中不包含空字符串元素。\n    @参数 wine_list：葡萄酒数据，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    country_list = []\n    for x in wine_list:\n        if x[COUNTRY] not in country_list:\n            country_list.append(x[COUNTRY])\n    country_list.sort()\n    return country_list\n \n \ndef avg_point(wine_list, country):\n    \"\"\"接收列表格式的葡萄酒数据和国家名列表为参数，计算每个国家的葡萄酒的平均得分，\n    返回值为国家名和得分的列表。\n    @参数 wine_list：葡萄酒数据，列表类型\n    @参数 country：国家名，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    score=[]\n    for i in range(len(country)):\n        n=0\n        count=0\n        for j in wine_list:\n            if country[i]==j[1]:\n                n+=float(j[-3])\n                count+=1\n        score.append([country[i],round(n/count,2)])\n    ls=sorted(score,key=lambda x:x[0], reverse=False)\n    return ls\n \ndef judge(txt):\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    filename = \'data/winemag-data.csv\'\n    wine = csv_to_ls(filename)\n    country = country_ls(wine)\n    if txt == \'国家名列表\':\n        print(country)\n    elif txt == \'平均分\':\n        print(avg_point(wine, country))  # 每个国家的葡萄酒的平均得分\n    else:\n        print(\'输入错误\')\n \n \nif __name__ == \'__main__\':\n    text = input()\n    judge(text)\n```\n\n### 第2关：葡萄酒评论分析报告——平均分排序和评分最高\n\n```\nimport pandas as pd\nimport math\n \n# 定义符号常量，用于索引，使之具有清晰的语义\nNUMBER = 0\nCOUNTRY = 1\nDESCRIPTION = 2\nPOINTS = 3\nPRICE = 4\n \n \ndef csv_to_ls(file):\n    \"\"\"接收文件名为参数，用pandas读取文件中的数据，数据部分转为二维列表类型，返回二维列表。\"\"\"\n    wine_list = pd.read_csv(file).values.tolist()\n    return wine_list\n \n \ndef country_ls(wine_list):\n    \"\"\"接收列表格式的葡萄酒数据为参数，略过标题行，返回不重复的国家名列表，按字母表升序排序，\n    若国家名数据缺失，略过该条数据，返回值中不包含空字符串元素。\n    @参数 wine_list：葡萄酒数据，列表类型\n    \"\"\"\n    country_list = []\n    for x in wine_list:\n        if x[COUNTRY] not in country_list:\n            country_list.append(x[COUNTRY])\n    country_list.sort()\n    # print(country_list)\n    return country_list\n \n \ndef avg_point_sort(wine_list, country):\n    \"\"\"接收列表格式的葡萄酒数据和国家名列表为参数，计算每个国家的葡萄酒的平均得分，\n    返回值为国家名和得分的列表，按评分由高到低降序排列。\n    @参数 wine_list：葡萄酒数据，列表类型\n    @参数 country：国家名，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    score=[]\n    for i in range(len(country)):\n        n=0\n        count=0\n        for j in wine_list:\n            if country[i]==j[1]:\n                n+=float(j[-3])\n                count+=1\n        score.append([country[i],round(n/count,2)])\n    ls=sorted(score,key=lambda x:x[1], reverse=True)\n    return ls\ndef top_10_point(wine_list):\n    \"\"\"接收列表格式的葡萄酒数据参数，返回评分最高的十款葡萄酒的编号、出产国、评分和价格，按评\n    分降序输出。\n    需要注意的是评分可能有缺失值，此时该数据为nan\n    if math.isnan(x) == False可用于判定x的值是不是nan\n    nan的数据类型是float,不可以直接用字符串判定方法。\n    @参数 wine_list：葡萄酒数据，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    list1=[]\n    for i in wine_list:\n        if math.isnan(float(i[-3]))==False:\n            list1.append(i)\n    list2=sorted(list1,key=lambda x:x[-3],reverse=True)\n    list3=[]\n    count=1\n    for k in list2:\n        if count<11:\n            list3.append([k[-6],k[-5],k[-3],k[-2]])\n            count+=1\n    return list3\ndef judge(txt):\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    filename = \'data/winemag-data.csv\'\n    wine = csv_to_ls(filename)\n    country = country_ls(wine)\n    if txt == \'平均分排序\':\n        print(avg_point_sort(wine, country))  # 每个国家的葡萄酒的平均得分降序输出\n    elif txt == \'评分最高\':\n        print(top_10_point(wine))  # 评分最高的十款葡萄酒的编号、出产国、评分和价格，按评分降序输出\n    else:\n        print(\'输入错误\')\nif __name__ == \'__main__\':\n    text = input()\n    judge(text)\n```\n\n### 第3关：葡萄酒评论分析报告——价格最高和葡萄酒评分\n\n```\nimport pandas as pd\nimport math\n \n# 定义符号常量，用于索引，使之具有清晰的语义\nNUMBER = 0\nCOUNTRY = 1\nPOINTS = 3\nPRICE = 4\n \n \ndef csv_to_ls(file):\n    \"\"\"接收文件名为参数，用pandas读取文件中的数据，数据部分转为二维列表类型，返回二维列表。\"\"\"\n    wine_list = pd.read_csv(file).values.tolist()\n    return wine_list\n \n \ndef top_20_price(wine_list):\n    \"\"\"接收列表格式的葡萄酒数据参数，返回价格最高的二十款葡萄酒的编号、出产国、评分和价格，按价\n    格降序输出。\n    @参数 wine_list：葡萄酒数据，列表类型\n    需要注意的是价格可能有缺失值，此时该数据为nan\n    if math.isnan(x) == False可用于判定x的值是不是nan\n    nan的数据类型是float,不可以直接用字符串判定方法。\n    \"\"\"\n    # 此处补充你的代码\n    list1=[]\n    for i in wine_list:\n        if math.isnan(float(i[-2]))==False:\n            list1.append(i)\n    list2=sorted(list1,key=lambda x:x[-2],reverse=True)\n    list3=[]\n    count=1\n    for k in list2:\n        if count<21:\n            list3.append([k[-6],k[-5],k[-3],k[-2]])\n            count+=1\n    return list3\n \ndef amount_of_point(wine_list):\n    \"\"\"接收列表格式的葡萄酒数据参数，返回每个评分的葡萄酒数量，忽略没有评分的数据\n    例如[...[84, 645], [85, 959],...]表示得分为84的葡萄酒645种，得分85的葡萄酒有959种。\n    @参数 wine_list：葡萄酒数据，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    score_list = []\n    list1 = []\n    count = 0\n    for x in wine_list:\n        if x[-3] not in score_list:\n            score_list.append(x[-3])\n    score_list.sort()\n    for i in score_list:\n        count = 0\n        for j in wine_list:\n            if i == int(j[-3]):\n                count += 1\n        list1.append([i, count])\n    return list1\n \n \ndef most_of_point(amount_of_points):\n    \"\"\"接收每个评分的葡萄酒数量的列表为参数，返回获得该分数数量最多的评分和数量的列表。\n    @参数 amount_of_points：每个评分的葡萄酒数量，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    list1 = sorted(amount_of_points, key=lambda x: x[1], reverse=True)\n    return list1[0]\n \n \ndef avg_price_of_most_point(wine_list, most_of_points):\n    \"\"\"接收列表格式的葡萄酒数据和获得最多的评分及数量的列表为参数\n    忽略缺失价格的数据，返回这个分数的葡萄酒的平均价格，保留2位小数。\n    @参数 wine_list：葡萄酒数据，列表类型\n    @参数 most_of_points：获得最多的评分及数量，列表类型\n    \"\"\"\n    # 此处补充你的代码\n    sum = 0\n    m = 0\n    for i in wine_list:\n        if most_of_points[0] == int(i[-3]):\n            if math.isnan(float(i[-2])) == False:\n                sum += float(i[-2])\n                m += 1\n    return round(sum / m, 2)\n \n \ndef judge(txt):\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    filename = \'data/winemag-data.csv\'\n    wine = csv_to_ls(filename)\n    if txt == \'价格最高\':\n        print(top_20_price(wine))  # 价格最高的二十款葡萄酒的编号、出产国、评分和价格，按价格降序输出\n    elif txt == \'葡萄酒评分\':\n        amount_point = amount_of_point(wine)\n        most_point = most_of_point(amount_point)\n        print(amount_point)  # 各个评分的葡萄酒数量\n        print(most_point)  # 拥有葡萄酒数量最多的评分和数量\n        print(avg_price_of_most_point(wine, most_point))  # 拥有葡萄酒数量最多的评分的葡萄酒的平均价格\n    else:\n        print(\'输入错误\')\n \n \nif __name__ == \'__main__\':\n    text = input()\n    judge(text)\n```\n\n## 扑克牌游戏\n\n### 第1关：按顺序输出新牌\n\n```\n \ndef start():\n    \"\"\"初始顺序，返回元素为字符串的列表\"\"\"\n    ########## Begin ##########\n    list = []\n    for i in desigh:\n        for n in num:\n            list.append(i+n)\n    return list + ghost\n    ########## End ##########\n \nif __name__ == \'__main__\':\n    desigh = [\'♠\', \'♥\', \'♣\', \'♦\']  # 表示黑桃、红桃、梅花、方块\n    num = [\'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\', \'10\', \'J\', \'Q\', \'K\', \'A\']\n    ghost = [\'jokers\', \'JOKERS\']\n    cards = start()\n    print(\'新牌顺序\')\n    print(*cards)\n```\n\n### 第2关：按洗好的顺序输出洗过的牌\n\n```\nimport random\n \n \ndef shuffle_cards(cards_start):\n    \"\"\"打乱顺序，返回元素为字符串的列表\"\"\"\n    ########## Begin ##########\n    random.shuffle(cards_start)\n    return cards_start\n    ########## End ##########\n \ndef start():\n    \"\"\"初始顺序，返回元素为字符串的列表\"\"\"\n    cards_start = [i + j for i in desigh for j in num] + ghost  \n    return cards_start  \n \n \nif __name__ == \'__main__\':\n    desigh = [\'♠\', \'♥\', \'♣\', \'♦\']  # 表示黑桃、红桃、梅花、方块\n    num = [\'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\', \'10\', \'J\', \'Q\', \'K\', \'A\']\n    ghost = [\'jokers\', \'JOKERS\']\n    s = int(input())\n    random.seed(s)\n    cards = start()\n    cards_after = shuffle_cards(cards)\n    print(\'洗牌顺序\')\n    print(*cards_after)\n```\n\n### 第3关：按分牌的顺序输出每个人手上的牌\n\n```\nimport random\n \n \ndef traver(cards_shuffle, m):\n    \"\"\"发牌给m个人,返回二维列表\"\"\"\n    ########## Begin ##########\n    palyerlist = []\n    for i in range(m):\n        palyerlist.append(cards_after[i::m])\n    return palyerlist\n    \n    ########## End ##########\n \ndef start():\n    \"\"\"初始顺序，返回元素为字符串的列表\"\"\"\n    cards_start = [i + j for i in desigh for j in num] + ghost\n    return cards_start\n \n \ndef shuffle_cards(cards_start):\n    \"\"\"打乱顺序，返回元素为字符串的列表\"\"\"\n    random.shuffle(cards_start)\n    return cards_start\n \nif __name__ == \'__main__\':\n    desigh = [\'♠\', \'♥\', \'♣\', \'♦\']  # 表示黑桃、红桃、梅花、方块\n    num = [\'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\', \'10\', \'J\', \'Q\', \'K\', \'A\']\n    ghost = [\'jokers\', \'JOKERS\']\n    n = int(input())  # 输入参与游戏的人数\n    s = int(input())\n    random.seed(s)\n    print(f\'参与游戏的人数：{n}\')\n    cards = start()\n    cards_after = shuffle_cards(cards)\n    cards_n = traver(cards_after, n)\n    print(\'每个人手上分到的牌\')\n    for i in range(n):\n        print(*cards_n[i])\n```\n\n### 第4关：输出每个人手上升序排序的牌\n\n```\nimport random\n \n \ndef sort_cards(person, m):\n    \"\"\"对m个人手上的牌进行升序排序，花色按黑红梅方，牌面按点数，大王最大，小王第二大\"\"\"\n    ########## Begin ##########\n    desighs = {\'♠\': 1, \'♥\': 2, \'♣\': 3, \'♦\': 4, \'j\': 5, \'J\': 6}  # 表示黑桃、红桃、梅花、方块\n    nums = {\'2\': 2, \'3\': 3, \'4\': 4, \'5\': 5, \'6\': 6, \'7\': 7, \'8\': 8, \'9\': 9, \'10\': 10, \'J\': 11, \'Q\': 12, \'K\': 13,\n            \'A\': 14, \'okers\': 15, \'OKERS\': 16}\n    list = []\n    for i in person:\n        result_list = sorted(i, key=lambda x: (desighs[x[0]], nums[x[1:]]))\n        list.append(result_list)\n    return list\n \n########## End ##########\n \ndef start():\n    \"\"\"初始顺序，返回元素为字符串的列表\"\"\"\n    cards_start = [i + j for i in desigh for j in num] + ghost\n    return cards_start\n \n \ndef shuffle_cards(cards_start):\n    \"\"\"打乱顺序，返回元素为字符串的列表\"\"\"\n    random.shuffle(cards_start)\n    return cards_start\n \n \ndef traver(cards_shuffle, m):\n    \"\"\"发牌给m个人,返回二维列表\"\"\"\n    person = []\n    for i in range(m):\n        person.append(cards_shuffle[i::m])\n    return person\n \n \nif __name__ == \'__main__\':\n    desigh = [\'♠\', \'♥\', \'♣\', \'♦\']  # 表示黑桃、红桃、梅花、方块\n    num = [\'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\', \'10\', \'J\', \'Q\', \'K\', \'A\']\n    ghost = [\'jokers\', \'JOKERS\']\n    n = int(input())  # 输入参与游戏的人数\n    s = int(input())\n    random.seed(s)\n    print(f\'参与游戏的人数：{n}\')\n    cards = start()\n    cards_after = shuffle_cards(cards)\n    cards_n = traver(cards_after, n)\n    cards_sort = sort_cards(cards_n, n)\n    print(\'每个人手上排序的牌\')\n    for i in range(n):\n        print(*cards_sort[i]) \n```\n\n### 分配学号\n\n```\n# read_file()函数帮助你读取文件到列表，直接调用就可以，此段不需修改\ndef read_file(filename):\n    \"\"\"接收一个文件名为参数，数据类型为字符串类型，文件编码为utf-8，\n    返回值为列表，列表元素为将文件每一行根据逗号切分成的列表\"\"\"\n    with open(filename, \'r\', encoding=\'utf-8\') as file: \n        file_to_list = [line.strip().split(\',\') for line in file] \n    # 文件全部内容读取出来放入列表中，每个元素为一行字符串\n    return file_to_list           # 以列表形式返回文件中的数据\n \n \ndef student_id(ls_student, ls_school, ls_major): \n    \"\"\"参数为三个文件对象，依序分别由读学生信息、学院信息和专业信息文件获得。返回值为列表，为包含了新生成的学号的学生信息列表。\"\"\"\n    dic_school = {x[0]: x[1] for x in ls_school} # 构建学院字典    \n    dic_major = {x[0]: x[1] for x in ls_major}   # 构建专业字典    \n    student_detail = []\n    ###########################Begin###########################\n    for student in ls_student: \n        id = \'012\' \n        id = id + student[5][2:] + dic_school[student[2]] + dic_major[student[3]] + student[4][-4:]\n        id = id +  \'{0:0>2}\'.format([x[0] for x in ls_student if student[4] == x[4]].index(student[0]) + 1) \n        student_detail.append([id] + student)\n    ############################End############################\n    return student_detail      # 返回加了学号的学生信息列表\n \n \ndef student_info(stu_name, ls_student):\n    \"\"\"参数为学生名字字符串和学生的信息列表，返回值为该学生的详细信息\"\"\"\n    ###########################Begin###########################\n    info = [info for info in ls_student if info[1] == stu_name][0]\n    return info                                                  \n    ############################End############################\n \ndef classmate(stu_class, ls_student):\n    \"\"\"参数为学生班级和学生信息列表，返回值为同班同学的信息列表\"\"\"\n    ###########################Begin###########################\n    classmate = [info for info in ls_student  if info[5] == stu_class]\n    return classmate      \n    ############################End############################\n \nif __name__ == \'__main__\':\n    stuName = input()                                                  # 输入学生姓名\n    stuClass = input()                                                 # 输入班级\n    student_list = read_file(\'step1/studentList.csv\')[1:]           # 获得学生信息列表\n    school_code = read_file(\'step1/schoolCode.csv\')                 # 获得学院信息列表\n    major_code = read_file(\'step1/MajorCode.csv\')                   # 获得专业信息列表\n    studentDetail = student_id(student_list, school_code, major_code)  # 调用函数计算ID并插入到列表中\n    print(*student_info(stuName, studentDetail))                       # 输出学生信息\n    ls_classmate = classmate(stuClass, studentDetail)                  # 返回同班同学信息列表\n    for classmate in ls_classmate:                                     # 逐个输出同学信息\n        print(*classmate)\n```\n\n### 动物重量排序\n\n```\nlist1 = []         #定义空列表\nwhile 1:           #循环输入\n    a = input().split() #input().split()一般默认空格或者换行输入\n    if len(a) == 0:     #如果输入为空的时候回车\n        break\n    else:\n        list1.append(a) #将输入按字符串的形式加入二维列表\n#sorted(序列, key = 函数)\nlist2 = sorted(list1, key = lambda x:float(x[1][:-1])*1000 if x[1][-1] == \'t\' \nelse float(x[1][:-2]))\nprint(list2)\n```\n\n### 绝对值排序\n\n```\nlist1=eval(input())\nlist1.sort(key=lambda x:(abs(x),x),reverse=True)\nprint(\',\'.join(map(str,list1)))\n```\n\n### 文本分析（2）——统计英文文件中的单词数\n\n```\ndef read_file(file):\n    \"\"\"接收文件名为参数，读取文件中的数据到字符串中，返回这个字符串\"\"\"\n    with open(file, \'r\', encoding=\'utf-8\') as text:\n        txt =text.read()\n    return txt\n \n \n \ndef word_list(txt):\n    \"\"\"接收字符串为参数，用空格替换字符串中所有标点符号，根据空格将字符串切分为列表\n    返回值为元素为单词的列表\"\"\"\n    import re\n    txt_nopunc = re.sub(r\'[^\\w\\s]\',\' \',txt)  # 将字符串中的标点符号替换为空格\n    ls = txt_nopunc.split()    # 根据空格将字符串切分为列表\n    return ls\n \n \n \ndef number_of_words(ls):\n    \"\"\"接收一个以单词为元素的列表为参数，返回列表中单词数量，返回值为整型\"\"\"\n    counts = 0\n    for i in ls:\n        if \'\\\'\' not in i:     # 如果单词不包含\'\n            counts += 1     # 直接加1\n        else:   # 如果单词包含\'\n            if i.count(\'\\\'\') == 1:  # 包含\'的单词只有一个\n                counts += 1     # 单词个数加1\n            else:   # 单词包含\'的个数大于1，表示缩写形式\n                counts += 2     # 单词个数加2\n    return counts\n \n \n \nif __name__ == \'__main__\':\n    filename = input()        # 读入文件名\n    text = read_file(filename)    # 读取文件得到文件内容，存入text\n    words_list = word_list(text)  # 处理text,得到单词的列表\n    words_counts = number_of_words(words_list)#统计单词列表word_list里的单词数\n    print(f\'共有{words_counts}个单词\')\n```\n\n### 程序员问卷调查\n\n```\ndef fopen(name):\n    ls=[]\n    with open(name,\'r\',encoding = \'UTF-8\') as f:\n       for i in f.readlines()[1:]:\n           ls.append(i.strip().split(\',\'))\n    return ls\nlt = fopen(\'survey.csv\')   #不允许修改，打开题目文件，并将返回的数据列表赋值给lt\n \ndef fun(ls):\n    person_no_hair=0\n    like_no_hair=0\n    new_no_hair=0\n    rele_no_hair=0\n    no_no_hair=0\n    kong=0\n    for i in ls:\n        if i[1]==\'I am a developer by profession\':#程序员\n            person_no_hair+=1\n        elif i[1]==\'I code primarily as a hobby\':#程序爱好者\n            like_no_hair+=1\n        elif i[1]==\'I am a student who is learning to code\':#程序初学者\n            new_no_hair+=1\n        elif i[1]==\'\"I am not primarily a developer\':#编程相关者\n            rele_no_hair+=1\n        elif i[1]==\'\"I used to be a developer by profession\':#非程序员\n            no_no_hair+=1\n        elif i[1]==\'NA\':\n            kong+=1\n    return [person_no_hair, like_no_hair, new_no_hair, rele_no_hair, no_no_hair,kong]\n \ns=input()\nl=fun(lt)\nif(s==\'程序员\'):\n    print(f\"程序员:{l[0]}条\")\nelif(s==\'程序爱好者\'):\n    print(f\"程序爱好者:{l[1]}条\")\nelif(s==\'程序初学者\'):\n    print(f\"程序初学者:{l[2]}条\")\nelif(s==\'编程相关者\'):\n    print(f\"编程相关者:{l[3]}条\")\nelif(s==\'非程序员\'):\n    print(f\"非程序员:{l[4]}条\")\nelif(s==\'空白\'):\n    print(f\"空白:{l[5]}条\")\nelif(s==\'记录\'):\n    print(f\"总计:{sum(l)}条\")\nelse:\n    print(\"错误输入\")\n```\n\n# ', '可以白嫖，但不能当伸手党，密码是：站长的微信号', 'Python,头歌,作业,答案,Python123', 0, 1027, 0, 1, 'janxland', 0, 1, '2023-12-23 11:59:29', '2024-01-19 19:12:21', 'janx', 0);
INSERT INTO `article` VALUES (88, 1, 1, 16, 0001, 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python答案 集合与字典', NULL, '# 集合与字典\n\n## 集合介绍\n\n```\ndef average(array):\n    unique_heights = list(set(array))\n    total_height = sum(unique_heights)\n    average_height = total_height / len(unique_heights)\n    return round(average_height, 3)\n\nif __name__ == \'__main__\':\n    arr = list(map(int, input().split()))\n    result = average(arr)\n    print(result)\n```\n\n## 集合添加元素\n\n```\nN = int(input())  # 输入所有邮票的数目\ncountries = set()  # 创建一个空集合来存储不同的国家\n\nfor _ in range(N):\n    country = input()  # 输入一张邮票来自哪个国家\n    countries.add(country)  # 将国家添加到集合中\n\nprint(len(countries))  # 输出不同国家的数量\n```\n\n## 列表去重\n\n```\nnames = input().split(\',\')  # 输入以逗号分隔的人名\nunique_names = []\n\nfor name in names:\n    if name not in unique_names:\n        unique_names.append(name)  # 将不重复的人名添加到列表中\n\nprint(unique_names)  # 输出包含不重复人名的列表\n```\n\n## 字符串去重排序\n\n```\nprint(\'\'.join(sorted(set(input()))))\n```\n\n## 列表嵌套字典的排序\n\n```\nn=int(input())\nlist1=[]\nfor i in range(n):\n    a,b=input().split()\n    dict1={\"name\":a,\"age\":int(b)}\n    list1.append(dict1)\nlist2=sorted(list1,key=lambda x:x[\"age\"])\nlist3=sorted(list1,key=lambda x:x[\"name\"])\nprint(list2)\nprint(list3)\n```\n\n## 字典的属性、方法与应用\n\n```\ndef method_of_dict(n, my_dict):\n    for i in range(n):\n        ls = input().split()  # 输入命令及参数，之间用空格分隔\n        if ls[0] == \'print\':  # 每遇到“print”时，在新的一行输出字典\n            print(my_dict)\n        elif ls[0] == \'key\':  # 如果输入的命令是“key”，输出字典中全部键\n            print(list(my_dict.keys()))\n        elif ls[0] == \'value\':  # 如果输入的命令是“value”，输出字典中全部值\n            print(list(my_dict.values()))\n        elif ls[0] == \'update\':  # 如果输入的命令是“update”，更新ls[1]表示的键对应的值\n            my_dict[ls[1]] = ls[2]\n        elif ls[0] == \'add\':  # 如果输入的命令是“add”，增加一个键值对，题目确保输入的键在字典中不存在\n            my_dict[ls[1]] = ls[2]\n        elif ls[0] == \'del\':  # 如果输入的命令是“del”，删除字典中指定的键值对\n            if ls[1] not in my_dict:  # 做存在性测试，键不存在时返回“键不存在”\n                print(\'键不存在\')\n            else:\n                del my_dict[ls[1]]  # MyDict.pop(ls[1])\n        elif ls[0] == \'clear\':  # 如要输入的命令是“clear”，清空字典中全部元素\n            my_dict.clear()\nif __name__ == \'__main__\':\n    num = int(input())  # 输入一个正整数 n\n    name = input().split(\',\')  # Tom,Jack,Lee\n    phoneNumber = input().split(\',\')  # 13988776655,13855664488,13644668888\n    test_dict = dict(zip(name, phoneNumber))  # 以name为键,以phoneNumber为值生成字典\n    method_of_dict(num, test_dict)\n```\n\n## 字典增加元素\n\n```\ndict1 = {\'赵小明\': \'13299887777\', \'特明朗\': \'814666888\', \'普希京\': \'522888666\', \'吴小京\': \'13999887777\'}\n\nkey = input()\nvalue = input()\n\nif key in dict1:\n    print(\'您输入的姓名在通讯录中已存在\')\nelse:\n    dict1[key] = value\n    for k, v in dict1.items():\n        print(\'{}:{}\'.format(k, v))\n\n```\n\n## 通讯录\n\n```python\ndef menu():\n    print(\'\'\'\\n欢迎使用PYTHON学生通讯录\n1：添加学生\n2：删除学生\n3：修改学生信息\n4：搜索学生\n5：显示全部学生信息\n6：退出并保存\'\'\')\ndic={\'张自强\': [\'12652141777\', \'材料\'], \'庚同硕\': [\'14388240417\', \'自动化\'], \'王岩\': [\'11277291473\', \'文法\']}\nprint(dic)\nmenu()\nnum=int(input())\nif(num==3):\n    name=input()\n    if name in dic.keys():\n        dic[name]=[input(), input()]\n        print(\"Success\")\n        print(dic)\n    else:\n        print(\"No Record\")\n        print(dic)\nelse:\n    print(\"ERROR\")\n```\n\n## 通讯录（删除）| 通讯录（DEL）\n\n```\ndef menu():\n    print(\'\'\'\\n欢迎使用PYTHON学生通讯录\n1：添加学生\n2：删除学生\n3：修改学生信息\n4：搜索学生\n5：显示全部学生信息\n6：退出并保存\'\'\')\ndic={\'张自强\': [\'12652141777\', \'材料\'], \'庚同硕\': [\'14388240417\', \'自动化\'], \'王岩\': [\'11277291473\', \'文法\']}\nprint(dic)\nmenu()\nn=int(input())\nif n==2:\n    a=input()\n    if a in dic:\n        del dic[a]\n        print(\'Success\')\n    else:\n        print(\'No Record\')\n    print(dic)\nelse:\n    print(\'ERROR\')\n\n```\n\n## 通讯录（添加）| 通讯录（ADD）\n\n```\ndef menu():\n    print(\'\'\'\\n欢迎使用PYTHON学生通讯录\n1：添加学生\n2：删除学生\n3：修改学生信息\n4：搜索学生\n5：显示全部学生信息\n6：退出并保存\'\'\')\n \ndef add():\n    name=input()\n    try:\n        num_prof=[input(),input()]\n    except:\n        print(\"Fail\")\n    else:\n        dic[name]=num_prof\n        print(\"Success\")\n \ndic={\'张自强\': [\'12652141777\', \'材料\'], \'庚同硕\': [\'14388240417\', \'自动化\'], \'王岩\': [\'11277291473\', \'文法\']}\n \nprint(dic)\nmenu()\nchoice=input()\nif(choice==\'1\'):\n    add()\n    print(dic)\nelse:\n    print(\"ERROR\")\n```\n\n## 通讯录（查询）| 通讯录（SEARCH）\n\n```\ndef menu():\n    print(\'\'\'\\n欢迎使用PYTHON学生通讯录\n1：添加学生\n2：删除学生\n3：修改学生信息\n4：搜索学生\n5：显示全部学生信息\n6：退出并保存\'\'\')\ndic={\'张自强\': [\'12652141777\', \'材料\'], \'庚同硕\': [\'14388240417\', \'自动化\'], \'王岩\': [\'11277291473\', \'文法\']}\nprint(dic)\nmenu()\nnum=int(input())\nif(num==4):\n    name=input()\n    if name in dic.keys():\n        print(name,end=\' \')\n        print(dic[name][0],end=\' \')\n        print(dic[name][1],end=\' \\n\')\n        print(\"Success\")\n        print(dic, end=\"\")\n    else:\n        print(\"No Record\")\n        print(dic)\nelse:\n    print(\"ERROR\")\n\n```\n\n## 查询省会\n\n```\ncapitals = {\'湖南\':\'长沙\',\'湖北\':\'武汉\',\'广东\':\'广州\',\'广西\':\'南宁\',\'河北\':\'石家庄\',\'河南\':\'郑州\',\'山东\':\'济南\',\n            \'山西\':\'太原\',\'江苏\':\'南京\',\'浙江\':\'杭州\',\'江西\':\'南昌\',\'黑龙江\':\'哈尔滨\',\'新疆\':\'乌鲁木齐\',\'云南\':\'昆明\',\n            \'贵州\':\'贵阳\',\'福建\':\'福州\',\'吉林\':\'长春\',\'安徽\':\'合肥\',\'四川\':\'成都\',\'西藏\':\'拉萨\',\'宁夏\':\'银川\',\n            \'辽宁\':\'沈阳\',\'青海\':\'西宁\',\'海南\':\'海口\',\'甘肃\':\'兰州\',\'陕西\':\'西安\',\'内蒙古\':\'呼和浩特\',\n            \'台湾\':\'台北\',\'北京\':\'北京\',\'上海\':\'上海\',\'天津\':\'天津\',\'重庆\':\'重庆\',\'香港\':\'香港\',\'澳门\':\'澳门\'}\n\nwhile True:\n    province = input()\n    if province == \"\":\n        break\n\n    capital = capitals.get(province)\n    if capital:\n        print(capital)\n    else:\n        print(\"输入错误\")\n```\n\n## 查找数字\n\n```\nnumbers = input().split()\ncount = {}\n\nfor num in numbers:\n    count[num] = count.get(num, 0) + 1\n\nfor num, freq in count.items():\n    if freq % 2 == 1:\n        print(num)\n        break\n```\n\n## 数据统计\n\n```\nimport random\n\nrandom.seed(10)\n\nstart, end = map(int, input().split())\ncount = {}\n\nfor _ in range(100):\n    num = random.randint(start, end)\n    count[num] = count.get(num, 0) + 1\n\nfor num, freq in sorted(count.items()):\n    print(num, freq)\n```\n\n## 罗马数字转换\n\n```\nchart = {\'I\':1,\'V\':5,\'X\':10,\'L\':50,\'C\':100,\'D\':500,\'M\':1000}\nstrs = input(\"\")\nresult = 0\nomit = -1\n\nif strs in chart:\n    print(chart[strs])\nelse:\n    for i in range(len(strs)):\n        if i == omit:\n            pass\n        elif i <= len(strs)-2:\n            if chart[strs[i]] < chart[strs[i+1]]:\n                result += chart[strs[i+1]] - chart[strs[i]]\n                omit = i+1\n            else:\n                result += chart[strs[i]]\n        else:\n            result += chart[strs[i]]\n    print(result)\n\n```\n\n## 英汉词典\n\n```\nimport string\ns=input().lower()\ns=s.replace(\"n\'t\",\' not\')\ns=s.replace(\"\'s\",\' is\')\nfor x in string.punctuation:\n    if x in s:\n        s=s.replace(x,\' \')\n \nls=s.split()\n \ndic={}\n \nwith open(\'dicts.txt\', \'r\', encoding=\'utf-8\') as f:\n    for line in f:\n        ls1=line.split()\n        dic[ls1[0]]=\' \'.join(ls1[1:])\n \nfor i in ls:\n    if i in dic:\n        print(i,dic[i])\n    else:\n        print(i,\'自己猜\')\n```\n\n## 股票分析\n\n### 第1关：涨幅和成交量\n\n```\nimport numpy as np\n# 设置常量，对应各列数据的语义，方便索引  \nHIGH = 0\nLOW = 1\nCLOSE = 3\nVOLUME = 4\n \ndef statistics_of_all(code_list):\n    \"\"\"  \n    @参数 code_list：股票代码列表，列表类型  \n    接收股票数据文件名列表，逐个统计各股票数据文件涨跌幅、总成交量、最高价和最低价。  \n    涨跌幅计算公式为：(最新记录收盘价-最早记录收盘价) / 最早记录收盘价 * 100  \n    为方便处理，读入数据时，略过日期列。  \n    \"\"\"\n    statistics_of_stock = []\n    for code in code_list:\n        data_of_code = np.genfromtxt(\'datas/\' + code, dtype=None,\n                                     usecols=[1, 2, 3, 4, 5, 6], delimiter=\',\',\n                                     skip_header=1)\n        # 计算当前股票涨跌幅、总成交量、最高价和最低价  \n        uplift_or_fall = round((data_of_code[:, CLOSE][-1] - data_of_code[:, CLOSE][0]) / data_of_code[:, CLOSE][0] * 100, 2)\n        volumes = round(sum(data_of_code[:, VOLUME]), 2)\n        statistics_of_stock.append([code[:6], uplift_or_fall, volumes])\n    return statistics_of_stock  # 每支股票涨跌幅、总成交量、最高价和最低价\n \ndef top_10_uplift(statistics_of_stock):\n    \"\"\"  \n    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型  \n    按涨幅降序排序，涨幅相同时按股票代码降序排序，取排名前10的股票，  \n    返回排名前10的股票代码，返回值为列表类型。  \n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock1 = sorted(statistics_of_stock, key=lambda x : (x[1],x[0]), reverse=True)\n    list1 = []\n    for i in range(10): \n        list1.append(statistics_of_stock1[i][0])\n    return list1\n \n \ndef top_10_volumes(statistics_of_stock):\n    \"\"\"  \n    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型  \n    按成交量降序排序，成交量相同时，按股票代码降序排序，取成交量前10的股票代码，返回成交量  \n    最大的10支股票代码列表。  \n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock2 = sorted(statistics_of_stock, key=lambda x : (x[2],x[0]), reverse=True)\n    list2 = []\n    for i in range(10): \n        list2.append(statistics_of_stock2[i][0])\n    return list2\n \n \ndef uplift_and_volumes(top_uplift, top_volumes):\n    \"\"\"\n    @参数 top_high，最高价在前10名的股票代码，字符串\n    @参数 top_volumes，成交量在前10名的股票代码，字符串\n    返回一个列表，其元素依序为以下4个：\n    涨幅和成交量均在前10名的股票，按股票代码升序，列表\n    涨幅或成交量在前10名的股票,按股票代码升序，列表\n    涨幅前10名，但成交量未进前10名的股票,按股票代码升序，列表\n    涨幅和成交量不同时在前10名的股票,按股票代码升序，列表\n    \"\"\"\n    # 补充你的代码\n    u_and_v = []\n    u_and_v0 = sorted([x for x in top_uplift if x in top_volumes])\n    u_and_v.append(u_and_v0)\n    u_and_v1 =sorted(top_volumes + [x for x in top_uplift if x not in top_volumes])\n    u_and_v.append(u_and_v1)\n    u_and_v2 = sorted([x for x in top_uplift if x not in top_volumes])\n    u_and_v.append(u_and_v2)\n    u_and_v3 = sorted([x for x in u_and_v1 if x not in u_and_v0])\n    u_and_v.append(u_and_v3)\n    return u_and_v\n \ndef operation():\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    statistics_of_list = statistics_of_all(stock_lst)  # 对获取的股票数据进行统计  \n    uplift_set = top_10_uplift(statistics_of_list)  # 涨幅前10名集合\n    volumes_set = top_10_volumes(statistics_of_list)  # 成交量前10名集合\n    u_and_v = uplift_and_volumes(uplift_set, volumes_set)\n    opt = input()\n    if opt == \'涨幅与成交量\':\n        print(\'涨幅和成交量均在前10名的股票:\')\n        print(u_and_v[0])  # 涨幅和成交量均在前10名的股票\n        print(\'涨幅或成交量在前10名的股票:\')\n        print(u_and_v[1])  # 涨幅或成交量在前10名的股票\n        print(\'涨幅前10名，但成交量未进前10名的股票:\')\n        print(u_and_v[2])  # 涨幅前10名，但成交量未进前10名的股票\n        print(\'涨幅和成交量不同时在前10名的股票:\')\n        print(u_and_v[3])  # 涨幅和成交量均在前10名的股票\n    else:\n        print(\'输入错误\')\nif __name__ == \'__main__\':\n    filename = \'datas/沪市股票top300.csv\'              # 股票名称与代码文件\n    stock_lst = [\'600000.csv\', \'600004.csv\', \'600006.csv\',\n                 \'600007.csv\', \'600008.csv\', \'600009.csv\',\n                 \'600010.csv\', \'600011.csv\', \'600012.csv\',\n                 \'600015.csv\', \'600016.csv\', \'600018.csv\',\n                 \'600019.csv\', \'600020.csv\', \'600026.csv\',\n                 \'600028.csv\', \'600029.csv\', \'600030.csv\',\n                 \'600031.csv\', \'600033.csv\', \'600036.csv\']\n    operation()\n```\n\n### 第2关：涨幅与最高价\n\n```\nimport numpy as np\n# 设置常量，对应各列数据的语义，方便索引\nHIGH = 0\nCLOSE = 3\nVOLUME = 4\n \n \ndef statistics_of_all(code_list):\n    \"\"\"\n    @参数 code_list：股票代码列表，列表类型\n    接收股票数据文件名列表，逐个统计各股票数据文件涨幅、总成交量、最高价和最低价。\n    涨幅计算公式为：(最新记录收盘价-最早记录收盘价) / 最早记录收盘价 * 100\n    为方便处理，读入数据时，略过日期列。\n    \"\"\"\n    statistics_of_stock = []\n    for code in code_list:\n        data_of_code = np.genfromtxt(\'datas/\' + code, dtype=None,\n                                     usecols=[1, 2, 3, 4, 5, 6], delimiter=\',\',\n                                     skip_header=1)\n        # 计算当前股票涨幅、总成交量、最高价和最低价\n        uplift_or_fall = round((data_of_code[:, CLOSE][-1] - data_of_code[:, CLOSE][0]) / data_of_code[:, CLOSE][0] * 100, 2)\n        volumes = round(sum(data_of_code[:, VOLUME]), 2)\n        high = round(max(data_of_code[:, HIGH]), 2)\n        statistics_of_stock.append([code[:6], uplift_or_fall, volumes, high])\n    return statistics_of_stock  # 每支股票涨幅、总成交量、最高价和最低价\n \ndef top_10_uplift(statistics_of_stock):\n    \"\"\"\n    @参数 statistics_of_stock：每支股票涨幅、总成交量、最高价和最低价统计信息，列表类型\n    按涨幅降序排序，涨幅相同时按股票代码降序排序，取排名前10的股票，\n    返回排名前10的股票代码，返回值为列表类型。\n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock1 = sorted(statistics_of_stock, key=lambda x : x[1], reverse=True)\n    list1 = []\n    for i in range(10): \n        list1.append(statistics_of_stock1[i][0])\n    return list1\n \n \ndef top_10_high(statistics_of_stock):\n    \"\"\"\n    @参数 statistics_of_stock：每支股票涨幅、总成交量、最高价和最低价统计信息，列表类型\n    按最高价降序排序，最高价相同时，按股票代码降序排序返回，取排名前10的股票，返回最高价最\n    高的10支股票代码的列表。\n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock2 = sorted(statistics_of_stock, key=lambda x : x[3], reverse=True)\n    list2 = []\n    for i in range(10): \n        list2.append(statistics_of_stock2[i][0])\n    return list2\n \n \ndef high_and_uplift(top_uplift, top_high):\n    \"\"\"\n    @参数 top_high，最高价在前10名的股票代码，字符串\n    @参数 top_uplift，涨幅在前10名的股票代码，字符串\n    返回一个列表，其元素依序为以下4个：\n    涨幅和最高价均在前10名的股票代码,按股票代码升序，列表\n    涨幅或最高价在前10名的股票代码,按股票代码升序，列表\n    涨幅前10名，但最高价未进前10名的股票代码,按股票代码升序，列表\n    涨幅和最高价不同时在前10名的股票,按股票代码升序，列表\n    票代码。\n    \"\"\"\n    # 补充你的代码\n    u_and_v = []\n    u_and_v0 = sorted([x for x in top_uplift if x in top_high])\n    u_and_v.append(u_and_v0)\n    u_and_v1 =sorted(top_high + [x for x in top_uplift if x not in top_high])\n    u_and_v.append(u_and_v1)\n    u_and_v2 = sorted([x for x in top_uplift if x not in top_high])\n    u_and_v.append(u_and_v2)\n    u_and_v3 = sorted([x for x in u_and_v1 if x not in u_and_v0])\n    u_and_v.append(u_and_v3)\n    return u_and_v\n \ndef operation():\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    statistics_of_list = statistics_of_all(stock_lst)  # 对获取的股票数据进行统计\n    uplift_set = top_10_uplift(statistics_of_list)  # 涨幅前10名集合\n    high_set = top_10_high(statistics_of_list)  # 最高价前10名集合\n    u_and_v = high_and_uplift(uplift_set, high_set)\n    opt = input()\n \n    if opt == \'涨幅与最高价\':\n        # 补充你的代码\n        print(\'涨幅和最高价均在前10名的股票:\')\n        print(u_and_v[0])  # 涨幅和最高价均在前10名的股票\n        print(\'涨幅或最高价在前10名的股票:\')\n        print(u_and_v[1])  # 涨幅或最高价在前10名的股票\n        print(\'涨幅前10名，但最高价未进前10名的股票:\')\n        print(u_and_v[2])  # 涨幅前10名，但最高价未进前10名的股票\n        print(\'涨幅和最高价不同时在前10名的股票:\')\n        print(u_and_v[3])  # 涨幅和最高价均在前10名的股票    \n    else:\n        print(\'输入错误\')\nif __name__ == \'__main__\':\n    filename = \'datas/沪市股票top300.csv\'              # 股票名称与代码文件\n    stock_lst = [\'600000.csv\', \'600004.csv\', \'600006.csv\',\n                 \'600007.csv\', \'600008.csv\', \'600009.csv\',\n                 \'600010.csv\', \'600011.csv\', \'600012.csv\',\n                 \'600015.csv\', \'600016.csv\', \'600018.csv\',\n                 \'600019.csv\', \'600020.csv\', \'600026.csv\',\n                 \'600028.csv\', \'600029.csv\', \'600030.csv\',\n                 \'600031.csv\', \'600033.csv\', \'600036.csv\']\n    operation()\n```\n\n### 第3关：跌幅与最低价\n\n```\nimport numpy as np\n \n# 设置常量，对应各列数据的语义，方便索引\nHIGH = 0\nLOW = 1\nCLOSE = 3\nVOLUME = 4\n \ndef statistics_of_all(code_list):\n    \"\"\"\n    @参数 code_list：股票代码列表，列表类型\n    接收股票数据文件名列表，逐个统计各股票数据文件涨跌幅、总成交量、最高价和最低价。\n    涨跌幅计算公式为：(最新记录收盘价-最早记录收盘价) / 最早记录收盘价 * 100\n    为方便处理，读入数据时，略过日期列。\n    \"\"\"\n    statistics_of_stock = []\n    for code in code_list:\n        data_of_code = np.genfromtxt(\'datas/\' + code, dtype=None,\n                                     usecols=[1, 2, 3, 4, 5, 6], delimiter=\',\',\n                                     skip_header=1)\n        # 计算当前股票跌幅、总成交量、最高价和最低价\n        uplift_or_fall = round((data_of_code[:, CLOSE][-1] - data_of_code[:, CLOSE][0]) / data_of_code[:, CLOSE][0] * 100, 2)\n        volumes = round(sum(data_of_code[:, VOLUME]), 2)\n        high = round(max(data_of_code[:, HIGH]), 2)\n        low = round(min(data_of_code[:, LOW]), 2)\n        statistics_of_stock.append([code[:6], uplift_or_fall, volumes, high, low])\n    return statistics_of_stock  # 每支股票涨跌幅、总成交量、最高价和最低价\n \n \ndef top_10_uplift(statistics_of_stock):\n    \"\"\"\n    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型\n    按涨幅降序排序，涨幅相同时按股票代码降序排序，取排名前10的股票，\n    返回排名前10的股票代码，返回值为列表类型。\n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock1 = sorted(statistics_of_stock, key=lambda x : x[1], reverse=True)\n    list1 = []\n    for i in range(10): \n        list1.append(statistics_of_stock1[i][0])\n    return list1\n \ndef top_10_fall(statistics_of_stock):\n    \"\"\"\n    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型\n    按跌幅升序排序，跌幅相同时，按股票代码升序排序，取排名前10的股票，返回跌幅最大的10支股\n    票代码的集合。\n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock2 = sorted(statistics_of_stock, key=lambda x : x[1], reverse=False)\n    list2 = []\n    for i in range(10): \n        list2.append(statistics_of_stock2[i][0])\n    return list2\n \n \ndef top_10_low(statistics_of_stock):\n    \"\"\"\n    @参数 statistics_of_stock：每支股票涨跌幅、总成交量、最高价和最低价统计信息，列表类型\n    按最低价升序排序，最低价相同时，按股票代码升序排序，取排名前10的股票，返回最低价最低的\n    10支股票代码集合。\n    \"\"\"\n    # 补充你的代码\n    statistics_of_stock3 = sorted(statistics_of_stock, key=lambda x : x[4], reverse=False)\n    list3 = []\n    for i in range(10): \n        list3.append(statistics_of_stock3[i][0])\n    return list3\n \n \ndef low_and_fall(top_fall, top_low):\n    \"\"\"\n    @参数 top_low，最低价在前10名的股票代码，字符串\n    @参数 top_fall，跌幅在前10名的股票代码，字符串\n    返回一个列表，其元素依序为以下4个\n    跌幅和最低价均在前10名的股票代码,按股票代码升序，列表\n    跌幅或最低价在前10名的股票代码,按股票代码升序，列表\n    跌幅前10名，但最低价未进前10名的股票代码,按股票代码升序，列表\n    跌幅和最高价不同时在前10名的股票,按股票代码升序，列表\n    \"\"\"\n    # 补充你的代码\n    u_and_v = []\n    u_and_v0 = sorted([x for x in top_fall if x in top_low])\n    u_and_v.append(u_and_v0)\n    u_and_v1 =sorted(top_low + [x for x in top_fall if x not in top_low])\n    u_and_v.append(u_and_v1)\n    u_and_v2 = sorted([x for x in top_fall if x not in top_low])\n    u_and_v.append(u_and_v2)\n    u_and_v3 = sorted([x for x in u_and_v1 if x not in u_and_v0])\n    u_and_v.append(u_and_v3)\n    return u_and_v\n \n \ndef operation():\n    \"\"\"接收一个字符串为参数，根据参数值调用不同函数完成任务\"\"\"\n    statistics_of_list = statistics_of_all(stock_lst)  # 对获取的股票数据进行统计\n    fall_set = top_10_fall(statistics_of_list)  # 跌幅前10名集合\n    low_set = top_10_low(statistics_of_list)  # 最低价前10名集合\n    u_and_v = low_and_fall(fall_set, low_set)\n    opt = input()\n    if opt == \'跌幅与最低价\':\n        # 补充你的代码\n        print(\'跌幅和最低价均在前10名的股票:\')\n        print(u_and_v[0])  # 涨幅和最高价均在前10名的股票\n        print(\'跌幅或最低价在前10名的股票:\')\n        print(u_and_v[1])  # 涨幅或最高价在前10名的股票\n        print(\'跌幅前10名，但最低价未进前10名的股票:\')\n        print(u_and_v[2])  # 涨幅前10名，但最高价未进前10名的股票\n        print(\'跌幅和最低价不同时在前10名的股票:\')\n        print(u_and_v[3])  # 涨幅和最高价均在前10名的股票  \n    else:\n        print(\'输入错误\')\n \n \nif __name__ == \'__main__\':\n    filename = \'datas/沪市股票top300.csv\'              # 股票名称与代码文件\n    stock_lst = [\'600000.csv\', \'600004.csv\', \'600006.csv\',\n                 \'600007.csv\', \'600008.csv\', \'600009.csv\',\n                 \'600010.csv\', \'600011.csv\', \'600012.csv\',\n                 \'600015.csv\', \'600016.csv\', \'600018.csv\',\n                 \'600019.csv\', \'600020.csv\', \'600026.csv\',\n                 \'600028.csv\', \'600029.csv\', \'600030.csv\',\n                 \'600031.csv\', \'600033.csv\', \'600036.csv\']\n    operation()\n```\n\n### 大学排行榜分析\n\n```\ndef read_file(file, m):\n    \"\"\"读文件中的学校名到列表中，返回排名前m学校集合\"\"\"\n    ########## Begin ##########\n    f = open(file, \'r\',encoding=\'utf-8\')\n    line1=[]\n    for i in range(m):\n        line=f.readline().strip(\"\\n\")\n        line1.append(line.split()[1])#把学校添加列表\n    return line1\n \n    ########## End ##########\n \n \ndef either_in_top(alumni, soft):\n    \"\"\"接收两个排行榜前m高校名字集合，\n    获得在这两个排行榜中均名列前m的学校名，按照学校名称排序，\n    返回排序后的列表\n    \"\"\"\n    ########## Begin ##########\n    list2 = []\n    for i in range(len(alumni)):\n        if alumni[i] in soft:  # 如果同时在两个表中都有这个学校\n            list2.append(alumni[i])\n    list2.sort()  # 升序排序\n    return list2\n \n    ########## End ##########\n \n \ndef all_in_top(alumni, soft):\n    \"\"\"接收两个排行榜前m高校名字集合，\n    获得在两个榜单中名列前m的所有学校名，按照学校名称排序，\n    返回排序后的列表\n    \"\"\"\n    ########## Begin ##########\n    list3 = []\n    list3.extend(alumni)  # 列表合并alumni\n    list3.extend(soft)  # 列表合并soft\n    list3 = list(set(list3))  # 列表去重\n    list3.sort()  # 升序排序\n    return list3\n \n    ########## End ##########\n \n \ndef only_alumni(alumni, soft):\n    \"\"\"接收两个排行榜前10高校名字集合，\n    获得在alumni榜单中名列前10但soft榜单中未进前10的学校名，\n    按照学校名称排序，返回排序后的列表\n    \"\"\"\n    ########## Begin ##########\n    list4 = []\n    for i in range(len(alumni)):\n        if alumni[i] in soft:\n            continue\n        else:\n            list4.append(alumni[i])  # 如果在alumni榜单中名列前m但soft榜单中未进前m的学校名\n    list4.sort()  # 升序排序\n    return list4\n    ########## End ##########\n \n \ndef only_once(alumni, soft):\n    \"\"\"接收两个排行榜前10高校名字集合，\n    获得在alumni和soft榜单中名列前10，但不同时出现在两个榜单的学校名，\n    按照学校名称排序，返回排序后的列表\n    \"\"\"\n    ########## Begin ##########\n    list5 = []\n    for i in range(len(alumni)):\n        if alumni[i] in soft:\n            continue\n        else:\n            list5.append(alumni[i])  # 如果在alumni榜单中名列前m但soft榜单中未进前m的学校名\n    for i in range(len(soft)):\n        if soft[i] in alumni:\n            continue\n        else:\n            list5.append(soft[i])  # 如果在soft榜单中名列前m但alumni榜单中未进前m的学校名\n    list5.sort()  # 升序排序\n    return list5\n \n    ########## End ##########\n \n \ndef select_first(n):\n    \"\"\"\n    接收一个字符\n    判断这个字符是否属于 1234 中的一个字符，如果不是则输出 Wrong Option\n    如果是，则调用 select_again() 函数\n    \"\"\"\n    ########## Begin ##########\n    if n in \'1234\':\n        select_again(n)\n    else:\n        print(\'Wrong Option\')\n \n    ########## End ##########\n \n \ndef select_again(n):\n    m = int(input())\n    alumni_set = read_file(\'step1/alumni.txt\', m)\n    soft_set = read_file(\'step1/soft.txt\', m)\n    \"\"\"\n    接收一个字符\n    按左侧 任务要求->问题描述->输入输出 的规则判断 n ，并吊用上面定义的相应的函数\n    按左侧 任务要求->测试说明->预期输出 的样例进行输出\n    \"\"\"\n    ########## Begin ##########\n    if n == \'1\':\n        either_rank = either_in_top(alumni_set, soft_set)\n        print(f\'两榜单中均名列前{m}的学校：\')\n        print(either_rank)\n    elif n == \'2\':\n        all_rank = all_in_top(alumni_set, soft_set)\n        print(f\'两榜单名列前{m}的所有学校：\')\n        print(all_rank)\n    elif n == \'3\':\n        only_in_alumni_rank = only_alumni(alumni_set, soft_set)\n        print(f\'alumni中名列前{m}，soft中未进前{m}的学校：\')\n        print(only_in_alumni_rank)\n    elif n == \'4\':\n        alumni_soft_rank = only_once(alumni_set, soft_set)\n        print(f\'不同时出现在两个榜单前{m}的学校：\')\n        print(alumni_soft_rank)\n        ########## End ##########\n \n \nif __name__ == \'__main__\':\n    n = input()\n    select_first(n)\n```\n\n### 绩点计算\n\n```\nscore = {\'A\': 4.0, \'A-\': 3.7, \'B+\': 3.3, \'B\': 3.0, \'B-\': 2.7, \'C+\': 2.3, \'C\': 2.0, \'C-\': 1.5, \'D\': 1.3, \'D-\': 1.0,\n         \'F\': 0.0}\ngpaSum, creditSum, gpaAve = 0, 0, 0\nwhile True:\n    s = input()\n    if s == \'-1\':\n        break\n    elif s in score.keys():\n        credit = float(input())\n        gpaSum = gpaSum + score[s] * credit\n        creditSum = creditSum + credit\n        gpaAve = gpaSum / creditSum\n    else:\n        print(\'data error\')\nprint(\'{:.2f}\'.format(gpaAve))\n```\n\n## 简易英汉字典\n\n### 第1关：读文件到字典中\n\n```\ndef create_dict(filename):\n    \"\"\"接收表示文件名的字符串参数，读文件中的单词及释义，以单词为键，其他部分为值创建字典。\n    多个释义间可能是逗号或空格分隔，但单词与第一个释义间至少有一个空格，\n    将文件每一行根据空格切分一次，切分结果分别作为键和值创新字典。\n    返回字典。\n    \"\"\"\n    #####################Begin#####################################\n    # 此处去掉注释符号“#”并补充你的代码\n    dic = {}                                    # 创建空字典  \n    with open(filename, \'r\', encoding=\'utf-8\') as data:  \n        for x in data:                          # 遍历文件对象  \n            x = x.strip().split(maxsplit=1)     # 每行根据空格切分为列表，只切分一次  \n            dic.update({x[0].lower(): x[1]})    # 列表的两个元素作为字典的键和值加入字典中  \n    print(len(dic)) \n   \n    #####################End#####################################\n \n \nif __name__ == \'__main__\':\n    file = \'./dict.txt\'           # 表示文件名的字符串，表示位于当前路径下的\'dict.txt\'文件\n    word_dic = create_dict(file)  # 调用函数返回字典类型的数据\n```\n\n### 第2关：翻译单词\n\n```python\ndef create_dict(filename):  \n    \"\"\"读文件中的单词及释义，以单词为键，其他部分为值创建字典。  \n    多个释义间可能是逗号或空格分隔，但单词与第一个释义间至少有一个空格，  \n    将读文件并根据空格切分一次，切分结果分别作为键和值创新字典。\"\"\"  \n    dic = {}                                    # 创建空字典  \n    with open(filename, \'r\', encoding=\'utf-8\') as data:  \n        for x in data:                          # 遍历文件对象  \n            x = x.strip().split(maxsplit=1)     # 每行根据空格切分为列表，只切分一次  \n            dic.update({x[0].lower(): x[1]})    # 列表的两个元素作为字典的键和值加入字典中  \n    return dic\n \n \ndef translate(dic, word):\n    \"\"\"接收两个参数，第一个是读文件创建的字典，第二个参数为要查询的单词，字符串\n    根据文件创建的字典，从中查询单词word，\n    如果查询单词存在，元组形式返回词与词的释义；\n    如果查询不存在，返回\'这个词我不明白\'\n    \"\"\"\n    # 并补充你的代码\n    word = word.lower()\n    if word in dic:\n        return word + \' \' + dic[word]\n    else:\n        return word + \' \' + \'这个词我不明白\'\n \ndef translate_word():\n    \"\"\"调用此函数时，先输出提示信息：\'请输入查询的单词：\'\n    用户可循环输入欲翻译的单词，若直接输入回车时，输出\'查询结束，正在退出...\'。\n    输入非空时输出翻译结果\n    \"\"\"\n    # 并补充你的代码  \n    while True:\n        words = input(\'请输入查询的单词：\')\n        if words != \'\': #判断是否为回车键\n            print(translate(word_dic, words))\n        else:\n            print(\'查询结束，正在退出...\')\n            break\n \n \nif __name__ == \'__main__\':\n    file = \'./dict.txt\'           # 表示文件名的字符串，表示位于当前路径下的\'dict.txt\'文件\n    word_dic = create_dict(file)  # 调用函数返回字典类型的数据\n    print(\'载入字典数据成功！\')\n    translate_word()              # 翻译单词\n```\n\n### 第3关：翻译句子\n\n```\nimport string\n \ndef create_dict(filename):  \n    \"\"\"读文件中的单词及释义，以单词为键，其他部分为值创建字典。  \n    多个释义间可能是逗号或空格分隔，但单词与第一个释义间至少有一个空格，  \n    将读文件并根据空格切分一次，切分结果分别作为键和值创新字典。\"\"\"  \n    dic = {}                                    # 创建空字典  \n    with open(filename, \'r\', encoding=\'utf-8\') as data:  \n        for x in data:                          # 遍历文件对象  \n            x = x.strip().split(maxsplit=1)     # 每行根据空格切分为列表，只切分一次  \n            dic.update({x[0].lower(): x[1]})    # 列表的两个元素作为字典的键和值加入字典中  \n    return dic\n \n \ndef translate(dic, word):\n    \"\"\"接收两个参数，第一个是读文件创建的字典，第二个参数为要查询的单词，字符串\n    根据文件创建的字典，从中查询单词word，\n    如果查询单词存在，元组形式返回词与词的释义；\n    如果查询不存在，返回\'这个词我不明白\'\n    \"\"\"\n    # 并补充你的代码\n    word = word.lower()\n    if word in dic:\n        return word + \' \' + dic[word]\n    else:\n        return word + \' \' + \'这个词我不明白\'\n \ndef sentence_to_words():\n    \"\"\"调用此函数时，先输出提示信息\'请输入查询的句子：\'\n    用户输入欲翻译的句子\n        若输入非空时，先将\"n\'t\"替换为 \' not\'、\"\'s\"替换为 \' is\'，再将标点符号替换为空格。\n    根据空格将句子切分为单词的列表，调用translate逐个单词进行翻译。\n    用户可重复多次输入，每输入一名翻译一句，\n    若直接输入回车时，输出\'查询结束，正在退出...\'。然后结束程序。\n    \"\"\"\n    # 并补充你的代码\n    while True:\n        words = input(\'请输入查询的句子：\')\n        if len(words) == 0:  # 判断是否为回车键\n            print(\'查询结束，正在退出...\')\n            break\n        else:\n            words = words.replace(\"n\'t\", \' not\').replace(\"\'s\", \' is\')\n            words = words.replace(\",\", \' \').replace(\".\", \' \')  # 具体需要替换多少种标点看测试内容\n            words = words.split()\n            for i in words:\n                i = i.lower()\n                print(translate(word_dic, i))\n \nif __name__ == \'__main__\':\n    file = \'./dict.txt\'           # 表示文件名的字符串，表示位于当前路径下的\'dict.txt\'文件\n    word_dic = create_dict(file)  # 调用函数返回字典类型的数据\n    print(\'载入字典数据成功！\')\n    sentence_to_words()           # 翻译句子\n```\n\n', '可以白嫖，但不能当伸手党，密码是：站长的微信号', 'Python,头歌,作业,答案,Python123', 0, 662, 0, 1, 'janxland', 0, 1, '2023-12-23 12:00:03', '2024-01-19 19:12:21', 'janx', 0);
INSERT INTO `article` VALUES (89, 1, 1, 16, 0001, 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python答案 函数', NULL, '## 前排直链：\n说明页面：[说明书](https://www.roginx.ink/article?id=71){target=\"_blank\"}\n油猴脚本：[Tampermonkey](https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd?hl=zh-CN){target=\"_blank\"} [直接下载](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/www/scripts/%E6%B2%B9%E7%8C%B4.crx){target=\"_blank\"}\n划词脚本：[魔改题海划词+ChatGPT](https://greasyfork.org/zh-CN/scripts/483764-%E9%A2%98%E6%B5%B7-x-%E5%88%92%E8%AF%8D%E6%90%9C%E9%A2%98){target=\"_blank\"} [直接下载](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/www/scripts/%E5%88%92%E8%AF%8D%E8%84%9A%E6%9C%AC.js){target=\"_blank\"}\n超兽武装：[天国](https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/www/scripts/%E5%88%92%E8%AF%8D%E8%84%9A%E6%9C%AC.js){target=\"_blank\"\n自动答题：[直接下载]([https://mybox-1257251314.cos.ap-chengdu.myqcloud.com/www/scripts/%E8%87%AA%E5%8A%A8%E7%AD%94%E9%A2%98.js)\n\n\n# \n\n\n# 函数\n\n## **来自计算机的问候**\n\n### 第1关 无参无返回值函数\n\n```\ndef print_hi_human():  # 函数名用小写字母\n    print(\'人类，你好！\')\nif __name__ == \'__main__\':\n    print_hi_human()\n```\n\n### 第2关 无参有返回值函数\n\n```\ndef say_hi_human():  # 函数名用小写字母\n    return \'人类，你好！\'\nif __name__ == \'__main__\':\n    print(say_hi_human())\n```\n\n### 第3关 有参有返回值函数\n\n```\ndef say_hi_person(full_name):  # 函数名用小写字母，函数名填空\n    return f\'{full_name}，你好！\'\nif __name__ == \'__main__\':\n    person_name = input()\n    print(say_hi_person(person_name))\n```\n\n### 第4关 多参函数\n\n```\ndef say_hi_gender(full_name, gender):\n    if gender == \"男\":\n        return \"尊敬的{}先生，欢迎来到火星！\".format(full_name)\n    elif gender == \"女\":\n        return \"尊敬的{}女士，欢迎来到火星！\".format(full_name)\n    else:\n        return \"尊敬的{}先生/女士，欢迎来到火星！\".format(full_name)\n\nif __name__ == \'__main__\':\n    full_name = input()\n    gender = input()\n    print(say_hi_gender(full_name, gender))\n```\n\n### 第5关 任意数量参数\n\n```\nnames = input().split(\' \')\ndef say_hi_multi_parameter(names):\n    for name in names:\n        print(f\"{name}，你好！\")\nsay_hi_multi_parameter(names)\n```\n\n## 自除数 编写函数输出自除数\n\n```\ndef is_self_divisor(num):\n    n = num\n    while n > 0:\n        digit = n % 10\n        if digit == 0 or num % digit != 0:\n            return False\n        n //= 10\n    return True\n\nN = int(input())\n\nfor i in range(1, N+1):\n    if \'0\' not in str(i) and is_self_divisor(i):\n        print(i, end=\' \')\n```\n\n## 素数问题\n\n### 第1关 素数判定\n\n```\ndef is_prime(n): \n    if n<2:\n        return False\n    k = int(n ** 0.5)\n    for i in range(2,k+1):\n        if n % i == 0:\n            return False\n    else:\n        return True\n\n\npositive_int = int(input())      # 输入一个正整数\nif is_prime(positive_int):\n    print(f\'{positive_int}是素数\') \nelse:\n    print(f\'{positive_int}不是素数\')\n```\n\n### 第2关 输出N以内的所有素数\n\n```\ndef is_prime(n):\n    \"\"\"判断素数的函数,接收一个正整数为参数，参数是素数时返回True，否则返回False\n    减小判定区间，减少循环次数，提升效率\"\"\"\n    if n < 2:\n        return False      # 0、1、负数以及偶数都不是素数\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:    # 能被2到其n-1之间的数整除的数不是素数\n            return False\n    else:\n        return True       # for循环正常结束，未遇到return的数是素数\ndef output_prime(number):\n    \"\"\"接收一个正整数为参数，遍历从0到number之间的所有整数\n    在一行中输出不大于number的所有素数，函数无返回值\"\"\"\n    for i in range(number + 1):         # 遍历小于n的整数\n        if is_prime(i):   # i为素数时输出i\n            print(i, end=\' \')  # 输出后不换行，空格分隔输出\n \n \npositive_int = int(input())  # 输入一个正整数\noutput_prime(positive_int)      # 调用无返回值函数，不需要用print()\n```\n\n### 第3关 寻找回文素数\n\n```\ndef is_prime(n):\n    if n<2:\n        return False\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    else:\n        return True\ndef plalindrome_prime(number):\n    for i in range(number):\n        if str(i)==str(i)[::-1] and is_prime(i):\n            print(i,end=\' \')\npositive_int = int(input())\nplalindrome_prime(positive_int)\n```\n\n### 第4关 寻找反素数\n\n```\ndef is_prime(n):\n    if n<2:\n        return False\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    else:\n        return True\ndef reverse_prime(number):\n    for i in range(number):\n        if str(i)!=str(i)[::-1] and is_prime(i) and is_prime(int(str(i)[::-1])):\n            print(i,end=\' \')\n \npositive_int = int(input())         \nreverse_prime(positive_int)     \n```\n\n### 第5关 哥德巴赫猜想\n\n```\ndef is_prime(n):\n    if n < 2:\n        return False \n    for i in range(2,n):\n        if n % i == 0:\n            return False\n    else:\n        return True\n \n    \ndef goldbach_conjecture(num):\n    if num %2 ==0 and num >= 4:\n        for i in range(num // 2+1):\n            if is_prime(i) and is_prime(num - i):\n                print(f\"{num}={i}+{num-i}\")\n    else:\n        print(\'Data error!\')\nif __name__ == \'__main__\':\n    positive_even = int(input())\n    goldbach_conjecture(positive_even)\n```\n\n## 汽车迷\n\n```\ndef Car(year, model, brand=\"宝马\"):\n    return f\"这是一辆{year}年生产，型号是{model}的{brand}牌汽车。\"\n\nls = input().split()\nprint(Car(*ls))\n```\n\n## **自定义数学函数**\n\n```\n############## 第1关 ################\ndef pow(x, n):  # 幂运算函数\n    return x**n;\nif __name__ == \'__main__\':\n    x = float(input())\n    n = int(input())\n    return_data = pow(x,n)\n    print(return_data)\n############## 第2关 ################\ndef gcd(a,b):\n    if a % b == 0:\n        return b\n    return gcd(b,a % b)\nif __name__ == \'__main__\':\n    a = int(input())\n    b = int(input())\n    return_data = gcd(a,b)\n    print(return_data)\n############## 第3关 ################\ndef lcm(m, n):\n    x = m * n  # x用于存放m与n的乘积\n    r = m % n\n    while r != 0:   #不用比较大小，若m小于n，则会在第一遍循环交换位置\n        m = n\n        n = r\n        r = m % n\n    return int(x / n)\nif __name__ == \'__main__\':\n    a = int(input())\n    b = int(input())\n    return_data = lcm(a,b)\n    print(return_data)\n############## 第4关 ################\ndef fabs(x):\n    if(x<0): \n        x = -x\n    return x\n\nif __name__ == \'__main__\':\n    x = eval(input())\n    return_data = fabs(x)\n    print(return_data)\n############## 第5关 ################\nimport math\ndef ceil(x):\n    return math.ceil(x)\nif __name__ == \'__main__\':\n    x = eval(input())\n    return_data = ceil(x)\n    print(return_data)\n############## 第6关 ################\nimport math\ndef floor(x):\n    return math.floor(x)\nif __name__ == \'__main__\':\n    x = eval(input())\n    return_data = floor(x)\n    print(return_data)\n############## 第7关 ################\nimport math\ndef factorial(n):\n   return math.factorial(n)\nif __name__ == \'__main__\':\n    x = int(input())\n    return_data = factorial(x)\n    print(return_data)\n############## 第8关 ################\ndef fsum(iterable):\n    return sum(iterable)\nif __name__ == \'__main__\':\n    x = list(map(eval, input().split()))\n    return_data = fsum(x)\n    print(\"{:.1f}\".format(return_data))\n############## 第 关 ################\n```\n\n## 字母查找\n\n```\ndef f(m,n):\n    for i in m:\n        if i not in n:\n            return \'NOT FOUND\'\n    return \'FOUND\'\n\nm=input()\nif m.isalpha():\n    n=input()\n    print(f(m,n))\nelse:\n    print(\'ERROR\')\n```\n\n## 字母查找2.0\n\n```\ndef f(m,n):\n    for i in m:\n        if n.count(i)>0:\n            n=n.replace(i,\'\',1)\n        else:\n            return \'NOT FOUND\'\n    return \'FOUND\'\n \n \nm=input()\nif m.isalpha():\n    n=input()\n    print(f(m,n))\nelse:\n    print(\'ERROR\')\n```\n\n## 华氏度转摄氏度速查表\n\n```\ndef F2C(f):\n        c=5*(f-32)/9\n        return c\n \n \nleft,right=map(int,input().split(\',\'))\nif left>right:\n    print(\'error\')\nelse:\n    for f in range(left,right+1,2):\n        print(\"{} : {:.2f}\".format(f,F2C(f)))\n```\n\n## 回文素数\n\n```\ndef isprime(n):\n    if n<2:\n        return False\n    for i in range(2,int(n**0.5)+1):\n        if n%i == 0:\n            return False\n    else:\n        return True\n \ndef ispal(n):\n    if str(n) == str(n)[::-1]:\n        return True\n    else:\n        return False\n \nn = int(input())\nnum,a = 2,0\nwhile a<n:\n    if ispal(num) and isprime(num) :\n        print(num,end=\' \')\n        a += 1\n    num += 1\n```\n\n## 反素数\n\n```\ndef ispal(n):   # 判断是否回文数\n    if str(n) == str(n)[::-1]:\n        return True\n    else:\n        return False\ndef isprime(n): # 判断是否素数\n    if n<2:\n        return False\n    for i in range(2,int(n**0.5)+1):\n        if n%i == 0:\n            return False\n    else:\n        return True\nn = int(input())\na = 0\nnum = 10\nwhile a < n:\n    if ispal(num) == False:\n        if isprime(num) and isprime(int(str(num)[::-1])):\n            print(num,end=\' \')\n            a += 1\n    num += 1\n```\n\n## 哥德巴赫猜想\n\n```\ndef is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    else:\n        return True\ndef goldbach_conjecture(num):\n    if num % 2 == 0 and num >= 4:\n        for i in range(num // 2+1): \n            if is_prime(i) and is_prime(num - i):\n                print(f\"{num}={i}+{num-i}\")\n    else:\n        print(\'Data error!\')\nif __name__ == \'__main__\':\n    positive_even = int(input())\n    goldbach_conjecture(positive_even)\n```\n\n## **二分法求平方根B**\n\n```\nimport math\ndef sqrt_binary(num, accuracy):\n    low, high = 0, num + 0.25 \n    while True:\n        x = (high + low) / 2\n        if abs(x * x - num) <= accuracy: \n            return x                 \n        elif x * x - num < 0:             \n            low = x                 \n        else:                             \n            high = x                 \nn, error = map(float, input().split(\',\'))\nprint(\'{:.8f}\'.format(sqrt_binary(n, error)))\nprint(\'{:.8f}\'.format(math.sqrt(n)))\n```\n\n## 本月天数\n\n```python\ndate = input()\nmonth = int(date[4:6])\nif month in [1, 3, 5, 7, 8, 10, 12]:\n    days = 31\nelif month in [4, 6, 9, 11]:\n    days = 30\nelse:\n    year = int(date[:4])  # 提取年份部分并转换为整数\n    if year % 400 == 0 or (year % 4 == 0 and year % 100 != 0):\n        days = 29  # 闰年2月有29天\n    else:\n        days = 28  # 平年2月有28天\nprint(days)\n```\n\n## 二分法求函数的零点\n\n```python\ndef fun(x):\n    return x**5-15*x**4+85*x**3-225*x**2+274*x-121\nn=int(input())\nif fun(1.5)<0:\n    a,b=1.5,2.4\nelse:\n    a,b=2.4,1.5\nwhile True:\n    mid=(a+b)/2\n    if abs(fun(mid))<10**(-n):\n        break\n    elif fun(mid)<0:\n        a=mid\n    else:\n        b=mid\nprint(\"{:.6f}\".format(mid))\n```\n\n', '暂封', 'Python,头歌,作业,答案,Python123', 0, 311, 0, 1, '888', 0, 1, '2023-12-25 19:05:26', '2024-01-19 19:12:21', 'janx', 0);
INSERT INTO `article` VALUES (90, 1, 1, 16, 0001, 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python答案  数值类型', NULL, '# 数值类型\n\n## A 数制转换（quiz-train-s）\n\n```\ndec = eval(input())\nprint(oct(dec))\nprint(hex(dec))\n```\n\n## A 计算几何形状的表面积与体积\n\n```\nimport math\ndef type_judge(geom_type):\n    if geom_type == \'长方形\':\n        length, width = map(float, input().split())\n        return square(length, width)\n    elif geom_type == \'长方体\':\n        length, width, height = map(float, input().split())\n        return cube(length, width, height)\n    elif geom_type == \'圆形\':\n        radius = float(input())\n        return circle(radius)\n    elif geom_type == \'球\':\n        radius = float(input())\n        return sphere(radius)\n    elif geom_type == \'圆柱体\':\n        radius, height = map(float, input().split())\n        return cylinder(radius, height)\n    elif geom_type == \'圆锥\':\n        radius, height = map(float, input().split())\n        return cone(radius, height)\n    elif geom_type == \'正三棱柱\':\n        side, height = map(float, input().split())\n        return tri_prism(side, height)\n    else:\n        return f\'未找到{geom_type}计算方法\'\n\ndef square(length, width):\n    area_of_square = length * width\n    return f\'长方形的面积为{area_of_square:.2f}\'\ndef cube(length, width, height):\n    area_of_cube = length * width * 2 + width * height * 2 + length * height * 2\n    volume_of_cube = length * width * height\n    return f\'长方体的表面积为{area_of_cube:.2f}, 体积为{volume_of_cube:.2f}\'\ndef circle(radius):\n    area_of_circle = math.pi * math.pow(radius, 2)\n    return f\'圆形的面积为{area_of_circle:.2f}\'\ndef sphere(radius):\n    area_of_sphere = 4*math.pi*math.pow(radius, 2)\n    volume_of_sphere = math.pi*math.pow(radius, 3)*4/3\n    return f\'球的表面积为{area_of_sphere:.2f}, 体积为{volume_of_sphere:.2f}\'\ndef cylinder(radius, height):\n    area_of_cylinder = 2*math.pi*radius*(radius+height)\n    volume_of_cylinder = math.pi*radius*radius*height\n    return f\'圆柱体的表面积为{area_of_cylinder:.2f}, 体积为{volume_of_cylinder:.2f}\'\ndef cone(radius, height):\n    area_of_cone = math.pi*radius * \\\n        (radius+math.sqrt(math.pow(radius, 2)+math.pow(height, 2)))\n    volume_of_cone = math.pi*math.pow(radius, 2)*height/3\n    return f\'圆锥的表面积为{area_of_cone:.2f}, 体积为{volume_of_cone:.2f}\'\ndef tri_prism(side, height):\n    area_of_tri_prism = math.sqrt(3)*math.pow(side, 2)/2+3*side*height\n    volume_of_tri_prism = math.sqrt(3)*math.pow(side, 2)*height/4\n    return f\'正三棱柱的表面积为{area_of_tri_prism:.2f}, 体积为{volume_of_tri_prism:.2f}\'\nif __name__ == \'__main__\':\n    type_of_geometry = input()\n    geometry = type_judge(type_of_geometry)\n    print(geometry)\n```\n\n## 计算几何形状的表面积与体积 （太多了，统一复制上题并改动）\n\n```\nif __name__ == \'__main__\':\n    type_of_geometry = input()\n    geometry = type_judge(\"长方形\") #根据题目改动 如：长方形、长方体、圆...\n    print(geometry)\n```\n\n## 学费计算\n\n### 第1关 学费计算\n\n```\npython = 3\nmath = 4\nenglish = 4\nphysical = 2\nmilitary_theory = 2\nphilosophy = 2\ncredits = (python + math + english + physical + military_theory + philosophy)\ntuition = eval(input())\nprint(f\'你本学期选修了{credits}个学分。\')\nprint(f\'你应缴纳的学费为{tuition*credits}元。\')\n```\n\n### 第2关 助学贷款\n\n```\npython = 3\nmath = 4\nenglish = 4\nphysical_education = 2\nmilitary_theory = 2\nphilosophy = 2\ntuition_per_credit = eval(input())\nliving_expenses = eval(input())\ntotal_credits = (python + math + english + physical_education +military_theory + philosophy)\ntotal_tuition = total_credits * tuition_per_credit\ntotal_cost = living_expenses*5 + total_tuition\nstudent_loan = total_cost * 0.6\nprint(f\'请输入每学分学费金额：请输入你每个月生活费：本学期你能够贷款{student_loan:.2f}元\')\n```\n\n## A 求绝对值（quiz-train-ss）\n\n```\nn = eval(input())\nprint(abs(n))\n```\n\n## A 整数四则运算（quiz-train-s）\n\n```\na = int(input())\nb = int(input())\nprint(f\'{a} + {b} = {a + b}\')\nprint(f\'{a} - {b} = {a - b}\')\nprint(f\'{a} * {b} = {a * b}\')\nprint(f\'{a} / {b} = {a / b}\')\n```\n\n## A 幂运算（quiz-train-s）\n\n```\na = int(input())\nb = int(input())\nm = int(input())\nprint(pow(a,b))\nprint(pow(a,b,m))\n```\n\n## A 计算多个垫片面积的和 （train-ss）\n\n```\npi = 3.14159;\na = int(input())\nb = int(input())\nc = int(input())\nprint(f\'{(a**2 - b**2)*pi*c:.2f}\')\n```\n\n## A 三角形周长与面积（quiz-train-s）\n\n```\nimport math\na = float(input())\nb = float(input())\nc = float(input())\ns = (a+b+c)/2\nprint(\"周长={:.2f}\".format(a+b+c))\nprint(\"面积={:.2f}\".format((s*(s-a)*(s-b)*(s-c))**0.5))\n```\n\n## A 表达式求值（quiz-train-s）\n\n```\na = float(input())\nb = float(input())\nc = float(input())\nprint(\'{:.2f}\'.format(((b**2-4*a*c)**0.5-b)/(2*a)))\n```\n\n## A 三角函数计算（train-ss）\n\n```\nimport math as m\na = eval(input())\nb = eval(input())\nprint(\'{:.2f}\'.format(((2*a*m.sin(m.pi/3)*m.cos(m.pi/3))**(1/2)-b)/(2*a)))\n```\n\n## A 助学贷款额度计算\n\n```\npython = 3\nmath = 4\nenglish = 4\nphysical = 2\nmilitary_theory = 2\nphilosophy = 2\ntuition_per_credit = eval(input())\nliving_expenses = eval(input())\ntotal_credits = (python + math + english + physical + military_theory + philosophy)\ntotal_tuition = total_credits * tuition_per_credit\ntotal_cost = living_expenses*5 + total_tuition\nstudent_loan = total_cost * 0.6\nprint(f\'本学期你能够贷款{student_loan:.2f}元\')\n```\n\n## A 计算存款利息（quiz-train-ss）\n\n```\nP =eval(input())\nN = eval(input())\ni = eval(input())\nF = (P*(i+1)**N)-P\nprint(\'存款={:.2f}\'.format(F))\n```\n\n## 计算弓形的面积\n\n### 第1关\n\n```第1关\nimport math\nAB = float(input())  # 弦长度\nCD = float(input())  # 弓高度\nAD = AB/2\nOA = (AD**2 + CD**2)/(2*CD)\nprint(\'{:.2f}\'.format(OA))\n```\n\n### 第2关\n\n```\nimport math\nAB = float(input())  # 弦长度\nCD = float(input())  # 弓高度\nAD = AB\nOA = (AD ** 2 + CD ** 2) / (2 * CD)\nAOB = 2 * math.asin(AD / OA)\nsector = AOB/(2*math.pi)*math.pi*(OA**2)\ntriangle = (1/2)*(OA**2)*math.sin(AOB)\narea_of_arch = sector - triangle\nprint(f\'{area_of_arch:.2f}\')\n```\n\n## A 除法运算（quiz-train-s）\n\n```\ndef division(m, n):\n    print(int(m/n))\n    print(m/n)\nif __name__ == \'__main__\':\n    a = int(input())\n    b = int(input())\n    division(a, b)  # 调用函数计算除法\n```\n\n## ', '可以白嫖，但不能当伸手党，密码是：站长的微信号', 'Python,头歌,作业,答案,Python123', 0, 467, 0, 1, 'janxland', 0, 1, '2023-12-25 20:58:32', '2024-01-19 19:25:00', 'janx', 0);

-- ----------------------------
-- Table structure for collection
-- ----------------------------
DROP TABLE IF EXISTS `collection`;
CREATE TABLE `collection`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `collection_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '合集名称',
  `collection_poster` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '合集封面',
  `collection_description` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '合集介绍',
  `collection_items` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '合集文章列表',
  `update_time` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '标签' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of collection
-- ----------------------------
INSERT INTO `collection` VALUES (1, '头歌Python作业答案（Python123）', 'https://www.dashtech.org/wp-content/uploads/2020/06/coding-768x513.jpg', '头歌Python作业答案（Python123）', NULL, '2024-01-19 19:02:41', '2024-01-19 18:45:57');

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `type` int NULL DEFAULT 0 COMMENT '分区',
  `source` int NOT NULL COMMENT '评论来源标识',
  `parent_comment_id` int NOT NULL DEFAULT 0 COMMENT '父评论ID',
  `user_id` int NOT NULL COMMENT '发表用户ID',
  `floor_comment_id` int NULL DEFAULT NULL COMMENT '楼层评论ID',
  `parent_user_id` int NULL DEFAULT NULL COMMENT '父发表用户名ID',
  `like_count` int NOT NULL DEFAULT 0 COMMENT '点赞数',
  `comment_content` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '评论内容',
  `comment_info` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '评论额外信息',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `source`(`source` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 13 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '文章评论表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (1, 0, 0, 0, 1, NULL, NULL, 0, '测试', NULL, '2022-12-23 12:01:31', 0);
INSERT INTO `comment` VALUES (2, 0, 55, 0, 1, NULL, NULL, 0, '测试', NULL, '2022-12-23 12:02:23', 0);
INSERT INTO `comment` VALUES (3, 0, 55, 2, 1, 2, 1, 0, '[捂嘴]', NULL, '2023-01-09 22:03:22', 0);
INSERT INTO `comment` VALUES (4, 0, 0, 0, 3, NULL, NULL, 0, '🤔🤔🥱🥱', NULL, '2023-03-15 10:42:13', 0);
INSERT INTO `comment` VALUES (5, 0, 0, 4, 1, 4, 3, 0, '[2023]', NULL, '2023-05-02 10:16:25', 0);
INSERT INTO `comment` VALUES (6, 0, 0, 0, 1, NULL, NULL, 0, '[2233娘_大笑]', NULL, '2023-11-13 14:21:03', 0);
INSERT INTO `comment` VALUES (7, 0, 84, 0, 1, NULL, NULL, 0, '[2233娘_喝水]', NULL, '2023-11-13 14:21:40', 0);
INSERT INTO `comment` VALUES (8, 0, 63, 0, 1, NULL, NULL, 0, '[2023][2023][2023][2023][嘟嘟][嘟嘟]', NULL, '2023-11-13 14:23:30', 0);
INSERT INTO `comment` VALUES (9, 0, 63, 8, 1, 8, 1, 0, 'nnn', NULL, '2023-11-13 14:23:39', 0);
INSERT INTO `comment` VALUES (10, 0, 71, 0, 1, NULL, NULL, 0, '🉑专属订制[脱单doge][热词系列_三连]', NULL, '2023-12-18 10:31:54', 0);
INSERT INTO `comment` VALUES (11, 0, 85, 0, 1, NULL, NULL, 0, '祝大家期末过过过[锦鲤]，觉得有用的可以微信v一杯奶茶哦[奶茶干杯][奶茶干杯][热词系列_三连]易班、U校园、学习通...等网课也可以来哦', NULL, '2023-12-23 17:57:05', 0);
INSERT INTO `comment` VALUES (12, 0, 85, 0, 1, NULL, NULL, 0, '其他期末资料联系<janx,https://qiniu.roginx.ink/commentPicture/janx11703497706128323>', NULL, '2023-12-25 17:46:58', 0);

-- ----------------------------
-- Table structure for diary
-- ----------------------------
DROP TABLE IF EXISTS `diary`;
CREATE TABLE `diary`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '用户ID',
  `sort_id` int NOT NULL DEFAULT 1 COMMENT '分类ID',
  `label_id` int NOT NULL DEFAULT 1 COMMENT '标签ID',
  `article_cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '封面',
  `article_type` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT 'Diary' COMMENT '类型',
  `article_items` varchar(6000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '图组',
  `article_title` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '日记标题',
  `article_emotion` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '当日心情',
  `article_content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '日记内容',
  `article_address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '地点',
  `article_device` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '设备',
  `keywords` varchar(2000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '关键词',
  `permission` int NOT NULL DEFAULT 0 COMMENT '可见权限',
  `view_count` int NOT NULL DEFAULT 0 COMMENT '浏览量',
  `like_count` int NOT NULL DEFAULT 0 COMMENT '点赞数',
  `view_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否可见[0:否，1:是]',
  `password` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '密码',
  `recommend_status` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否推荐[0:否，1:是]',
  `comment_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用评论[0:否，1:是]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最终修改时间',
  `update_by` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '最终修改人',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 21 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of diary
-- ----------------------------
INSERT INTO `diary` VALUES (1, 1, 2, 10, NULL, NULL, '[[\"//qiniu.roginx.ink/log-upload/2023/1/janx11672810817160877\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672810817161506\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672810817162928\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672810817161882\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672810817162434\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672810880361272\"],[\"\",\"\",\"\",\"\",\"\",\"\"]]', '回家咯', '困', '12月8日接到通知马上走人，学校不能待了，赶紧买票回家。广州珠海刚开放，看看这路上会不会变小洋人吧', '湖南·长沙', 'redmi note 11T pro+', NULL, 0, 0, 0, 1, '3612', 0, 1, '2022-12-09 17:48:50', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (2, 1, 2, 10, NULL, NULL, '[[\"//qiniu.roginx.ink/log-upload/2023/1/janx11672808946540521\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672808946540635\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672808946540272\"],[\"唯一真神😍！！！\",\"够分量的卤粉啊😍\",\"\"]]', '1', '难受', '早上嗦粉\n午饭嗦粉\n晚上来点圣女果补充维C🤗🤗🤗', '广西·贵港', 'redmi note 11T pro+', NULL, 0, 0, 0, 1, '3612', 0, 1, '2022-12-29 17:48:53', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (3, 1, 2, 10, NULL, NULL, '[[\"//qiniu.roginx.ink/log-upload/2023/1/janx11672736328055969\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672736328055686\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672736328056132\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11672736328054537\"],[\"\",\"\",\"\",\"\"]]', '跨年', '摸鱼 开心', 'b跨前面还行吧，咏春开始就困了 ，后面还像艺三来个十分钟广告催眠，我干脆去海鲜看主播了。\n感觉今年也没啥，也就看到个听歌总结估摸出今年写的代码量，原来我真是需要一个抓耳的噪音才有劲啊。😄', '广西·贵港·平南县', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2023-01-01 00:00:00', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (4, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/1/janx11674659332218644\",\"//qiniu.roginx.ink/log-upload/2023/1/janx1167465933221992\"],[\"八年陪伴\",\"\"]]', '八年陪伴一朝更替', '悲伤', '<p>眼看起<b>高楼</b></p>\n<p>如今却这样黯然退场</p>\n<p>父亲被诊出<b>肝硬化</b>后，我才知晓家庭的大致情况。</p>\n<p>房子是父辈拼的，我的情绪无法左右现实，我也只是一个<b>旁观者</b>。</p>\n<p>听闻为这栋楼向银行贷款了40W，如今卖出后减去各种手续费还剩二三十万，<b>或许</b>这个家会因此过的好些吧，但我总感到有些不安。</p>\n<p>再见2012～2020</p>', '广西·平南县·乌江莲花小区', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2021-01-17 11:31:21', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (5, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197512\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704194886\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197238\",\"//qiniu.roginx.ink/log-upload/2023/1/janx1167474270419710\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196616\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197627\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197123\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198896\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198133\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198243\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198833\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195525\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195842\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195473\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196154\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196321\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196558\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195552\",\"//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196614\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]]', '大年初三 雄森动物园', 'high翻天', '大年初三表弟妹们动物园一日游😊😊😊😀', '广西·平南县·雄森动物大世界', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2023-02-22 22:21:03', '2023-07-09 17:01:52', NULL, 0);
INSERT INTO `diary` VALUES (6, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/3/janx11678632170818789\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678632170817151\"],[\"拿大头照试试\",\"试试改年龄prompt\"]]', '看趋势', '思考🤔', '最近novel AI很火嘛，我也上手试了试，感觉还可以。\n目前看来人工智能大爆发真的要来了，目前应该是外围遥遥领先，压力来了我国也会跟紧赛道，我这专业前景不错，可惜还是迟了两年😭', '湖南·长沙', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2022-10-12 22:21:03', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (7, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682862165\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682864692\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863859\",\"//qiniu.roginx.ink/log-upload/2023/3/janx1167853868286294\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682864680\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863782\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682864988\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863834\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11678631395964916\"],[\"\",\"\",\"\",\"\",\"\",\"吃吃午饭\",\"一只猫猫悄悄跳上了木桌\",\"\",\"好嗦\"]]', '周六', '惬意😊', '明明是清晨，怎会<br/>\"思而不得，念而不忘，想而不见\"', '湖南省·长沙市·岳麓区·湖南工商大学', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2023-03-11 20:48:49', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (8, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/3/janx11679135221456792\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11679135221455911\"],[\"领涨\",\"走势\"]]', '游戏', '🤔', '&emsp;&emsp;最近游戏和传媒行业的股价持续上涨，可能不仅仅是因为版号发放的问题。我认为这是因为国家已经认识到游戏是人工智能和科技创新的发展风向标。<br/>\n&emsp;&emsp;在人事方面，游戏确实是一个好东西。游戏容易引起人们的情绪波动，并且变化率非常大，因此十分适合哄情绪。这很容易让人沉浸于虚拟世界，有助于缓解社会压力，有助于进行维稳工作。<br/>\n&emsp;&emsp;在文化方面，游戏作为一种娱乐和文化载体，在文化传播方面具有重要的影响。游戏不仅可以传递文化信息和价值观，还可以对不同文化之间的交流和理解产生积极的影响。<br/>\n&emsp;&emsp;在科技方面，游戏行业也在不断发展创新。游戏对显卡和专业显卡的要求越来越高，推动了显卡技术的不断进步和发展。而随着显卡技术的不断发展，逐渐出现了专门为深度学习训练服务的专业显卡，从而提高了全球算力。<br/>\n&emsp;&emsp;在市场方面，随着AIGC概念的出现，未来游戏将变得更加真实和多样化。全球人口如此庞大，有许多人渴望自己创造内容，因此需要这个概念的落实。<br/>\n&emsp;&emsp;在未来，游戏是Web3和元宇宙不可或缺的一环，无论这些概念是否成熟，都可以预见游戏仍然是未来某些概念的重要一环。', '湖南·长沙·岳麓区', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2023-03-18 18:28:13', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (9, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/3/janx11679639277519483\"],[\"\"]]', '机遇', '🤔', '&emsp;&emsp;前几天开了组会，分享了一个内容，主题是：<a href=\"https://mp.weixin.qq.com/s/358YbdNSYX0KWmQw_hMKRw\" target=\"_blank\">英伟达黄仁勋宣布AI “iPhone”时刻到来</a>\n<br />\n&emsp;&emsp;看完这篇文章我挺激动的，这将是全球算力的飞跃提升啊！我同时也在思考，外围的半导体技术已经达到这个水平，我们这个人口大国又怎么追赶呢？然后我去看了看A股，嗯....（以下废话，看看就好）<br />\n&emsp;&emsp;我们的半导体技术已经追不上了，而且在AI领域也会追不上。但是我们显然不允许自己错失这个生产力变革机会，所以我们会更多的关注应用领域（简称：用现有技术造现钱），尤其是AIGC。游戏和传媒会引来持续大涨（这是AI在我国少有的能变现的大市场），半导体可能会阴跌。<br/>\n所以在这个时期，投资外围科技（英伟达、微软）+A股游戏传媒信创+港股恒生科技（互联网企业还是掌握大部分数据的，游戏也是互联网的一部分）应该会比较划算。', '湖南·长沙·岳麓区', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2023-03-24 14:31:51', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (10, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/3/janx11679645241659491\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11679645241660933\",\"//qiniu.roginx.ink/log-upload/2023/3/janx11679645241660471\"],[\"\",\"\",\"\"]]', '追高', '激动', '&emsp;&emsp;\"凑了个1314去追高，反应还挺大的，加个5200继续追高吧，希望未来的是红，就当是游戏一场了。\"<br/>\n&emsp;&emsp;这句话看着舒服，我就是为了这个醋包的饺子。', '湖南·长沙·岳麓区', '(Windows NT 10.0; Win64; x64)', NULL, 2, 0, 0, 1, '3612', 0, 1, '2023-03-24 16:07:36', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (11, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289639373\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289640738\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289641778\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289642825\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289639950\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289641813\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289642447\",\"//qiniu.roginx.ink/log-upload/2023/4/janx1168036228964278\",\"//qiniu.roginx.ink/log-upload/2023/4/janx1168036228964146\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289640899\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362289640474\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362778846929\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362778845755\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362778847325\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11680362778847518\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11681356599443894\"],[\"好飒的妈妈\",\"🦈水族馆？\",\"发型从这里就被决定了（悲\",\"好像也不止是发型\",\"表弟&老妹&我(摸头杀)\",\"暑假在外婆家（不能偷偷玩老爸电脑了😭\",\"摘龙眼\",\"小菜地\",\"很不情愿的协助表姐摘石榴\",\"姑姑&表弟&我&老妹\",\"七姑&二姑&我&表哥\",\"大学水课无聊\",\"阳光与篮球\",\"大学水课痛苦面具\",\"我要看看痘痘什么时候能消去（刚跑完体适能\",\"（熬夜了，屏蔽黑眼圈\"]]', '一个男孩', '发癫', '感觉只要看头发就能分辨出哪个是我了。。。\n<br />\n这是不是说明我一直就是这个发际线，我并没有脱发！\n<br />\n我真是个天才！', '湖南·长沙', '(Windows NT 10.0; Win64; x64)', NULL, 2, 0, 0, 1, '3612', 0, 1, '2023-04-01 23:45:36', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (12, 1, 2, 10, NULL, 'Diary', '[[],[]]', '近况总结', '啊吧啊吧', '开始不玩游戏的第二周：\n<br />\n1）很多人都问我是否考研啊，我的回答一直都是不考，我甚至连四六级、各种比赛都不想去报名参加。（跟很多人说都不信）\n<br />\n也不是我摆，本来高中就逃避应试天天翻墙逃课的，现在只要一想到去写题去写作业我就有个底层情绪在做抵触。\n<br />\n2）上周导师组会，会上确定了组内的研究方向，也认识到很多研究生学长学姐。也体会到什么叫“那年18站着如喽啰”\n<br />\n3）感谢各位学长学姐，这两周认识了不少兴趣相投的大佬~~\n<br />\n4）之前给兄弟们开了会议，主要是想拉兄弟们快速入门槛，不敢给计科专业的太多帮助，因为技术栈太多，一览全栈可能会让人举步维艰。\n<br />\n这些情绪体验，我都把他们当做Trouvaille，也就是生活中的小确幸。\n\n', '湖南·长沙', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2023-04-04 07:50:19', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (13, 1, 2, 10, NULL, 'Diary', '[[],[]]', '未知', '未知', '&emsp;以前玩看门狗只知道爽玩，剧情懵懵懂懂就过完了，印象最深的还是《克拉拉之死》任务\n<br/>\n\n<iframe src=\"//player.bilibili.com/player.html?aid=777605625&bvid=BV1V14y1u7HP&cid=958969022&page=1\" scrolling=\"no\" width=100% height=320px border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>', '未知', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2023-04-05 22:27:33', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (14, 1, 2, 10, NULL, 'Diary', '[[\"https://alist.roginx.ink/d/OneAlbum/%E5%90%83%E5%90%83%E5%90%83/IMG_20221126_115311.jpg\",\"https://alist.roginx.ink/d/OneAlbum/%E5%90%83%E5%90%83%E5%90%83/IMG_20221126_115306.jpg\",\"https://alist.roginx.ink/d/OneAlbum/%E5%90%83%E5%90%83%E5%90%83/IMG_20221126_120438.jpg\"],[\"店里氛围不错\",\"小假山~\",\"吃辣子稍饮红酒\"]]', '湘醉', '愉悦😊', '环境好饭菜也好吃，就是略贵', '湖南·长沙·岳麓区·湘醉', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2023-04-08 12:08:19', '2023-07-09 17:01:52', NULL, 0);
INSERT INTO `diary` VALUES (15, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/4/janx11681549699758300\",\"//qiniu.roginx.ink/log-upload/2023/4/janx11681549699758879\"],[\"\",\"\"]]', '哈哈哈', '难绷', '难绷啊。可不可以搭个学习资料分享站，然后设置图形验证码完成后领取呢!', '互联网', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2023-04-15 17:09:23', '2023-07-09 17:01:52', NULL, 0);
INSERT INTO `diary` VALUES (16, 1, 2, 10, NULL, 'Diary', '[[\"http://alist.roginx.ink/d/OneAlbum/Myself/mmexport1680744272349.jpg\",\"http://alist.roginx.ink/d/OneAlbum/Myself/mmexport1680744275055.jpg\",\"http://alist.roginx.ink/d/OneAlbum/Myself/mmexport1680744285888.jpg\",\"http://alist.roginx.ink/d/OneAlbum/Myself/mmexport1680744283254.jpg\",\"http://alist.roginx.ink/d/OneAlbum/Myself/mmexport1680744293071.jpg\"],[\"高三&&初一😮\",\"妹&&侄\",\"侄&&母\",\"\",\"\"]]', '高考中考加油', '😶', '还有一个月了，高考加油啊老妹~~', '广西·贵港·平南', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2023-05-02 10:29:32', '2023-07-09 17:01:52', NULL, 0);
INSERT INTO `diary` VALUES (17, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072787\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413070530\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071366\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071670\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071145\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071219\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072176\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413070593\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072990\",\"//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072512\"],[\"Gold sunshine\",\"大一去调研 excuse me?\",\"出发\",\"立体停车场取车好慢喔\",\"师兄师姐们\",\"湘雅三医院空中急救场地被拿来？\",\"雨中猫\",\"在B站发个视频被拉到了牛逼的群\",\"室友\",\"室友\"]]', '最近', '🤩', '【P2-P6】跟导师去中南湘雅三医院调研了，啊这小涟漪，突然被@是真吓人啊。。。\n【P9P10】这是我室友，因为他实在太菜了，听说我朋友圈卧虎藏龙，想在这找一个数学搭子带他上大师。', '互联网', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, '3612', 0, 1, '2023-05-06 23:08:14', '2023-07-09 17:01:52', 'janx', 0);
INSERT INTO `diary` VALUES (18, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/6/janx11686407738271722\",\"//qiniu.roginx.ink/log-upload/2023/6/janx11686407738271834\",\"//qiniu.roginx.ink/log-upload/2023/6/janx11686407738271452\",\"//qiniu.roginx.ink/log-upload/2023/6/janx11686407738272605\"],[\"学校在孵项目~\",\"华为运动手表⌚\",\"瘦的一批😫\",\"起猛了，猛吃😋😋\"]]', '起猛了', '无聊', '无聊无聊无聊等消息等消息等消息<br>\n我发现瘦也有瘦的好处，我这个项目，五年没运动线条还在，我要是build一下项目会变成什么样哦😍😍😍', '长沙', '(Windows NT 10.0; Win64; x64)', NULL, 1, 0, 0, 1, '3612', 0, 1, '2023-06-10 22:37:25', '2023-07-09 17:01:52', NULL, 0);
INSERT INTO `diary` VALUES (19, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236979811806\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990892292\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696237107502303\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990901176\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696237107502671\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990895678\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990894595\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990893158\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990893895\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990899487\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990893189\",\"//qiniu.roginx.ink/log-upload/2023/10/janx1169623699089488\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990899533\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990895581\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990897587\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990898120\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990895355\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990896879\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990896107\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990897712\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990897437\",\"//qiniu.roginx.ink/log-upload/2023/10/janx11696236990898478\"],[\"橘子洲头 | 缆车 车竹林\",\"橘子洲头 | 毛泽东青年雕塑\",\"\",\"老是有人偷拍我\",\"偷拍就算了还发家族群😫\",\"岳麓书院的竹林\",\"中秋节 | 湖大学生的商业经\",\"大晚上的买个月兔赏月\",\"\",\"和主席一起赏月\",\"\",\"\",\"听说是第一票房\",\"岳麓山 |  下次来我要点六杯免费的幽兰拿铁！\",\"\",\"\",\"\",\"美味肴 | 烟晓\",\"小海要敬酒了😱\",\"\",\"吃完饭给方伯伯庆生\",\"起猛了 身上全是酒精碰到二次元\"]]', '中秋国庆', '累😪 · 开心😀 · 无语😫', '中秋国庆+方伯伯生日。<br /> 大家玩的都很开心，就是有点费腿。', '长沙', '(Windows NT 10.0; Win64; x64)', NULL, 2, 0, 0, 1, '3612', 0, 1, '2023-10-02 16:55:41', '2023-10-02 17:21:18', 'janx', 0);
INSERT INTO `diary` VALUES (20, 1, 2, 10, NULL, 'Diary', '[[\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474272145\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474271235\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474270135\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275619\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275158\",\"//qiniu.roginx.ink/log-upload/2024/1/janx1170556947427726\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275972\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275956\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474272499\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474273107\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474272492\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569461513329\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474274389\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474273523\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474273467\",\"//qiniu.roginx.ink/log-upload/2024/1/janx1170556947427485\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474277572\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474276947\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474276764\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474276993\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474271589\",\"//qiniu.roginx.ink/log-upload/2024/1/janx11705569474271338\"],[\"走一下烈士公园\",\"\",\"\",\"\",\"\",\"感觉像是在老家拍的\",\"\",\"\",\"小吃一条街 \",\"🍘🍘🍘🍘\",\"🌶️🥩🥩🌶️\",\"🥟🥟🥟🥟\",\"臭豆腐🧆\",\"🍠🍠🍠🍠\",\"🌰🌰🌰🌰\",\"🍙🍙🍙🍙\",\"🦐 徐记海鲜 🦐\",\"🦪🦪🦪🦪\",\"🐟🐟🐟🐟\",\"🦪🦪🦪🦪\",\"茶艺\",\"\"]]', '2024 · 元旦 · 一日游', '😆(*^▽^*)😆', '虽说准备考试了，但该玩还是得玩啊。', '湖南 · 长沙', '(Windows NT 10.0; Win64; x64)', NULL, 0, 0, 0, 1, NULL, 0, 1, '2024-01-01 17:30:01', '2024-01-18 17:32:14', NULL, 0);

-- ----------------------------
-- Table structure for goods
-- ----------------------------
DROP TABLE IF EXISTS `goods`;
CREATE TABLE `goods`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '商品名称',
  `price` decimal(10, 2) NULL DEFAULT NULL COMMENT '商品价格',
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '商品描述',
  `store` int NULL DEFAULT NULL COMMENT '库存',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `unit` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '单位',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of goods
-- ----------------------------
INSERT INTO `goods` VALUES (1, '香蕉', 6.99, '进口香蕉', 996, '2022-08-22 18:07:15', '2022-08-22 18:07:17', '500g');
INSERT INTO `goods` VALUES (2, '榴莲', 99.00, '猫山王榴莲', 2020, '2022-08-22 18:54:23', '2022-08-22 18:54:26', '500g');

-- ----------------------------
-- Table structure for im_chat_group
-- ----------------------------
DROP TABLE IF EXISTS `im_chat_group`;
CREATE TABLE `im_chat_group`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `group_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '群名称',
  `master_user_id` int NOT NULL COMMENT '群主用户ID',
  `avatar` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '群头像',
  `introduction` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '简介',
  `notice` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '公告',
  `in_type` tinyint(1) NOT NULL DEFAULT 1 COMMENT '进入方式[0:无需验证，1:需要群主或管理员同意]',
  `group_type` tinyint NOT NULL DEFAULT 1 COMMENT '类型[1:聊天群，2:话题]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '聊天群' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of im_chat_group
-- ----------------------------

-- ----------------------------
-- Table structure for im_chat_group_user
-- ----------------------------
DROP TABLE IF EXISTS `im_chat_group_user`;
CREATE TABLE `im_chat_group_user`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `group_id` int NOT NULL COMMENT '群ID',
  `user_id` int NOT NULL COMMENT '用户ID',
  `verify_user_id` int NULL DEFAULT NULL COMMENT '审核用户ID',
  `remark` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  `admin_flag` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否管理员[0:否，1:是]',
  `user_status` tinyint NOT NULL COMMENT '用户状态[0:未审核，1:审核通过，2:禁言]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '聊天群成员' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of im_chat_group_user
-- ----------------------------

-- ----------------------------
-- Table structure for im_chat_user_friend
-- ----------------------------
DROP TABLE IF EXISTS `im_chat_user_friend`;
CREATE TABLE `im_chat_user_friend`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '用户ID',
  `friend_id` int NOT NULL COMMENT '好友ID',
  `friend_status` tinyint NOT NULL COMMENT '朋友状态[0:未审核，1:审核通过]',
  `remark` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '备注',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '好友' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of im_chat_user_friend
-- ----------------------------

-- ----------------------------
-- Table structure for im_chat_user_group_message
-- ----------------------------
DROP TABLE IF EXISTS `im_chat_user_group_message`;
CREATE TABLE `im_chat_user_group_message`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `group_id` int NOT NULL COMMENT '群ID',
  `from_id` int NOT NULL COMMENT '发送ID',
  `to_id` int NULL DEFAULT NULL COMMENT '接收ID',
  `content` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '内容',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '群聊记录' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of im_chat_user_group_message
-- ----------------------------

-- ----------------------------
-- Table structure for im_chat_user_message
-- ----------------------------
DROP TABLE IF EXISTS `im_chat_user_message`;
CREATE TABLE `im_chat_user_message`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `from_id` int NOT NULL COMMENT '发送ID',
  `to_id` int NOT NULL COMMENT '接收ID',
  `content` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '内容',
  `message_status` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否已读[0:未读，1:已读]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `union_index`(`to_id` ASC, `message_status` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '单聊记录' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of im_chat_user_message
-- ----------------------------

-- ----------------------------
-- Table structure for label
-- ----------------------------
DROP TABLE IF EXISTS `label`;
CREATE TABLE `label`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `sort_id` int NOT NULL COMMENT '分类ID',
  `label_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '标签名称',
  `label_description` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '标签描述',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 16 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '标签' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of label
-- ----------------------------
INSERT INTO `label` VALUES (1, 1, '单片机', '硬件');
INSERT INTO `label` VALUES (2, 1, '玩机', '玩机分享');
INSERT INTO `label` VALUES (3, 1, '技巧', '一些小技巧');
INSERT INTO `label` VALUES (4, 1, '互联网', '挖掘互联网信息');
INSERT INTO `label` VALUES (5, 1, '大数据', '大数据时代挖掘者');
INSERT INTO `label` VALUES (6, 1, '前端', '前端知识大讲堂');
INSERT INTO `label` VALUES (7, 1, '后端', '分享后端知识');
INSERT INTO `label` VALUES (8, 1, '算法', '算法');
INSERT INTO `label` VALUES (9, 1, '数据结构', '数据结构');
INSERT INTO `label` VALUES (10, 2, '娱乐', '生活需要一些调剂品');
INSERT INTO `label` VALUES (11, 4, '2022', '2022年归档');
INSERT INTO `label` VALUES (12, 4, '2021', '2021年归档');
INSERT INTO `label` VALUES (13, 4, '2020', '2020年归档');
INSERT INTO `label` VALUES (14, 4, '2019', '2019年归档');
INSERT INTO `label` VALUES (15, 1, '人工智能', 'AI时代，探索先行');
INSERT INTO `label` VALUES (16, 1, 'Python', '来点简单的Python吧');

-- ----------------------------
-- Table structure for orders
-- ----------------------------
DROP TABLE IF EXISTS `orders`;
CREATE TABLE `orders`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '订单名称',
  `order_id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '订单id',
  `alipay_no` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '支付宝订单号',
  `create_time` datetime NULL DEFAULT NULL COMMENT '创建时间',
  `pay_time` datetime NULL DEFAULT NULL COMMENT '更新时间',
  `state` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '订单状态',
  `goods_id` int NULL DEFAULT NULL COMMENT '商品id',
  `total` decimal(10, 2) NULL DEFAULT NULL COMMENT '总价格',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of orders
-- ----------------------------
INSERT INTO `orders` VALUES (3, '购买香蕉订单', '202208221661165525068', NULL, '2022-08-22 18:52:05', NULL, NULL, 1, 6.99);
INSERT INTO `orders` VALUES (4, '购买香蕉订单', '202312081702040124189', NULL, '2023-12-08 20:55:24', NULL, NULL, 1, 6.99);

-- ----------------------------
-- Table structure for privilege_group
-- ----------------------------
DROP TABLE IF EXISTS `privilege_group`;
CREATE TABLE `privilege_group`  (
  `id` int NOT NULL COMMENT '权限组id',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '权限组名',
  `update_time` timestamp NULL DEFAULT NULL COMMENT '修改时间',
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of privilege_group
-- ----------------------------

-- ----------------------------
-- Table structure for resource
-- ----------------------------
DROP TABLE IF EXISTS `resource`;
CREATE TABLE `resource`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '用户ID',
  `type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '资源类型',
  `path` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '资源路径',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用[0:否，1:是]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 198 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '资源信息' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of resource
-- ----------------------------
INSERT INTO `resource` VALUES (55, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx1167465933221992', 1, '2023-01-25 23:08:54');
INSERT INTO `resource` VALUES (56, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674659332218644', 1, '2023-01-25 23:08:54');
INSERT INTO `resource` VALUES (57, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197512', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (58, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704194886', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (59, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197238', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (60, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx1167474270419710', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (61, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196616', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (62, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197627', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (63, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198896', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (64, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704197123', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (65, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198133', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (66, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198243', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (67, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704198833', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (68, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195525', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (69, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195473', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (70, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196154', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (71, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196321', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (72, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196558', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (73, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195552', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (74, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704196614', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (75, 1, 'log-upload/2023/1', '//qiniu.roginx.ink/log-upload/2023/1/janx11674742704195842', 1, '2023-01-26 22:18:27');
INSERT INTO `resource` VALUES (76, 1, 'articleCover', '//qiniu.roginx.ink/articleCover/janx11676196004879125', 1, '2023-02-12 18:00:07');
INSERT INTO `resource` VALUES (77, 1, 'articleCover', '//qiniu.roginx.ink/articleCover/janx1167619611011581', 1, '2023-02-12 18:01:52');
INSERT INTO `resource` VALUES (78, 1, 'articleCover', '//qiniu.roginx.ink/articleCover/janx1167798192687328', 1, '2023-03-05 10:05:28');
INSERT INTO `resource` VALUES (79, 1, 'articleCover', '//qiniu.roginx.ink/articleCover/janx11678322739328844', 1, '2023-03-09 08:45:39');
INSERT INTO `resource` VALUES (80, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863782', 1, '2023-03-11 20:44:44');
INSERT INTO `resource` VALUES (81, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863443', 1, '2023-03-11 20:44:44');
INSERT INTO `resource` VALUES (82, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863859', 1, '2023-03-11 20:44:45');
INSERT INTO `resource` VALUES (83, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx1167853868286294', 1, '2023-03-11 20:44:47');
INSERT INTO `resource` VALUES (84, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682864692', 1, '2023-03-11 20:44:48');
INSERT INTO `resource` VALUES (85, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682863834', 1, '2023-03-11 20:44:48');
INSERT INTO `resource` VALUES (86, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682864680', 1, '2023-03-11 20:44:48');
INSERT INTO `resource` VALUES (87, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682862165', 1, '2023-03-11 20:44:49');
INSERT INTO `resource` VALUES (88, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538682864988', 1, '2023-03-11 20:44:49');
INSERT INTO `resource` VALUES (89, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678538706805502', 1, '2023-03-11 20:45:07');
INSERT INTO `resource` VALUES (90, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678631395964916', 1, '2023-03-12 22:29:58');
INSERT INTO `resource` VALUES (91, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678632170818789', 1, '2023-03-12 22:42:52');
INSERT INTO `resource` VALUES (92, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11678632170817151', 1, '2023-03-12 22:42:52');
INSERT INTO `resource` VALUES (93, 3, 'userAvatar', '//qiniu.roginx.ink/userAvatar/song31678848157414666', 1, '2023-03-15 10:42:38');
INSERT INTO `resource` VALUES (94, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11679135221455911', 1, '2023-03-18 18:27:01');
INSERT INTO `resource` VALUES (95, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11679135221456792', 1, '2023-03-18 18:27:01');
INSERT INTO `resource` VALUES (96, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11679639277519483', 1, '2023-03-24 14:27:56');
INSERT INTO `resource` VALUES (97, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11679645241660471', 1, '2023-03-24 16:07:19');
INSERT INTO `resource` VALUES (98, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11679645241659491', 1, '2023-03-24 16:07:19');
INSERT INTO `resource` VALUES (99, 1, 'log-upload/2023/3', '//qiniu.roginx.ink/log-upload/2023/3/janx11679645241660933', 1, '2023-03-24 16:07:19');
INSERT INTO `resource` VALUES (100, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289639373', 1, '2023-04-01 23:18:09');
INSERT INTO `resource` VALUES (101, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289640738', 1, '2023-04-01 23:18:09');
INSERT INTO `resource` VALUES (102, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289641778', 1, '2023-04-01 23:18:10');
INSERT INTO `resource` VALUES (103, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289640899', 1, '2023-04-01 23:18:10');
INSERT INTO `resource` VALUES (104, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx1168036228964146', 1, '2023-04-01 23:18:12');
INSERT INTO `resource` VALUES (105, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289642447', 1, '2023-04-01 23:18:12');
INSERT INTO `resource` VALUES (106, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx1168036228964278', 1, '2023-04-01 23:18:12');
INSERT INTO `resource` VALUES (107, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289640474', 1, '2023-04-01 23:18:14');
INSERT INTO `resource` VALUES (108, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289641813', 1, '2023-04-01 23:18:15');
INSERT INTO `resource` VALUES (109, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289642825', 1, '2023-04-01 23:18:15');
INSERT INTO `resource` VALUES (110, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362289639950', 1, '2023-04-01 23:18:16');
INSERT INTO `resource` VALUES (111, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362778846929', 1, '2023-04-01 23:26:38');
INSERT INTO `resource` VALUES (112, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362778847619', 1, '2023-04-01 23:26:38');
INSERT INTO `resource` VALUES (113, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362778847325', 1, '2023-04-01 23:26:44');
INSERT INTO `resource` VALUES (114, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362778845755', 1, '2023-04-01 23:26:55');
INSERT INTO `resource` VALUES (115, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11680362778847518', 1, '2023-04-01 23:26:56');
INSERT INTO `resource` VALUES (116, 1, 'articleCover', '//qiniu.roginx.ink/articleCover/janx11680401100683241', 1, '2023-04-02 10:04:59');
INSERT INTO `resource` VALUES (117, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11681356599443894', 1, '2023-04-13 11:29:59');
INSERT INTO `resource` VALUES (118, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11681549699758879', 1, '2023-04-15 17:08:20');
INSERT INTO `resource` VALUES (119, 1, 'log-upload/2023/4', '//qiniu.roginx.ink/log-upload/2023/4/janx11681549699758300', 1, '2023-04-15 17:08:20');
INSERT INTO `resource` VALUES (120, 1, 'articlePicture', '//qiniu.roginx.ink/articlePicture/janx11681549735745', 1, '2023-04-15 17:08:55');
INSERT INTO `resource` VALUES (121, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413070530', 1, '2023-05-20 09:33:33');
INSERT INTO `resource` VALUES (122, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413070593', 1, '2023-05-20 09:33:33');
INSERT INTO `resource` VALUES (123, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072512', 1, '2023-05-20 09:33:36');
INSERT INTO `resource` VALUES (124, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072176', 1, '2023-05-20 09:33:38');
INSERT INTO `resource` VALUES (125, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072856', 1, '2023-05-20 09:33:43');
INSERT INTO `resource` VALUES (126, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071366', 1, '2023-05-20 09:33:47');
INSERT INTO `resource` VALUES (127, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072787', 1, '2023-05-20 09:33:48');
INSERT INTO `resource` VALUES (128, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413072990', 1, '2023-05-20 09:33:49');
INSERT INTO `resource` VALUES (129, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071670', 1, '2023-05-20 09:33:49');
INSERT INTO `resource` VALUES (130, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071145', 1, '2023-05-20 09:33:49');
INSERT INTO `resource` VALUES (131, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071219', 1, '2023-05-20 09:33:52');
INSERT INTO `resource` VALUES (132, 1, 'log-upload/2023/5', '//qiniu.roginx.ink/log-upload/2023/5/janx11684546413071960', 1, '2023-05-20 09:33:52');
INSERT INTO `resource` VALUES (133, 1, 'log-upload/2023/6', '//qiniu.roginx.ink/log-upload/2023/6/janx11686407738271834', 1, '2023-06-10 22:35:39');
INSERT INTO `resource` VALUES (134, 1, 'log-upload/2023/6', '//qiniu.roginx.ink/log-upload/2023/6/janx11686407738271722', 1, '2023-06-10 22:35:39');
INSERT INTO `resource` VALUES (135, 1, 'log-upload/2023/6', '//qiniu.roginx.ink/log-upload/2023/6/janx11686407738271452', 1, '2023-06-10 22:35:39');
INSERT INTO `resource` VALUES (136, 1, 'log-upload/2023/6', '//qiniu.roginx.ink/log-upload/2023/6/janx11686407738272605', 1, '2023-06-10 22:35:39');
INSERT INTO `resource` VALUES (137, 1, 'articlePicture', '//qiniu.roginx.ink/articlePicture/janx11690120079809189', 1, '2023-07-23 21:48:00');
INSERT INTO `resource` VALUES (138, 1, 'articlePicture', '//qiniu.roginx.ink/articlePicture/janx11690120096563217', 1, '2023-07-23 21:48:16');
INSERT INTO `resource` VALUES (139, 1, 'articlePicture', '//qiniu.roginx.ink/articlePicture/janx11690120096563369', 1, '2023-07-23 21:48:16');
INSERT INTO `resource` VALUES (140, 1, 'articlePicture', '//qiniu.roginx.ink/articlePicture/janx11690120343591978', 1, '2023-07-23 21:52:23');
INSERT INTO `resource` VALUES (141, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236979811806', 1, '2023-10-02 16:56:21');
INSERT INTO `resource` VALUES (142, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990899335', 1, '2023-10-02 16:56:32');
INSERT INTO `resource` VALUES (143, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990892292', 1, '2023-10-02 16:56:33');
INSERT INTO `resource` VALUES (144, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990893158', 1, '2023-10-02 16:56:33');
INSERT INTO `resource` VALUES (145, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990894595', 1, '2023-10-02 16:56:34');
INSERT INTO `resource` VALUES (146, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990897437', 1, '2023-10-02 16:56:34');
INSERT INTO `resource` VALUES (147, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990893895', 1, '2023-10-02 16:56:35');
INSERT INTO `resource` VALUES (148, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990899487', 1, '2023-10-02 16:56:35');
INSERT INTO `resource` VALUES (149, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990899533', 1, '2023-10-02 16:56:36');
INSERT INTO `resource` VALUES (150, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990898120', 1, '2023-10-02 16:56:36');
INSERT INTO `resource` VALUES (151, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990900844', 1, '2023-10-02 16:56:36');
INSERT INTO `resource` VALUES (152, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990893189', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (153, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx1169623699089488', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (154, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990897712', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (155, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990898478', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (156, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990895581', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (157, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990901176', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (158, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990896879', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (159, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990901982', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (160, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990897587', 1, '2023-10-02 16:56:37');
INSERT INTO `resource` VALUES (161, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990895355', 1, '2023-10-02 16:56:38');
INSERT INTO `resource` VALUES (162, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990896107', 1, '2023-10-02 16:56:38');
INSERT INTO `resource` VALUES (163, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696236990895678', 1, '2023-10-02 16:56:38');
INSERT INTO `resource` VALUES (164, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696237107502671', 1, '2023-10-02 16:58:28');
INSERT INTO `resource` VALUES (165, 1, 'log-upload/2023/10', '//qiniu.roginx.ink/log-upload/2023/10/janx11696237107502303', 1, '2023-10-02 16:58:28');
INSERT INTO `resource` VALUES (171, 1, 'webBackgroundImage', '//qiniu.roginx.ink/webBackgroundImage/janx11699718135439894', 1, '2023-11-11 23:55:37');
INSERT INTO `resource` VALUES (172, 1, 'im/groupMessage', '//qiniu.roginx.ink/im/groupMessage/janx11703486179793311', 1, '2023-12-25 14:36:19');
INSERT INTO `resource` VALUES (173, 1, 'commentPicture', '//qiniu.roginx.ink/commentPicture/janx11703497579651900', 1, '2023-12-25 17:46:19');
INSERT INTO `resource` VALUES (174, 1, 'commentPicture', '//qiniu.roginx.ink/commentPicture/janx11703497706128323', 1, '2023-12-25 17:48:26');
INSERT INTO `resource` VALUES (175, 1, 'randomCover', '//qiniu.roginx.ink/randomCover/janx11704286417972668', 1, '2024-01-03 20:53:40');
INSERT INTO `resource` VALUES (176, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569461513329', 1, '2024-01-18 17:17:43');
INSERT INTO `resource` VALUES (177, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474271338', 1, '2024-01-18 17:17:55');
INSERT INTO `resource` VALUES (178, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474277572', 1, '2024-01-18 17:17:55');
INSERT INTO `resource` VALUES (179, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474273107', 1, '2024-01-18 17:17:57');
INSERT INTO `resource` VALUES (180, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474271589', 1, '2024-01-18 17:17:58');
INSERT INTO `resource` VALUES (181, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx1170556947427726', 1, '2024-01-18 17:17:59');
INSERT INTO `resource` VALUES (182, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474276993', 1, '2024-01-18 17:17:59');
INSERT INTO `resource` VALUES (183, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474272492', 1, '2024-01-18 17:17:59');
INSERT INTO `resource` VALUES (184, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275956', 1, '2024-01-18 17:18:00');
INSERT INTO `resource` VALUES (185, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474276764', 1, '2024-01-18 17:18:00');
INSERT INTO `resource` VALUES (186, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474274389', 1, '2024-01-18 17:18:00');
INSERT INTO `resource` VALUES (187, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474276947', 1, '2024-01-18 17:18:02');
INSERT INTO `resource` VALUES (188, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474277561', 1, '2024-01-18 17:18:02');
INSERT INTO `resource` VALUES (189, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474273467', 1, '2024-01-18 17:18:02');
INSERT INTO `resource` VALUES (190, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275972', 1, '2024-01-18 17:18:02');
INSERT INTO `resource` VALUES (191, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx1170556947427485', 1, '2024-01-18 17:18:02');
INSERT INTO `resource` VALUES (192, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474272499', 1, '2024-01-18 17:18:03');
INSERT INTO `resource` VALUES (193, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275158', 1, '2024-01-18 17:18:03');
INSERT INTO `resource` VALUES (194, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474272145', 1, '2024-01-18 17:18:03');
INSERT INTO `resource` VALUES (195, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474271235', 1, '2024-01-18 17:18:03');
INSERT INTO `resource` VALUES (196, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474275619', 1, '2024-01-18 17:18:03');
INSERT INTO `resource` VALUES (197, 1, 'log-upload/2024/1', '//qiniu.roginx.ink/log-upload/2024/1/janx11705569474270135', 1, '2024-01-18 17:18:03');

-- ----------------------------
-- Table structure for resource_path
-- ----------------------------
DROP TABLE IF EXISTS `resource_path`;
CREATE TABLE `resource_path`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `title` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '标题',
  `cover` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '封面',
  `url` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '链接',
  `introduction` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '简介',
  `type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '资源类型',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用[0:否，1:是]',
  `remark` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '备注',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '资源路径' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of resource_path
-- ----------------------------
INSERT INTO `resource_path` VALUES (1, 'Aurora', 'https://img2.40407.com/upload/202006/19/19111550db610ZMAm6Do3asvgw9.jpg', 'https://www.janxland.xyz', '站长的代码黑历史', 'friendUrl', 1, NULL, '2022-12-24 17:59:57', 0);
INSERT INTO `resource_path` VALUES (2, 'YesMusicPlay', '//qiniu.roginx.ink/articleCover/janx11676196004879125', '//music.roginx.ink', '一个重构开源项目YesMuiscPlay在线播放平台，目前已聚合QQ音乐和网易云音乐', 'friendUrl', 1, NULL, '2023-02-12 18:00:28', 0);
INSERT INTO `resource_path` VALUES (3, 'Alist 聚合云盘', 'https://alist.nn.ci/logo.svg', '//alist.roginx.ink', '🗂️ A file list program that supports multiple storage, powered by Gin and Solidjs.', 'friendUrl', 1, NULL, '2023-03-09 10:35:18', 0);

-- ----------------------------
-- Table structure for sort
-- ----------------------------
DROP TABLE IF EXISTS `sort`;
CREATE TABLE `sort`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `sort_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '分类名称',
  `sort_description` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '分类描述',
  `sort_type` tinyint NOT NULL DEFAULT 1 COMMENT '分类类型[0:导航栏分类，1:普通分类]',
  `priority` int NULL DEFAULT NULL COMMENT '导航栏分类优先级：数字小的在前面',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '分类' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sort
-- ----------------------------
INSERT INTO `sort` VALUES (1, '博客', '个人博客', 1, NULL);
INSERT INTO `sort` VALUES (2, '生活', '分享琐碎生活', 1, NULL);
INSERT INTO `sort` VALUES (3, '资源', '分享有用资源', 1, NULL);
INSERT INTO `sort` VALUES (4, '归档', '归档', 0, 1);

-- ----------------------------
-- Table structure for todolist
-- ----------------------------
DROP TABLE IF EXISTS `todolist`;
CREATE TABLE `todolist`  (
  `id` int NOT NULL AUTO_INCREMENT,
  `dependency_id` int NOT NULL DEFAULT 0,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `status` enum('todo','doing','done') CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT 'todo',
  `start_time` datetime NULL DEFAULT NULL,
  `end_time` datetime NULL DEFAULT NULL,
  `urgency` int NOT NULL DEFAULT 1,
  `executor` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `dependency_id`(`dependency_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of todolist
-- ----------------------------
INSERT INTO `todolist` VALUES (1, 0, '完成Todos后端', '以下是一个可能的 Todolist 项目后端介绍列表，其中包括了一些可能需要涵盖的主题：\n\n项目概述：介绍 Todolist 项目的目的和主要功能，例如创建、更新和删除任务等。\n\n技术栈：列出项目中使用的技术和框架，例如 Spring Boot、Hibernate、Spring Data JPA、MySQL 等。\n\n数据库结构：提供数据库结构的详细信息，包括项目中使用的表、列和关系，以及如何在数据库中进行数据操作。\n\n接口文档：提供项目中定义的 API 接口文档，包括每个接口的输入和输出参数、请求和响应示例等。\n\n安全性：描述项目的安全性措施，例如身份验证、授权和访问控制等。\n\n性能优化：提供如何增强项目性能的建议，例如使用缓存、优化数据库查询等。\n\n错误处理：描述如何进行测试、调试和错误处理，包括如何处理异常和错误。\n\n部署和维护：提供如何安装、配置和部署项目的说明，并描述如何维护项目，包括如何进行数据库备份、监控和日志记录等。\n\n开发人员指南：提供如何进行开发工作的指南，包括如何设置开发环境、进行代码管理和版本控制等。\n\n未来计划：描述未来可能的功能和改进，以及如何参与到项目中来。', 'done', '2023-07-13 00:00:00', '2023-07-09 12:47:13', 1, '0', '2023-07-11 09:52:12', '2023-07-11 09:52:12');
INSERT INTO `todolist` VALUES (2, 0, '完成Todos前端', 'VCalendar可以帮助您轻松管理日期和时间。以下是您可以创建的一些待办事项列表：\n\n按日期分类：将待办事项按日期分类，以便您可以轻松查看每天需要完成的任务。您可以使用VCalendar提供的日历视图来显示每个日期的任务列表。\n\n按优先级分类：将待办事项按照优先级分为高、中、低，或者使用类似于重要性标记的方式来标记它们，以便您可以在需要时快速识别出最重要的任务。\n\n按类别分类：将待办事项按照类别分组，例如工作、个人、家庭等，以便您可以轻松查看每个类别的任务列表。\n\n按进度分类：将待办事项按照完成状态分类，例如已完成、未完成或进行中，以便您可以轻松了解当前任务的状态。', 'done', '2023-07-11 09:52:36', '2023-07-11 09:52:36', 1, '0', '2023-07-11 09:52:45', '2023-07-11 09:52:45');
INSERT INTO `todolist` VALUES (3, 0, '数智化人才培养训练营', '数智化人才培养训练营高级班，感觉只是把我学过的再讲一遍，就想混个结营证书。', 'done', '2023-07-11 09:50:37', '2023-07-12 09:50:37', 1, '0', '2023-07-11 09:52:55', '2023-07-11 09:52:55');
INSERT INTO `todolist` VALUES (4, 0, '🎂给朋友过生日', '这里是简介', 'done', '2023-07-11 10:00:18', '2023-07-11 10:00:18', 1, '0', '2023-07-11 10:03:02', '2023-07-11 10:03:02');
INSERT INTO `todolist` VALUES (5, 0, '写一篇博客——Todos', '这里是简介', 'doing', '2023-07-11 10:08:51', '2023-06-12 10:08:51', 1, '0', '2023-07-11 10:08:55', '2023-07-11 10:08:55');
INSERT INTO `todolist` VALUES (6, 0, '数智化训练营总结与海报', '这里是简介', 'done', '2023-07-11 10:39:40', '2023-06-28 10:39:40', 1, '0', '2023-07-11 10:40:06', '2023-07-11 10:40:06');
INSERT INTO `todolist` VALUES (7, 0, '⭐做《财务管理系统》', '这里是简介', 'doing', '2023-07-23 10:39:40', '2023-07-01 10:39:40', 1, '0', '2023-07-15 10:40:06', '2023-07-15 10:40:06');
INSERT INTO `todolist` VALUES (8, 0, '⭐《服务矩阵》计划启动', '<h3>介绍</h3>\n<p>		「服务矩阵」是一项倡议，旨在通过提供闲置的计算资源（云服务器）和已备案的 ROGINX.INK 二级域名，邀请有创意的个人加入。我希望通过这种方式承担一些成本并丰富 ROGINX.INK 提供的服务。加入后，小伙伴们可以提供服务并入驻，ROGINX.INK 的域名将涵盖多种服务，例如小程序后台、学习资源分享、个人博客等（我更希望能有更多好的付费服务的想法）。在此期间，我们可以互相交流学习，并一起共享项目成果。</p>\n<h3>加入</h3>\n<p>联系方式：</p>\n<ul>\n<li>QQ：<a href=\'tencent://AddContact/?fromId=50&amp;fromSubId=1&amp;subcmd=all&amp;uin=983341575\'>983341575</a></li>\n<li>微信：janxland</li>\n<li>邮箱：<a href=\'mailto:janxland@qq.com\' target=\'_blank\' class=\'url\'>janxland@qq.com</a></li>', 'done', '2027-07-03 19:29:45', '2017-06-07 19:29:45', 1, '0', '2023-07-11 19:33:59', '2023-07-11 19:33:59');
INSERT INTO `todolist` VALUES (9, 0, '💪每日锻炼💪', '    <ul>\n      <li>\n        <input type=\"checkbox\" checked>\n        <label for=\"exercise1\">至 2023.7.11</label>\n      </li>\n      <li>\n        <input type=\"checkbox\" checked>\n        <label for=\"exercise1\"> 2023.7.12</label>\n      </li>\n   <li>\n        <input type=\"checkbox\" checked>\n        <label for=\"exercise1\"> 2023.7.13</label>\n      </li>\n   <li>\n        <input type=\"checkbox\" checked>\n        <label for=\"exercise1\"> 2023.7.14</label>\n      </li>\n   <li>\n        <input type=\"checkbox\" checked>\n        <label for=\"exercise1\"> 2023.7.15</label>\n      </li>\n   <li>\n        <input type=\"checkbox\" checked>\n        <label for=\"exercise1\"> 2023.7.16</label>\n      </li>\n    </ul>', 'done', '2024-07-01 08:51:29', '2023-07-01 08:51:29', 1, '0', '2023-07-12 08:52:01', '2023-07-12 08:52:01');
INSERT INTO `todolist` VALUES (10, 0, 'GPT+语音识别+物联网', '如今智能家居、智能小车等产品被迅速投入市场。智能化已经成为一种不可抵挡的行业趋势，我们项目团队为此开发出一种智能助手系统，通过结合自然语言处理技术与语音交互技术，为用户提供便捷、智能的语音交互体验。致力于为用户提供一种智能、自然和贴近人类交流的方式，让人机交互更加智能化和便捷化。为了保持对话的连贯性和一致性，我们建立了一个灵活的对话管理系统，这个系统可以理解用户的上下文和推理逻辑，使得多轮对话更加顺畅、自然。且该语音助手支持多领域的知识和信息，能够回答用户的问题、提供实时查询、管理日程安排、播放音乐等功能。用户可以根据个人偏好，定制助手的语音模式、语速和音调，使得交互过程更加个性化。最终可广泛应用于包括智能音箱、智能手机、车载系统等领域。', 'done', '2023-10-11 21:22:14', '2023-07-13 21:22:14', 1, '0', '2023-07-19 21:23:25', '2023-07-19 21:23:25');
INSERT INTO `todolist` VALUES (11, 0, '个微企微私域系统', '这里是简介', 'doing', '2023-08-04 16:07:56', '2023-08-04 16:07:56', 1, '0', '2023-08-04 16:08:40', '2023-08-04 16:08:40');
INSERT INTO `todolist` VALUES (12, 0, '轻量化CMS', '这里是简介', 'doing', '2023-08-31 16:07:56', '2023-08-04 16:07:56', 1, '0', '2023-08-04 16:09:04', '2023-08-04 16:09:04');
INSERT INTO `todolist` VALUES (13, 0, '校园需求墙小程序', '这里是简介', 'doing', '2023-08-31 16:07:56', '2022-08-01 16:07:56', 1, '0', '2023-08-04 16:09:26', '2023-08-04 16:09:26');
INSERT INTO `todolist` VALUES (14, 0, 'Miru聚合多媒体应用', '这里是简介', 'done', '2024-08-01 11:51:10', '2023-08-11 11:51:10', 1, '0', '2023-08-11 11:51:40', '2023-08-11 11:51:40');
INSERT INTO `todolist` VALUES (15, 0, '“诚信纸巾”软硬件开发', '这里是简介', 'doing', '2023-10-27 16:53:23', '2023-11-09 16:51:09', 1, '0', '2023-10-27 16:52:59', '2023-11-10 16:51:39');
INSERT INTO `todolist` VALUES (16, 0, '期末考试', '统计学\n管理学\n微观经济学\n线性代数\n人工智能导论\n英语', 'done', '2024-02-13 22:59:16', '2023-12-05 22:59:16', 1, '0', '2024-01-05 23:00:38', '2024-01-05 23:00:38');

-- ----------------------------
-- Table structure for tree_hole
-- ----------------------------
DROP TABLE IF EXISTS `tree_hole`;
CREATE TABLE `tree_hole`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `avatar` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '头像',
  `message` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '留言',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '树洞' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tree_hole
-- ----------------------------
INSERT INTO `tree_hole` VALUES (1, 'https://q1.qlogo.cn/g?b=qq&s=100&nk=983341575', '测试', '2022-12-23 12:00:21', 0);
INSERT INTO `tree_hole` VALUES (2, NULL, '1!5!', '2023-03-15 10:29:53', 1);
INSERT INTO `tree_hole` VALUES (3, NULL, '我去，原🤗', '2023-04-08 22:26:26', 0);
INSERT INTO `tree_hole` VALUES (4, '//qiniu.roginx.ink/userAvatar/song31678848157414666', '脑公好棒', '2023-07-21 22:29:16', 0);
INSERT INTO `tree_hole` VALUES (5, '//qiniu.roginx.ink/userAvatar/song31678848157414666', '🤣👉🤡', '2023-07-21 22:29:39', 0);
INSERT INTO `tree_hole` VALUES (6, '//qiniu.roginx.ink/userAvatar/song31678848157414666', '工作累死我了', '2023-07-21 22:30:13', 0);
INSERT INTO `tree_hole` VALUES (7, NULL, '牛批', '2023-11-24 10:25:18', 0);

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `username` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户名',
  `password` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '密码',
  `phone_number` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '手机号',
  `email` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '用户邮箱',
  `permission` int NULL DEFAULT 0 COMMENT '用户单独权限级',
  `privilege_group` int(8) UNSIGNED ZEROFILL NULL DEFAULT 00000000 COMMENT '权限组',
  `user_status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用[0:否，1:是]',
  `gender` tinyint NULL DEFAULT NULL COMMENT '性别[1:男，2:女，0:保密]',
  `open_id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT 'openId',
  `avatar` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '头像',
  `introduction` varchar(4096) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '简介',
  `user_type` tinyint NOT NULL DEFAULT 2 COMMENT '用户类型[0:admin，1:管理员，2:普通用户]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最终修改时间',
  `update_by` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '最终修改人',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_username`(`username` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 15 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '用户信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (1, 'janx', 'd334671e9bffe19b33119845fc88d37d', NULL, 'janxland@qq.com', 1, 00000000, 1, 1, NULL, 'https://q1.qlogo.cn/g?b=qq&s=100&nk=983341575', '新年新开始。', 0, '2022-12-22 17:34:57', '2023-05-03 23:42:18', NULL, 0);
INSERT INTO `user` VALUES (2, 'roginx', 'd334671e9bffe19b33119845fc88d37d', NULL, 'janxland@gmail.com', 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-01-27 15:37:18', '2023-01-27 15:39:18', NULL, 0);
INSERT INTO `user` VALUES (3, 'song', '3f0d6e240f53e56ee23e8c72bb28eda1', NULL, '2860177490@qq.com', 0, 00000000, 1, 0, NULL, '//qiniu.roginx.ink/userAvatar/song31678848157414666', NULL, 2, '2023-03-15 10:32:11', '2023-03-15 10:42:38', NULL, 0);
INSERT INTO `user` VALUES (4, 'aazhuzi', 'c43d374e740b0422dd9b4f396a54101c', NULL, NULL, 0, 00000000, 1, 0, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-03-18 22:54:15', '2023-03-18 22:54:48', NULL, 0);
INSERT INTO `user` VALUES (5, '1897405928', '8029b2e9f33f3e6f0dc0ada10c1b149e', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-05-10 10:25:57', '2023-05-10 10:25:57', NULL, 0);
INSERT INTO `user` VALUES (6, 'guigui', 'b85bc0e5e6121b0cb1263b565e090df0', NULL, NULL, 0, 00000000, 1, 1, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-06-05 19:27:06', '2023-06-05 19:27:28', NULL, 0);
INSERT INTO `user` VALUES (7, 'MuRanstr', '7e55e64902f55e07a7dcca3514f8c3d3', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-06-16 20:27:43', '2023-06-16 20:27:43', NULL, 0);
INSERT INTO `user` VALUES (8, 'zyx', '8ff3d7f6e92f860e941b5d9e66647d33', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-07-03 18:36:18', '2023-07-03 18:36:18', NULL, 0);
INSERT INTO `user` VALUES (9, '群青', '40bf806bcecc6034729ddd6195160690', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-08-21 16:12:04', '2023-08-21 16:12:04', NULL, 0);
INSERT INTO `user` VALUES (10, 'xiaoanshuai', '5f18a69279f3bb3980061357c4d4552f', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2023-11-24 10:47:28', '2023-11-24 10:47:28', NULL, 0);
INSERT INTO `user` VALUES (11, '烟花吻不到星辰', '28238afff425b4c4ea4f053fcf074988', NULL, NULL, 0, 00000000, 1, 1, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2024-01-06 11:33:35', '2024-01-06 11:33:44', NULL, 0);
INSERT INTO `user` VALUES (12, 'zzyykk', 'b9bb0844a2672b0c82a87d241d34588b', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2024-01-06 14:00:00', '2024-01-06 14:00:00', NULL, 0);
INSERT INTO `user` VALUES (13, 'zzyykl', 'b9bb0844a2672b0c82a87d241d34588b', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2024-01-06 14:02:15', '2024-01-06 14:02:15', NULL, 0);
INSERT INTO `user` VALUES (14, 'ki', 'b30703e327574ee95d4f1de0c90258f8', NULL, NULL, 0, 00000000, 1, NULL, NULL, 'https://ui-avatars.com/api/?name=User', NULL, 2, '2024-01-08 14:43:23', '2024-01-08 14:43:23', NULL, 0);

-- ----------------------------
-- Table structure for web_info
-- ----------------------------
DROP TABLE IF EXISTS `web_info`;
CREATE TABLE `web_info`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `web_name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '网站名称',
  `web_title` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '网站信息',
  `notices` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '公告',
  `footer` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '页脚',
  `background_image` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '背景',
  `avatar` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '头像',
  `random_avatar` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '随机头像',
  `random_name` varchar(4096) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT '随机名称',
  `random_cover` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '随机封面',
  `waifu_json` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '看板娘消息',
  `status` tinyint(1) NOT NULL DEFAULT 1 COMMENT '是否启用[0:否，1:是]',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '网站信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of web_info
-- ----------------------------
INSERT INTO `web_info` VALUES (1, 'ROGINSHIN', '在那时候简单的好傻，却又空前绝后快乐啊', '[\"站长正在学习人工智能...\",\"没有内容很可能宿舍停电了...\"]', 'ROGINSHIN', 'https://kanokano.cn/wp-content/uploads/topimg/banner.webp', 'https://thirdqq.qlogo.cn/g?b=sdk&k=mxAU6MBstMzAibTY0AWO1QQ&kti=ZR_QaQAAAAE&s=100&t=1685505183', '[\"https://ui-avatars.com/api/?name=User\",\"https://api.multiavatar.com/roginx.svg\",\"https://api.multiavatar.com/1.svg\"]', NULL, 'null', '繁华落尽，唯有心境常静。', 1);

-- ----------------------------
-- Table structure for wei_yan
-- ----------------------------
DROP TABLE IF EXISTS `wei_yan`;
CREATE TABLE `wei_yan`  (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '用户ID',
  `like_count` int NOT NULL DEFAULT 0 COMMENT '点赞数',
  `content` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '内容',
  `type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '类型',
  `source` int NULL DEFAULT NULL COMMENT '来源标识',
  `is_public` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否公开[0:仅自己可见，1:所有人可见]',
  `create_time` datetime NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `deleted` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否启用[0:未删除，1:已删除]',
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `user_id`(`user_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 20 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = '微言表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of wei_yan
-- ----------------------------
INSERT INTO `wei_yan` VALUES (8, 1, 0, 'sad', 'news', 55, 1, '2022-12-24 17:53:15', 1);
INSERT INTO `wei_yan` VALUES (9, 1, 0, 'NeteaseCloudMuiscAPI中接入部分QQ音乐API[脱单doge]', 'news', 61, 1, '2023-02-06 16:59:06', 1);
INSERT INTO `wei_yan` VALUES (10, 1, 0, '部署Api至腾讯云Serverless [热词系列_三连]', 'news', 61, 1, '2023-02-06 00:00:00', 0);
INSERT INTO `wei_yan` VALUES (11, 1, 0, 'NeteaseCloudMuiscAPI中接入部分QQ音乐API[脱单doge]', 'news', 61, 1, '2023-02-06 17:37:58', 0);
INSERT INTO `wei_yan` VALUES (12, 1, 0, '对接酷狗音乐部分Api', 'news', 61, 1, '2023-02-27 10:19:01', 0);
INSERT INTO `wei_yan` VALUES (13, 1, 0, '增加其他加载其他网站图片接口', 'news', 68, 1, '2023-04-09 20:06:00', 0);
INSERT INTO `wei_yan` VALUES (14, 1, 0, '增加随机图片API', 'news', 68, 1, '2023-04-08 00:00:00', 0);
INSERT INTO `wei_yan` VALUES (15, 1, 0, 'New Feature\n1.完成type:aurora内容前置显示\n2.使用vue-lazyload懒加载节省流量\n3.完善router路由\nFuture TODO\n1.搭建一个云函数\n2.云函数转发外链图片（过referer防盗链）\n3.云函数转发外站图片', 'news', 68, 1, '2023-04-21 21:28:15', 1);
INSERT INTO `wei_yan` VALUES (16, 1, 0, '🎶New Feature\n✔1.完成type:aurora内容前置显示\n✔2.使用vue-lazyload懒加载节省流量\n✔3.完善router路由\n\n🎀Future TODO\n1.搭建一个云函数\n2.云函数转发外链图片（过referer防盗链）\n3.云函数转发外站图片', 'news', 68, 1, '2023-04-21 21:32:27', 0);
INSERT INTO `wei_yan` VALUES (17, 1, 0, '1.增加解灰接口\n2.完善下载功能\n3.可以播放下载灰色歌曲', 'news', 61, 1, '2023-06-03 00:16:17', 0);
INSERT INTO `wei_yan` VALUES (18, 1, 0, '跟随源仓库更新至2.9.11', 'news', 80, 1, '2023-11-11 15:58:55', 0);
INSERT INTO `wei_yan` VALUES (19, 1, 0, '[热词系列_三连]不同专业需要做的题目不同，已添加函数与数值类型。\n没有的题目可以直接Call我，我补一下。[奋斗]', 'news', 85, 1, '2023-12-26 14:05:38', 0);

SET FOREIGN_KEY_CHECKS = 1;
